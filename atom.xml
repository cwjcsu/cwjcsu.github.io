<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>debug4me | 子非鱼-博客</title>
  <subtitle>码农，数学物理科幻爱好者 - 子非鱼，安知鱼之乐</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://debug4.me/"/>
  <updated>2016-07-01T13:35:51.625Z</updated>
  <id>http://debug4.me/</id>
  
  <author>
    <name>debug4me@163.com</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>稳定婚姻的数学模型</title>
    <link href="http://debug4.me/CestLaVie/stable-marriage/"/>
    <id>http://debug4.me/CestLaVie/stable-marriage/</id>
    <published>2016-07-01T12:27:41.000Z</published>
    <updated>2016-07-01T13:35:51.625Z</updated>
    
    <content type="html">&lt;h3 id=&quot;完美的婚姻配对&quot;&gt;&lt;a href=&quot;#完美的婚姻配对&quot; class=&quot;headerlink&quot; title=&quot;完美的婚姻配对&quot;&gt;&lt;/a&gt;完美的婚姻配对&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;婚姻的最佳配对方案是什么呢？当然是，每个人的另一半正好都是自己的“第一选择”。&lt;/strong&gt;&lt;br&gt;这虽然很完美，但绝大多数情况下都不可能实现。比方说，男 1 号最喜欢的是女 1 号，而女 1 号的最爱不是男 1 号，这两个人的最佳选择就不可能被同时满足。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;什么是稳定的婚姻？&quot;&gt;&lt;a href=&quot;#什么是稳定的婚姻？&quot; class=&quot;headerlink&quot; title=&quot;什么是稳定的婚姻？&quot;&gt;&lt;/a&gt;什么是稳定的婚姻？&lt;/h3&gt;&lt;p&gt;在婚姻关系中，比当前伴侣更好的异性，都不会认为自己也是一个更好的选择。这个婚姻配对就是稳定的。通俗一点说，分成两种情况：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我的老婆（或老公）是最好的对象，我知足了；&lt;/li&gt;
&lt;li&gt;有比我老婆（或老公）更好的对象，但是TA们都看不上我；&lt;br&gt;注意，对于第2种情况，如果我看上了另外的人，而这个人也看上了我，呵呵，那我跟当前伴侣的婚姻关系就不稳定了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;有一个&lt;a href=&quot;https://en.wikipedia.org/wiki/Stable_marriage_problem&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;数学算法&lt;/a&gt;,不管男女多少人，不管他们的偏好是什么，总是可以找到一个稳定的配对模型，使得大家都不会出轨。算法的具体描述过程，不赘述，网上搜索“Gale-Shapley算法”，或者“稳定婚姻问题”。我这里给出通俗流程和可操作步骤。&lt;/p&gt;
&lt;h3 id=&quot;可操作步骤&quot;&gt;&lt;a href=&quot;#可操作步骤&quot; class=&quot;headerlink&quot; title=&quot;可操作步骤&quot;&gt;&lt;/a&gt;可操作步骤&lt;/h3&gt;&lt;p&gt;对于每个男人：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;把所有女人按喜欢程度排一个序；&lt;/li&gt;
&lt;li&gt;从没拒绝过自己的女人中选最喜欢的向她表白（不管她现在是否是单身）。如果她不接受，就把她加入拒绝列表，继续步骤2。&lt;/li&gt;
&lt;li&gt;如果男人被甩了，继续步骤2；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于每个女人：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;当有人向你表白的时候，你可以接受也可以拒绝。&lt;/li&gt;
&lt;li&gt;当你已经接受了一个男人后，又有你更加喜欢的男人向你表白时，你必须接受他并放弃现男友（注意是必须，否则无法保证形成稳定的配对）&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h3&gt;&lt;p&gt;仔细推敲以后，你会发现，在这个系统里面，男人都是被甩的（女友被她认为更好的男人抢走了），但这个算法却是对男人更有利的。&lt;/p&gt;
&lt;p&gt;稳定婚姻的匹配方案不止一种，已经证明，按照上述算法在所有稳定婚姻搭配方案中，男人总是能找到自己最理想的那个女人，而女人得到的却都是最差的搭配。&lt;/p&gt;
&lt;p&gt;换句话说，男人搞定了自己能力范围内的最好的女人；而女人只等着被人挑，自己更喜欢的而且有能力搞定的男人很有可能找了别人。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;题外话&lt;/strong&gt;：此时，倘若有某位女性知道所有其他人的偏好列表，经过精心计算推演，她会发现，可能故意拒绝掉本不该拒绝的人，暂时保留一个较差的人在身边，或许有机会等来更好的结果。当然，在实际生活中应用这种算法，不得不考虑一些可能的欺诈与博弈。&lt;/p&gt;
&lt;h3 id=&quot;数学模型与实际的不同&quot;&gt;&lt;a href=&quot;#数学模型与实际的不同&quot; class=&quot;headerlink&quot; title=&quot;数学模型与实际的不同&quot;&gt;&lt;/a&gt;数学模型与实际的不同&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;首先，这个算法是从生活中提炼出来的，自然在生活中时时刻刻发生着；只是数学模型去掉了很多不确定性，添加了一些合理的约束（这是数学建模的手段），从而只是反映生活中的一个大体趋势，而不是个例；&lt;/li&gt;
&lt;li&gt;算法中的喜欢（偏好）不是一个确定的概念，实际生活中可能因为对方的外在形象、经济能力等因素变化，可能误判。而对于同一个人，在不同阶段对喜欢的定义也不一样，人的婚姻观、价值观总是在不断变化的；对每个样本的了解程度不一样，也会影响这个排序；&lt;/li&gt;
&lt;li&gt;样本集合在变化：随着时间的推移，男人女人总是会遇到很多新的人，中间很可能有自己更喜欢的，然后选择了更加喜欢的。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;该来点结论了&quot;&gt;&lt;a href=&quot;#该来点结论了&quot; class=&quot;headerlink&quot; title=&quot;该来点结论了&quot;&gt;&lt;/a&gt;该来点结论了&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;男同胞们&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;努力扩展自己的圈子，增大样本集合，接触和了解她们，然后进入2；&lt;/li&gt;
&lt;li&gt;按照算法规则排序，一个个下手，当被拒绝了或者被甩了，把她加入黑名单，重新执行第1步；&lt;br&gt;数学理论告诉你：根据上面的策略，你最终肯定可以找到一个自己最喜欢的人相守一辈子。（可以这样理解：愿意跟你相守一辈子的人中，你找到了最喜欢的那个）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;女同胞们&lt;/strong&gt;：&lt;br&gt;这个算法对女性不利，但是女性同样可以追求自己喜欢的人，而不是等待男人来追然后自己做个选择。如果你总是被动的，根据算法的规则，最终你很可能得到的是最差的那一个&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;兄弟姐们们&lt;/strong&gt;：&lt;br&gt;当你已经找到对象，且你是他最中意的人，却有一个你认为更好的人追求你时，你要小心了：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;现在认为更好不代表以后也是更好的，你的情绪、暂时的兴奋和虚荣会影响你的判断；&lt;/li&gt;
&lt;li&gt;有些所谓更好的人并不会择一而终。有些男人追求女孩，可能是因为一时被美貌所迷，等到女人老珠黄了。。。说远了，或许上了床以后他就放弃了，这都不是爱；&lt;/li&gt;
&lt;li&gt;不排除，你确实遇到最合适最喜欢的那一个。那祝你好运吧。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;说了这么多，如果有人看完，希望不要更加混乱。是的，像量子物理一样，不确定性正是人性的最根本特征。那到底应该怎么做呢？走得远了，别忘了为什么出发。漫漫人生路，不忘初心，方得始终。&lt;/p&gt;
&lt;h3 id=&quot;参考文献&quot;&gt;&lt;a href=&quot;#参考文献&quot; class=&quot;headerlink&quot; title=&quot;参考文献&quot;&gt;&lt;/a&gt;参考文献&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Stable_marriage_problem&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Stable marriage problem&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      用数学的方法告诉你，为什么找对象就要广撒网、要发狠、要脸皮厚。
    
    </summary>
    
      <category term="CestLaVie" scheme="http://debug4.me/categories/CestLaVie/"/>
    
    
      <category term="找对象" scheme="http://debug4.me/tags/%E6%89%BE%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>我回来了</title>
    <link href="http://debug4.me/CestLaVie/imback/"/>
    <id>http://debug4.me/CestLaVie/imback/</id>
    <published>2016-06-12T16:41:40.000Z</published>
    <updated>2016-07-01T12:31:43.375Z</updated>
    
    <content type="html">&lt;p&gt;由于家里的电脑重装了系统，昨晚重新搭建了node+hexo环境。结果&lt;code&gt;hexo s&lt;/code&gt;没有任何异常，但是无法通过&lt;a href=&quot;http://localhost:4000&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000&lt;/a&gt; 查看到任何文章。后来…&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;后来用下面命令找到了原来是Foxit程序占用了这个端口。&lt;br&gt;&lt;figure class=&quot;highlight taggerscript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;C:&lt;span class=&quot;symbol&quot;&gt;\U&lt;/span&gt;sers&lt;span class=&quot;symbol&quot;&gt;\A&lt;/span&gt;tlas&amp;gt;netstat -aon |findstr 4000&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;果断结束进程，然后去&lt;code&gt;msconfig&lt;/code&gt;里面把Foxit相关的自启动服务全部停止。&lt;/p&gt;
&lt;p&gt;你以为这就完了？&lt;/p&gt;
&lt;p&gt;NO！！！&lt;br&gt;sublime text 3又闹脾气了，（这个版本&lt;a href=&quot;https://download.sublimetext.com/Sublime%20Text%20Build%203114%20x64%20Setup.exe&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;win 7 64 bit build 3114&lt;/a&gt;），直接把系统卡成翔。&lt;/p&gt;
&lt;p&gt;重装subl3=》打开md文件：卡死，=》重启；&lt;/p&gt;
&lt;p&gt;卸载subl3的一个markdown组件的问题=》打开md文件，卡死=》重启；&lt;/p&gt;
&lt;p&gt;使用portable版本，并且删除sublime的程序文件，打开md文件，OK了。&lt;/p&gt;
&lt;h3 id=&quot;昨天去digitalocean充值了25美元，够用5个月了。&quot;&gt;&lt;a href=&quot;#昨天去digitalocean充值了25美元，够用5个月了。&quot; class=&quot;headerlink&quot; title=&quot;昨天去digitalocean充值了25美元，够用5个月了。&quot;&gt;&lt;/a&gt;昨天去&lt;a href=&quot;https://cloud.digitalocean.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;digitalocean&lt;/a&gt;充值了25美元，够用5个月了。&lt;/h3&gt;&lt;h3 id=&quot;今天开始，整理代码并写博客。&quot;&gt;&lt;a href=&quot;#今天开始，整理代码并写博客。&quot; class=&quot;headerlink&quot; title=&quot;今天开始，整理代码并写博客。&quot;&gt;&lt;/a&gt;今天开始，整理代码并写博客。&lt;/h3&gt;</content>
    
    <summary type="html">
    
      I&#39;m back.我回来了。
    
    </summary>
    
      <category term="CestLaVie" scheme="http://debug4.me/categories/CestLaVie/"/>
    
    
      <category term="hexo" scheme="http://debug4.me/tags/hexo/"/>
    
      <category term="blogs" scheme="http://debug4.me/tags/blogs/"/>
    
  </entry>
  
  <entry>
    <title>关于庄子“子非鱼”是诡辩，我为你正名</title>
    <link href="http://debug4.me/Math/logic-and-debate/"/>
    <id>http://debug4.me/Math/logic-and-debate/</id>
    <published>2015-11-21T05:03:07.000Z</published>
    <updated>2016-06-12T15:21:35.748Z</updated>
    
    <content type="html">&lt;p&gt;一般评论和著作都认为庄子对于“子非鱼”的辩论是诡辩，输了惠子一筹，其实不是。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;原文及翻译&quot;&gt;&lt;a href=&quot;#原文及翻译&quot; class=&quot;headerlink&quot; title=&quot;原文及翻译&quot;&gt;&lt;/a&gt;原文及翻译&lt;/h2&gt;&lt;p&gt;子非鱼的辩论，原文是：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;庄子曰：“鲦鱼出游从容，是鱼乐也。”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;惠子曰：“子非鱼，安知鱼之乐？”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;庄子曰：“子非我，安知我不知鱼之乐？”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;惠子曰：“我非子，固不知子矣，子固非鱼也，子不知鱼之乐，全矣。”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;庄子曰：“请循其本。子曰汝安知鱼乐云者，既已知吾知之而问我，我知之濠上也。”&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;精简翻译是：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;庄子说：鱼很快乐。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;惠子说：你不是鱼，你怎么知道鱼很快乐呢？&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;庄子说：你不是我，你怎么知道我不知鱼快乐呢？&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;惠子说：我不是你，所以我不知道你；你不是鱼，所以，你也不知道鱼的快乐。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;庄子说：请回到开始时的话题，你刚才说的‘你不是鱼，怎么知道鱼的快乐呢？’这句话，就是说你已经知道了我知道鱼的快乐却还来问我，我是在濠上知道的。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;如何得出诡辩的误解？&quot;&gt;&lt;a href=&quot;#如何得出诡辩的误解？&quot; class=&quot;headerlink&quot; title=&quot;如何得出诡辩的误解？&quot;&gt;&lt;/a&gt;如何得出诡辩的误解？&lt;/h2&gt;&lt;p&gt;我们先用接近逻辑学的数学语言，把这些关键点列出来，庄子的话可以划分成一个复合命题：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;命题A：鱼快乐。
命题B：庄子知道A。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;认为庄子是诡辩的人的思维逻辑是这样的：&lt;/p&gt;
&lt;p&gt;惠子问 “汝安知鱼乐” ，原本惠子的意思是：“你怎么知道鱼快乐”，庄子把这句话曲解为：“你在哪里知道鱼快乐的”，言下之意，惠子承认了“鱼快乐”和“庄子知道鱼快乐”，只是不知道庄子是在哪里知道的。然后庄子说：“我是在濠水的桥上知道的”。&lt;/p&gt;
&lt;p&gt;咋一看这段文章和翻译，都感觉庄子确实是诡辩，然而，我要为我的偶像正名。&lt;/p&gt;
&lt;h2 id=&quot;惠子的循环论证&quot;&gt;&lt;a href=&quot;#惠子的循环论证&quot; class=&quot;headerlink&quot; title=&quot;惠子的循环论证&quot;&gt;&lt;/a&gt;惠子的循环论证&lt;/h2&gt;&lt;p&gt;从惠子的角度出发，惠子反驳的依据是：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;依据P：不同的个体是不能相知的。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;从这个依据出发，我们重新翻译上面的对话，你可以看出惠子是如果得出这个结论以及如果利用这个结论进行推理的。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;庄子：(1)我知道鱼快乐。
惠子：(2)因为“不同个体不能相知”，所以“你不知道鱼快乐”。
庄子：(3)如果“不同个体不能相知”，那么你不是我，“你也不知道&amp;apos;我不知道鱼快乐&amp;apos;”
惠子：(4)因为“我不知道&amp;apos;你不知道鱼的快乐&amp;apos;，所以“不同个体不能相知”；
      又因为“不同个体不能相知”，所以“你不知道鱼的快乐”。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;大家注意，庄子的回击是假设惠子的逻辑是对的，得出惠子也不可能知道“我不知道鱼快乐”。庄子只是一个假设，然后惠子利用庄子这个假设得出的结论来做论据，证明自己的逻辑是对的。所以，惠子的逻辑过程是&lt;strong&gt;循环论证&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;用更一般的词汇描述这个辩论过程：&lt;br&gt;&lt;figure class=&quot;highlight brainfuck&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;庄子：a知道b。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;惠子：因为a不是b，所以a不知道b。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;庄子：如果“a不是b，a就不知道b”，那么“你不是我，你也不知道我”&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;惠子：因为“我不是你，我就不知道你”，所以，“a不是b，a就不知道b”，所以“你不是鱼，你就不知道鱼”。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以清晰的看出，惠子的论据就是庄子的假设，惠子的论证是&lt;strong&gt;循环论证&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;你扯皮，我也来一个&quot;&gt;&lt;a href=&quot;#你扯皮，我也来一个&quot; class=&quot;headerlink&quot; title=&quot;你扯皮，我也来一个&quot;&gt;&lt;/a&gt;你扯皮，我也来一个&lt;/h2&gt;&lt;p&gt;想起了赵本山的一个小品：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;范：不对，不对，大哥，我喊完四千，你直接喊五千，对不对？ &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;观众：对！ &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;赵：这样啊，乱了。既然咱哥俩，你同意收藏，咱们再喊一次，是不是，听明白这五千到底是谁喊的。起价多少？ &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;生：两千。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;范：我，两千。 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;赵：（落椎）成交！这回不乱了。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其实，前面4句话，庄子看出了惠子用假设得出的结论反过来证明这个假设，心想“惠子你怎么扯皮啊，行吧我也试试，我们重新开始：”&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;庄子：鱼快乐；
惠子：子非鱼，安知鱼之乐；
庄子：我知之濠上也。
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;O(∩&lt;em&gt;∩)O哈哈~&lt;/em&gt;)&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;p&gt;百度关于&lt;a href=&quot;http://baike.baidu.com/view/302629.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;循环论证&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.zhihu.com/question/20037135&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;知乎问答&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一般评论和著作都认为庄子对于“子非鱼”的辩论是诡辩，输了惠子一筹，其实不是。&lt;/p&gt;
    
    </summary>
    
      <category term="Math" scheme="http://debug4.me/categories/Math/"/>
    
    
      <category term="辩论" scheme="http://debug4.me/tags/%E8%BE%A9%E8%AE%BA/"/>
    
      <category term="逻辑学" scheme="http://debug4.me/tags/%E9%80%BB%E8%BE%91%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Project Euler Problem 518 - 等比素数三元组</title>
    <link href="http://debug4.me/Project-Euler/518.prime-triples-and-geometric-sequences/"/>
    <id>http://debug4.me/Project-Euler/518.prime-triples-and-geometric-sequences/</id>
    <published>2015-10-22T12:36:18.000Z</published>
    <updated>2016-06-12T15:21:35.743Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://projecteuler.net/problem=518&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Problem 518 - Prime triples and geometric sequences &lt;/a&gt; ,存在一些素数三元组(a,b,c)，使得(a+1,b+1,c+1)是等比数列，求10&lt;sup&gt;8&lt;/sup&gt;以内的所有这种三元组的元素的和。&lt;em&gt;Completed on 2015-10-22  14:39&lt;/em&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;原题&quot;&gt;&lt;a href=&quot;#原题&quot; class=&quot;headerlink&quot; title=&quot;原题&quot;&gt;&lt;/a&gt;原题&lt;/h2&gt;&lt;p&gt;Let S(n) = a+b+c over all triples (a,b,c) such that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a, b, and c are prime numbers.&lt;/li&gt;
&lt;li&gt;a &amp;lt; b &amp;lt; c &amp;lt; n.&lt;/li&gt;
&lt;li&gt;a+1, b+1, and c+1 form a geometric sequence.&lt;br&gt;For example, S(100) = 1035 with the following triples:&lt;br&gt;(2, 5, 11), (2, 11, 47), (5, 11, 23), (5, 17, 53), (7, 11, 17), (7, 23, 71), (11, 23, 47), (17, 23, 31), (17, 41, 97), (31, 47, 71), (71, 83, 97)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Find S(10&lt;sup&gt;8&lt;/sup&gt;).&lt;/p&gt;
&lt;h2 id=&quot;补偿法&quot;&gt;&lt;a href=&quot;#补偿法&quot; class=&quot;headerlink&quot; title=&quot;补偿法&quot;&gt;&lt;/a&gt;补偿法&lt;/h2&gt;&lt;p&gt;根据等比数列的特征，可以得到$(a+1)(c+1)=(b+1)^2$。将$(b+1)^2$分解质因数之后，每个质因子的幂必然是偶数，从而(a+1)和(c+1)的&lt;strong&gt;相同的&lt;/strong&gt;质因数的幂必然都是同奇或者同偶，那么只需要把这些奇数次质因数相乘得到一个积，那么(a+1)和(c+1)的这个积相等，把(p+1)的这个积称为&lt;strong&gt;质素p的补偿数&lt;/strong&gt; 。可以利用这个结论求解这个题。&lt;/p&gt;
&lt;h3 id=&quot;算法步骤&quot;&gt;&lt;a href=&quot;#算法步骤&quot; class=&quot;headerlink&quot; title=&quot;算法步骤&quot;&gt;&lt;/a&gt;算法步骤&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;获取小于$N=10^8$的所有素数:primes;&lt;/li&gt;
&lt;li&gt;遍历数组primes，给每个质素p分解质因数并把奇数次因子相乘得到complements数组，complements[i]保存素数primes[i]的补偿数；&lt;/li&gt;
&lt;li&gt;把补偿数相同的素数放入相同的列表并排序，得到Map{complements[i] =&amp;gt; Li},Li是补偿数为complements[i]的素数列表。&lt;/li&gt;
&lt;li&gt;把所有素数的平方存入一个Set，遍历列表Li，如果有两个质数的积在这个Set中，则是满足条件的三元组，把它们相加；&lt;/li&gt;
&lt;li&gt;对每个补偿数和列表进行上述操作对结果求和。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;复杂度分析&quot;&gt;&lt;a href=&quot;#复杂度分析&quot; class=&quot;headerlink&quot; title=&quot;复杂度分析&quot;&gt;&lt;/a&gt;复杂度分析&lt;/h3&gt;&lt;p&gt;用上述方法在我的T420s笔记本上跑了大概&lt;strong&gt;两个半小时&lt;/strong&gt;,8核CPU呼呼转了那么久才算出来。中间有很多次因为内存溢出而失败，把内存加到4G还是溢出，后面去掉了补偿数那个Map集合以及保存相同补偿数质素列表的那些List，全部用原生的int[]进行运算才成功。&lt;/p&gt;
&lt;p&gt;Java的包装类Integer，Long，以及对象引用本身消耗的内存在这种情况下不得不考虑。所以做大尺度的数值计算，只能用原生类型而不能用对象类型，但是Java的Set和Map等基本数据结构都是基于对象的，都是吃内存大户。这是Java在计算领域的劣势。&lt;/p&gt;
&lt;h2 id=&quot;遍历比值法&quot;&gt;&lt;a href=&quot;#遍历比值法&quot; class=&quot;headerlink&quot; title=&quot;遍历比值法&quot;&gt;&lt;/a&gt;遍历比值法&lt;/h2&gt;&lt;p&gt;根据等比数列得到:b+1 = (a+1)*(k/d) ,(c+1)=(b+1)*(k/d)=(a+1)* k&lt;sup&gt;2&lt;/sup&gt;/d&lt;sup&gt;2&lt;/sup&gt;，假设gcd(k,d)=1,则(a+1)可被d&lt;sup&gt;2&lt;/sup&gt;整除。(dev_random’s answer in &lt;a href=&quot;https://projecteuler.net/thread=518&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Thread 518&lt;/a&gt;)。&lt;/p&gt;
&lt;h3 id=&quot;算法步骤-1&quot;&gt;&lt;a href=&quot;#算法步骤-1&quot; class=&quot;headerlink&quot; title=&quot;算法步骤&quot;&gt;&lt;/a&gt;算法步骤&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;创建一个数组，flag[i]=1表示i是素数flag[i]=0表示i是合数；&lt;/li&gt;
&lt;li&gt;loop d from 1 to N with step 1,for each d ,loop n from d^2 to N with step d^2，如果flag[n-1]=1,loop k from d+1 to K with step 1。这样，已知a,k,d，可以求出另外b+1,c+1,只需判断b和c是否是质素就可以判断是否满足条件。这里K是使c+1&amp;lt;=N的最大数，$k^2 = {(c+1) \over (a+1)}d^2$. 得到&lt;br&gt;$$ \frac{k^2 (a+1)}{d^2}  = c+1 &amp;lt;= N$$&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;Java代码实现&quot;&gt;&lt;a href=&quot;#Java代码实现&quot; class=&quot;headerlink&quot; title=&quot;Java代码实现&quot;&gt;&lt;/a&gt;Java代码实现&lt;/h3&gt;&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sumGeometricPrimeTriples&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; N&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    BitSet flag = Util.getPrimeDecisionBlow2(N);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; sum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; d = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; d &amp;lt; N; d++) &amp;#123;&lt;span class=&quot;comment&quot;&gt;// 遍历d&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; d2 = d * d;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (d2 &amp;gt; N) &amp;#123;&lt;span class=&quot;comment&quot;&gt;// when convert to int,may overflow&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n = (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;) d2; n &amp;lt; N; n += d2) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (flag.&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;(n - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)) &amp;#123;&lt;span class=&quot;comment&quot;&gt;// a = n-1是素数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; nd = n / d;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ndd = n / d / d;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; k = d + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; ndd * k * k &amp;lt;= N; k++) &amp;#123;&lt;span class=&quot;comment&quot;&gt;// 找到a之后遍历k,根据d,k可以确定b和c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b = nd * k - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; c = ndd * k * k - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (flag.&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;(b) &amp;amp;&amp;amp; flag.&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;(c) &amp;amp;&amp;amp; gcd(d, k) == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;span class=&quot;comment&quot;&gt;// gcd这个条件去除重复统计&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        sum += (n - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) + b + c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sum;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;答案不贴出来了，在10&lt;sup&gt;14&lt;/sup&gt;数量级上，运行时间，大概5秒。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      Project Euler Problem 518 - Prime triples and geometric sequences
    
    </summary>
    
      <category term="Project Euler" scheme="http://debug4.me/categories/Project-Euler/"/>
    
    
      <category term="素数" scheme="http://debug4.me/tags/%E7%B4%A0%E6%95%B0/"/>
    
      <category term="等比数列" scheme="http://debug4.me/tags/%E7%AD%89%E6%AF%94%E6%95%B0%E5%88%97/"/>
    
      <category term="Project Euler" scheme="http://debug4.me/tags/Project-Euler/"/>
    
  </entry>
  
  <entry>
    <title>MathJax与LaTeX教程与速查手册 - MathJax and LaTeX basic tutorial and quick reference</title>
    <link href="http://debug4.me/%E5%B7%A5%E5%85%B7/mathjax-and-latex-quick-reference/"/>
    <id>http://debug4.me/工具/mathjax-and-latex-quick-reference/</id>
    <published>2015-10-21T12:42:22.000Z</published>
    <updated>2016-06-12T15:21:35.749Z</updated>
    
    <content type="html">&lt;p&gt;MathJax与LaTex教程与速查手册。以及LaTeX在Markdown中使用的注意事项。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;速查手册&quot;&gt;&lt;a href=&quot;#速查手册&quot; class=&quot;headerlink&quot; title=&quot;速查手册&quot;&gt;&lt;/a&gt;速查手册&lt;/h2&gt;&lt;h3 id=&quot;查看TeX命令&quot;&gt;&lt;a href=&quot;#查看TeX命令&quot; class=&quot;headerlink&quot; title=&quot;查看TeX命令&quot;&gt;&lt;/a&gt;查看TeX命令&lt;/h3&gt;&lt;p&gt; 查看本页的公式是如何编写，右击表达式，选择 “Show Math As &amp;gt; Tex Commands”就可以显示了。&lt;/p&gt;
&lt;h3 id=&quot;内联和公式块&quot;&gt;&lt;a href=&quot;#内联和公式块&quot; class=&quot;headerlink&quot; title=&quot;内联和公式块&quot;&gt;&lt;/a&gt;内联和公式块&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;内联公式，用美元符号&lt;code&gt;$...$&lt;/code&gt;包裹，比如&lt;code&gt;$\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}$&lt;/code&gt;产生:$\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}$.&lt;/li&gt;
&lt;li&gt;换行的块，用两对美元符号&lt;code&gt;$$...$$&lt;/code&gt;包裹，如&lt;code&gt;$$\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}\tag{displayed}$$&lt;/code&gt;产生&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;$$\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}\tag{displayed}$$&lt;/p&gt;
&lt;h3 id=&quot;希腊字母&quot;&gt;&lt;a href=&quot;#希腊字母&quot; class=&quot;headerlink&quot; title=&quot;希腊字母&quot;&gt;&lt;/a&gt;希腊字母&lt;/h3&gt;&lt;p&gt;对于&lt;strong&gt;希腊字母&lt;/strong&gt;,用&lt;code&gt;\alpha&lt;/code&gt;, &lt;code&gt;\beta&lt;/code&gt;, …, &lt;code&gt;\omega&lt;/code&gt;: $\alpha,\beta,…,\omega$. 大写的，可以使用&lt;code&gt;\Gamma&lt;/code&gt;, &lt;code&gt;\Delta&lt;/code&gt;, …, &lt;code&gt;\Omega&lt;/code&gt;:$ \Gamma,\Delta,…,\Omega$等等。&lt;/p&gt;
&lt;h3 id=&quot;上角下角符号&quot;&gt;&lt;a href=&quot;#上角下角符号&quot; class=&quot;headerlink&quot; title=&quot;上角下角符号&quot;&gt;&lt;/a&gt;上角下角符号&lt;/h3&gt;&lt;p&gt;对于&lt;strong&gt;上角文字和下角文字&lt;/strong&gt;，分别使用&lt;code&gt;^&lt;/code&gt;和&lt;code&gt;_&lt;/code&gt;，比如：&lt;code&gt;x_i^2&lt;/code&gt;:$x_i^2$&lt;/p&gt;
&lt;p&gt;用花括号&lt;code&gt;{...}&lt;/code&gt;包裹一个原子的符号或者表达式，比如用&lt;code&gt;10^10&lt;/code&gt;会得到:$10^10$，正确的写法是：&lt;code&gt;10^{10}&lt;/code&gt;:$10^{10}$。另外，这种写法：&lt;code&gt;x^5^6&lt;/code&gt;是错误的，需要用花括号进行界定。&lt;code&gt;{x^y}^z&lt;/code&gt;是:${x^y}^z$，&lt;code&gt;x^{y^z}&lt;/code&gt;是：$x^{y^z}$。注意&lt;code&gt;x_i^2&lt;/code&gt;:$x&lt;em&gt;i^2$和`x&lt;/em&gt;{i^2}`:$x_{i^2}$。&lt;/p&gt;
&lt;h3 id=&quot;花括号&quot;&gt;&lt;a href=&quot;#花括号&quot; class=&quot;headerlink&quot; title=&quot;花括号&quot;&gt;&lt;/a&gt;花括号&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;圆括号和方括号&lt;code&gt;()[]&lt;/code&gt;用法就是普通的用法，比如&lt;code&gt;(2+2)[4-4]&lt;/code&gt;:$(2+2)[4-4]$。&lt;br&gt;而表达式中的花括号需要用&lt;code&gt;\\{&lt;/code&gt;和&lt;code&gt;\\}&lt;/code&gt;表示，比如&lt;code&gt;\{x| x&amp;gt;0\}&lt;/code&gt;:$\{x| x&amp;gt;0\}$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;默认插入会被压缩变小：&lt;code&gt;(\frac{\sqrt x}{y^3})&lt;/code&gt;:$(\frac{\sqrt x}{y^3})$,使用&lt;code&gt;\left(…\right)&lt;/code&gt;可以自动调整行高,&lt;code&gt;\left(\frac{\sqrt x}{y^3}\right)&lt;/code&gt; :$\left(\frac{\sqrt x}{y^3}\right)$。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\left&lt;/code&gt; 和 &lt;code&gt;\right&lt;/code&gt; 适用于下面的各种符号：&lt;code&gt;(&lt;/code&gt;和&lt;code&gt;)&lt;/code&gt;,$\left((x)\right)$； &lt;code&gt;[&lt;/code&gt; 和 &lt;code&gt;]&lt;/code&gt;:\left([x]\right)；&lt;code&gt;\{&lt;/code&gt; and &lt;code&gt;\}&lt;/code&gt;:$\left(\{x\}\right)$； &lt;code&gt;|&lt;/code&gt;：$\left(|x|\right)$； &lt;code&gt;\langle&lt;/code&gt; and &lt;code&gt;\rangle&lt;/code&gt;：$\left(\langle x \rangle\right)$；,  &lt;code&gt;\lceil&lt;/code&gt; and &lt;code&gt;\rceil&lt;/code&gt;:$\left(\lceil x \rceil\right)$, and &lt;code&gt;\lfloor&lt;/code&gt; and &lt;code&gt;\rfloor&lt;/code&gt;：$\left(\lfloor x \rfloor\right)$；也可以用&lt;code&gt;.&lt;/code&gt;进行隐式插入：&lt;code&gt;\left.\frac12\right\rbrace&lt;/code&gt; : $\left.\frac12\right\rbrace$.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;求和与积分&quot;&gt;&lt;a href=&quot;#求和与积分&quot; class=&quot;headerlink&quot; title=&quot;求和与积分&quot;&gt;&lt;/a&gt;求和与积分&lt;/h3&gt;&lt;p&gt;求和与积分:&lt;code&gt;\sum_1^n&lt;/code&gt;,&lt;code&gt;\int&lt;/code&gt; :$\sum&lt;em&gt;1^n$,`\sum&lt;/em&gt;{i=0}^\infty i^2&lt;code&gt;:$\sum_{i=0}^\infty i^2$;乘积：&lt;/code&gt;\prod&lt;code&gt;:$\prod$;&lt;/code&gt;\int&lt;code&gt;:$\int$;&lt;/code&gt;\bigcup&lt;code&gt;:$\bigcup$,&lt;/code&gt;\bigcap&lt;code&gt;: $\bigcap$,&lt;/code&gt;\iint`:$\iint$.&lt;/p&gt;
&lt;h3 id=&quot;分数&quot;&gt;&lt;a href=&quot;#分数&quot; class=&quot;headerlink&quot; title=&quot;分数&quot;&gt;&lt;/a&gt;分数&lt;/h3&gt;&lt;p&gt;分数有两种方式。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;\frac ab&lt;/code&gt;:$\frac ab$,&lt;code&gt;\frac {a+1}{b+2}&lt;/code&gt;:$\frac {a+1}{b+2}$;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\over&lt;/code&gt;，&lt;code&gt;{a+1\over b+1}&lt;/code&gt;:${a+1\over b+1}$.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;字体：&quot;&gt;&lt;a href=&quot;#字体：&quot; class=&quot;headerlink&quot; title=&quot;字体：&quot;&gt;&lt;/a&gt;字体：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Use \mathbb or \Bbb for “blackboard bold”: $\mathbb{CHNQRZ}$;&lt;/li&gt;
&lt;li&gt;Use \mathbf for boldface: $mathbf{ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz}$;&lt;/li&gt;
&lt;li&gt;Use \mathrm for roman font:$\mathrm{ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz}$;&lt;/li&gt;
&lt;li&gt;Use \mathsf for sans-serif font:$\mathsf{ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz}$;&lt;/li&gt;
&lt;li&gt;Use \mathcal for “calligraphic” letters:$\mathcal{ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz}$;&lt;/li&gt;
&lt;li&gt;Use \mathscr for script letters:$\mathscr{ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz}$;&lt;/li&gt;
&lt;li&gt;Use \mathfrak for “Fraktur” (old German style) letters:$\mathfrak{ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz}$;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;开根号&quot;&gt;&lt;a href=&quot;#开根号&quot; class=&quot;headerlink&quot; title=&quot;开根号&quot;&gt;&lt;/a&gt;开根号&lt;/h3&gt;&lt;p&gt;使用&lt;code&gt;\sqrt&lt;/code&gt; :$\sqrt{x^3}$,&lt;code&gt;\sqrt[3]{\frac xy}&lt;/code&gt;:$\sqrt[3]{\frac xy}$,对于复杂表达式，可以使用：&lt;code&gt;{...}^{1/2}&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;特殊函数&quot;&gt;&lt;a href=&quot;#特殊函数&quot; class=&quot;headerlink&quot; title=&quot;特殊函数&quot;&gt;&lt;/a&gt;特殊函数&lt;/h3&gt;&lt;p&gt;比如：”lim”, “sin”, “max”, “ln”，使用&lt;code&gt;\lim&lt;/code&gt;,&lt;code&gt;\sin&lt;/code&gt;等等。&lt;code&gt;\sin x&lt;/code&gt;:$\sin x$;&lt;br&gt;极限：&lt;code&gt;\lim_{x\to 0}&lt;/code&gt;:$$\lim_{x\to 0}$$.&lt;/p&gt;
&lt;h3 id=&quot;特殊符号&quot;&gt;&lt;a href=&quot;#特殊符号&quot; class=&quot;headerlink&quot; title=&quot;特殊符号&quot;&gt;&lt;/a&gt;特殊符号&lt;/h3&gt;&lt;p&gt;有很多，有个&lt;a href=&quot;http://pic.plover.com/MISC/symbols.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;简表&lt;/a&gt;和&lt;a href=&quot;http://mirror.math.ku.edu/tex-archive/info/symbols/comprehensive/symbols-a4.pdf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;全表&lt;/a&gt;可以查询。最常用的包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;\lt \gt \le \ge \neq&lt;/code&gt; :$\lt \gt \le \ge \neq$,&lt;code&gt;\not\lt&lt;/code&gt; :$\not\lt$;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\times \div \pm \mp&lt;/code&gt; :$\times \div \pm \mp$，中间点是&lt;code&gt;\cdot&lt;/code&gt;:$x\cdot y$;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\cup \cap \setminus \subset \subseteq \subsetneq \supset \in \notin \emptyset \varnothing&lt;/code&gt;:$\cup \cap \setminus \subset \subseteq \subsetneq \supset \in \notin \emptyset \varnothing$;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{n+1 \choose 2k}&lt;/code&gt; or &lt;code&gt;\binom{n+1}{2k}&lt;/code&gt; :$\binom{n+1}{2k}$;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\to \rightarrow \leftarrow \Rightarrow \Leftarrow \mapsto&lt;/code&gt; :$\to \rightarrow \leftarrow \Rightarrow \Leftarrow \mapsto$;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\land \lor \lnot \forall \exists \top \bot \vdash \vDash&lt;/code&gt;:$\land \lor \lnot \forall \exists \top \bot \vdash \vDash$;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\star \ast \oplus \circ \bullet&lt;/code&gt; :$\star \ast \oplus \circ \bullet$;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\approx \sim \simeq \cong \equiv \prec&lt;/code&gt; :$\approx \sim \simeq \cong \equiv \prec$;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\infty \aleph_0&lt;/code&gt;: $\infty \aleph_0$;&lt;code&gt;\nabla \partial&lt;/code&gt;:$\nabla \partial$;&lt;code&gt;\Im \Re IR&lt;/code&gt;:$\Im \Re IR$;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\pmod&lt;/code&gt; : &lt;code&gt;a\equiv b\pmod n&lt;/code&gt;:$a\equiv b\pmod n$;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\ldots&lt;/code&gt;:$a_1,a_2,\ldots,a_n$, &lt;code&gt;\cdots&lt;/code&gt; :$a_1+a_2+\cdots+a_n$;&lt;/li&gt;
&lt;li&gt;一些希腊字母的变种：&lt;code&gt;\epsilon \varepsilon&lt;/code&gt;:$\epsilon \varepsilon$, &lt;code&gt;\phi \varphi&lt;/code&gt;:$\phi \varphi$, and others. Script lowercase l is &lt;code&gt;\ell&lt;/code&gt;:$\ell$.&lt;br&gt;&lt;a href=&quot;http://detexify.kirelabs.org/classify.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里可以查看更多&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://docs.mathjax.org/en/latest/tex.html#supported-latex-commands&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MathJax支持的LaTex命令&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.onemathematicalcat.org/MathJaxDocumentation/TeXSyntax.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MathJax常用命令&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;空格&quot;&gt;&lt;a href=&quot;#空格&quot; class=&quot;headerlink&quot; title=&quot;空格&quot;&gt;&lt;/a&gt;空格&lt;/h3&gt;&lt;p&gt;常量空格MathJax并不会起作用，而要用&lt;code&gt;\,&lt;/code&gt;,比如:$a\,b$.对于很宽的空格使用&lt;code&gt;\quad&lt;/code&gt; 和 &lt;code&gt;\qquad&lt;/code&gt;:$a \quad b,a \qquad b$.&lt;/p&gt;
&lt;h3 id=&quot;纯文本&quot;&gt;&lt;a href=&quot;#纯文本&quot; class=&quot;headerlink&quot; title=&quot;纯文本&quot;&gt;&lt;/a&gt;纯文本&lt;/h3&gt;&lt;p&gt;&lt;code&gt;\text{…}&lt;/code&gt;:$\{x\in s\mid x\text{ is extra large}\}$&lt;/p&gt;
&lt;h3 id=&quot;字母上面的符号&quot;&gt;&lt;a href=&quot;#字母上面的符号&quot; class=&quot;headerlink&quot; title=&quot;字母上面的符号&quot;&gt;&lt;/a&gt;字母上面的符号&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;\hat&lt;/code&gt;,&lt;code&gt;\hat x&lt;/code&gt; :$\hat x$;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\widehat&lt;/code&gt;给多个字母&lt;code&gt;\widehat{xy}&lt;/code&gt;:$\widehat{xy}$;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\bar&lt;/code&gt;,&lt;code&gt;\bar x&lt;/code&gt; :$\bar x$;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\overline&lt;/code&gt;,&lt;code&gt;\overline {xyz}&lt;/code&gt; :$\overline {xyz}$;&lt;/li&gt;
&lt;li&gt;向量&lt;code&gt;\vec&lt;/code&gt;,&lt;code&gt;\vec x&lt;/code&gt; :$\vec x$;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\overrightarrow&lt;/code&gt;,&lt;code&gt;\overrightarrow {xy}&lt;/code&gt;:$\overrightarrow {xy}$;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;\overleftrightarrow&lt;/code&gt;,’\overleftrightarrow {xy}’:$\overleftrightarrow{xy}$;&lt;/li&gt;
&lt;li&gt;点:&lt;code&gt;\frac d{dx}x\dot x =  \dot x^2 +  x\ddot x&lt;/code&gt; :$\frac d{dx}x\dot x =  \dot x^2 +  x\ddot x$;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;MathJax特殊字符&quot;&gt;&lt;a href=&quot;#MathJax特殊字符&quot; class=&quot;headerlink&quot; title=&quot;MathJax特殊字符&quot;&gt;&lt;/a&gt;MathJax特殊字符&lt;/h3&gt;&lt;p&gt;Special characters used for MathJax interpreting can be escaped using the &lt;code&gt;\&lt;/code&gt; character: &lt;code&gt;\\$&lt;/code&gt;:$\$$, &lt;code&gt;\\{&lt;/code&gt;:$\{$, &lt;code&gt;\\_&lt;/code&gt;:$\_$, etc. If you want &lt;code&gt;\&lt;/code&gt; itself, you should use &lt;code&gt;\backslash&lt;/code&gt;:$\backslash$, because &lt;code&gt;\\&lt;/code&gt; is for a new line.&lt;br&gt;(&lt;strong&gt;Note&lt;/strong&gt;:发现Hexo生成的markdown里面反斜杠数目要加倍，比如，MathJax用&lt;code&gt;\{&lt;/code&gt;表示左花括号，在markdown里面要用&lt;code&gt;\\{&lt;/code&gt;，而markdown里面换行要用:&lt;code&gt;\\\\&lt;/code&gt;)&lt;/p&gt;
&lt;h2 id=&quot;其他示例&quot;&gt;&lt;a href=&quot;#其他示例&quot; class=&quot;headerlink&quot; title=&quot;其他示例&quot;&gt;&lt;/a&gt;其他示例&lt;/h2&gt;&lt;h3 id=&quot;矩阵&quot;&gt;&lt;a href=&quot;#矩阵&quot; class=&quot;headerlink&quot; title=&quot;矩阵&quot;&gt;&lt;/a&gt;矩阵&lt;/h3&gt;&lt;figure class=&quot;highlight tex&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;formula&quot;&gt;$$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;matrix&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        1 &amp;amp; x &amp;amp; x^2 &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        1 &amp;amp; y &amp;amp; y^2 &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        1 &amp;amp; z &amp;amp; z^2 &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;matrix&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$$&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;产生：&lt;br&gt;$$&lt;br&gt;        \begin{matrix}&lt;br&gt;        1 &amp;amp; x &amp;amp; x^2 \\&lt;br&gt;        1 &amp;amp; y &amp;amp; y^2 \\&lt;br&gt;        1 &amp;amp; z &amp;amp; z^2 \\&lt;br&gt;        \end{matrix}&lt;br&gt;$$&lt;/p&gt;
&lt;h3 id=&quot;分情况定义&quot;&gt;&lt;a href=&quot;#分情况定义&quot; class=&quot;headerlink&quot; title=&quot;分情况定义&quot;&gt;&lt;/a&gt;分情况定义&lt;/h3&gt;&lt;figure class=&quot;highlight tex&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; f(n) =&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;cases&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n/2,  &amp;amp; &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;if $n$ is even&amp;#125;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3n+1, &amp;amp; &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;if $n$ is odd&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;cases&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;产生&lt;br&gt; $$f(n) =&lt;br&gt;\begin{cases}&lt;br&gt;n/2,  &amp;amp; \text{if $n$ is even} \\&lt;br&gt;3n+1, &amp;amp; \text{if $n$ is odd}&lt;br&gt;\end{cases}$$&lt;/p&gt;
&lt;h3 id=&quot;数组&quot;&gt;&lt;a href=&quot;#数组&quot; class=&quot;headerlink&quot; title=&quot;数组&quot;&gt;&lt;/a&gt;数组&lt;/h3&gt;&lt;figure class=&quot;highlight tex&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;formula&quot;&gt;$$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;array&amp;#125;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;c|lcr&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;n &amp;amp; &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;Left&amp;#125;&lt;/span&gt;&lt;/span&gt; &amp;amp; &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;Center&amp;#125;&lt;/span&gt;&lt;/span&gt; &amp;amp; &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;Right&amp;#125;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;hline&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 &amp;amp; 0.24 &amp;amp; 1 &amp;amp; 125 &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 &amp;amp; -1 &amp;amp; 189 &amp;amp; -8 &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;\&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3 &amp;amp; -20 &amp;amp; 2000 &amp;amp; 1+10i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;array&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$$&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;产生：&lt;br&gt;$$&lt;br&gt;\begin{array}{c|lcr}&lt;br&gt;n &amp;amp; \text{Left} &amp;amp; \text{Center} &amp;amp; \text{Right} \\&lt;br&gt;\hline&lt;br&gt;1 &amp;amp; 0.24 &amp;amp; 1 &amp;amp; 125 \\&lt;br&gt;2 &amp;amp; -1 &amp;amp; 189 &amp;amp; -8 \\&lt;br&gt;3 &amp;amp; -20 &amp;amp; 2000 &amp;amp; 1+10i&lt;br&gt;\end{array}&lt;br&gt;$$&lt;/p&gt;
&lt;h3 id=&quot;方程&quot;&gt;&lt;a href=&quot;#方程&quot; class=&quot;headerlink&quot; title=&quot;方程&quot;&gt;&lt;/a&gt;方程&lt;/h3&gt;&lt;figure class=&quot;highlight tex&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;formula&quot;&gt;$$&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;left&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;array&amp;#125;&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;c&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a_1x+b_1y+c_1z=d_1 &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;\&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a_2x+b_2y+c_2z=d_2 &lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;\&lt;/span&gt;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a_3x+b_3y+c_3z=d_3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&amp;#123;array&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;\&lt;span class=&quot;name&quot;&gt;right&lt;/span&gt;&lt;/span&gt;. &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$$&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;产生：&lt;br&gt;$$&lt;br&gt;\left\{&lt;br&gt;\begin{array}{c}&lt;br&gt;a_1x+b_1y+c_1z=d_1 \\&lt;br&gt;a_2x+b_2y+c_2z=d_2 \\&lt;br&gt;a_3x+b_3y+c_3z=d_3&lt;br&gt;\end{array}&lt;br&gt;\right.&lt;br&gt;$$&lt;/p&gt;
&lt;h2 id=&quot;参考文档&quot;&gt;&lt;a href=&quot;#参考文档&quot; class=&quot;headerlink&quot; title=&quot;参考文档&quot;&gt;&lt;/a&gt;参考文档&lt;/h2&gt;&lt;p&gt;这里面有更多：&lt;br&gt;&lt;a href=&quot;http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://meta.math.stackexchange.com/ 上面一个完成的教程&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://cdn.mathjax.org/mathjax/latest/test/examples.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mathjax示例&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      MathJax与LaTeX教程与速查手册 MathJax and LaTeX basic tutorial and quick reference
    
    </summary>
    
      <category term="工具" scheme="http://debug4.me/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="MathJax" scheme="http://debug4.me/tags/MathJax/"/>
    
      <category term="LaTeX" scheme="http://debug4.me/tags/LaTeX/"/>
    
  </entry>
  
  <entry>
    <title>三分法求极值-Ternary Search</title>
    <link href="http://debug4.me/Algorithm/ternary-search/"/>
    <id>http://debug4.me/Algorithm/ternary-search/</id>
    <published>2015-10-21T02:57:53.000Z</published>
    <updated>2016-06-12T15:21:35.749Z</updated>
    
    <content type="html">&lt;p&gt;本文介绍了三分法（Ternary Search）的适用场景，并用一道2015百度笔试题讲解三分法，最后分析了三分法和二分法的区别。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;什么是三分法&quot;&gt;&lt;a href=&quot;#什么是三分法&quot; class=&quot;headerlink&quot; title=&quot;什么是三分法&quot;&gt;&lt;/a&gt;什么是三分法&lt;/h2&gt;&lt;p&gt;三分法是求单峰函数的最大值或最小值的算法，是一种&lt;a href=&quot;https://en.wikipedia.org/wiki/Divide_and_conquer_algorithm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;分治算法&lt;/a&gt;。维基百科：&lt;a href=&quot;https://en.wikipedia.org/wiki/Ternary_search&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Ternary_search&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;所谓单峰函数，就是凸函数（包括上凸和下凸，严格定义不赘述）。举个例子，假设求函数f(x)的最大值，而且最大值落在区间[A,B]上，为了使用三分法，那么必须存在一个x满足下面的条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对任意a,b，如果 A ≤ a &amp;lt; b ≤ x ,则f(a) &amp;lt; f(b)，并且&lt;/li&gt;
&lt;li&gt;对任意a,b，如果 x ≤ a &amp;lt; b ≤ B，则f(a) &amp;gt; F(b)&lt;br&gt;这样，f(x)就是函数f的最大值。 &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;算法描述&quot;&gt;&lt;a href=&quot;#算法描述&quot; class=&quot;headerlink&quot; title=&quot;算法描述&quot;&gt;&lt;/a&gt;算法描述&lt;/h2&gt;&lt;p&gt;假设函数f(x)在区间[A,B]上有最大值，那么随机取两个点m1和m2 : A &amp;lt; m1 &amp;lt; m2 &amp;lt; B,然后有三种可能：&lt;br&gt;if f(m1) &amp;lt; f(m2) ,那么最大值不可能在区间[A,m1]上，而是落在(m1,B]上；&lt;br&gt;if f(m1) &amp;gt; f(m2) ,那么最大值不可能再区间[m2,B]上，而是落在[A,m2)上；&lt;br&gt;if f(m1) = f(m2) ,那么最大值落在区间[m1,m2]上。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;:上面区间的表示法，用’(‘和’)’表示不包含端点，用’[‘和’]’表示包含端点。&lt;/p&gt;
&lt;p&gt;上面每次选取m1,m2可以排除一块区间，即每次划分成三份，根据函数值去掉一份或者两份，正所谓三分法也。&lt;br&gt;每次可以三等分，即m1和m2的选取可以这样：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;m1 = A + (A-B)/3&lt;/li&gt;
&lt;li&gt;m2 = B - (A-B)/3&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;时间复杂度：Ｏ(log n)&lt;/p&gt;
&lt;p&gt;三分法示意图:&lt;br&gt;&lt;img src=&quot;http://7xn1o8.com1.z0.glb.clouddn.com/ternary_search.png&quot; alt=&quot;三分法算法示意图&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;实例&quot;&gt;&lt;a href=&quot;#实例&quot; class=&quot;headerlink&quot; title=&quot;实例&quot;&gt;&lt;/a&gt;实例&lt;/h2&gt;&lt;h3 id=&quot;2015百度笔试题（算法）&quot;&gt;&lt;a href=&quot;#2015百度笔试题（算法）&quot; class=&quot;headerlink&quot; title=&quot;2015百度笔试题（算法）&quot;&gt;&lt;/a&gt;2015百度笔试题（算法）&lt;/h3&gt;&lt;p&gt;题目：一个升序数组，可能包含正数负数或者0，求数组中绝对值最小的数，要求复杂度小于O(n)。&lt;/p&gt;
&lt;p&gt;题目被发到&lt;a href=&quot;http://group.jobbole.com/9254&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;伯乐在线 - 2015百度笔试题（算法）&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h3&gt;&lt;p&gt;有序数组搜索一个元素，经验主义者会立刻想到二分法，殊不知，本题是求绝对值，数组的绝对值不再是有序的，而是下凸的，即中间小，两边大。所求的正好是最小值。能满足三分法的要求。&lt;/p&gt;
&lt;h3 id=&quot;示例代码&quot;&gt;&lt;a href=&quot;#示例代码&quot; class=&quot;headerlink&quot; title=&quot;示例代码&quot;&gt;&lt;/a&gt;示例代码&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 用三分法求升序数组data中绝对值最小的元素。如果有两个绝对值相等，返回值小的那一个。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; int findMinAbs(int[] data) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int &lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int &lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt; = data.length - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int m1 = &lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int m2 = &lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt; &amp;lt; &lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        m1 = &lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt; + (&lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt; - &lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt;) / &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        m2 = &lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt; - (&lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt; - &lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt;) / &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int f1 = &lt;span class=&quot;type&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;abs&lt;/span&gt;(data[m1]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        int f2 = &lt;span class=&quot;type&quot;&gt;Math&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;abs&lt;/span&gt;(data[m2]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (f1 &amp;gt; f2) &amp;#123;&lt;span class=&quot;comment&quot;&gt;//缩小到区间(m1,right]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt; = m1 + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (f1 &amp;lt; f2) &amp;#123;&lt;span class=&quot;comment&quot;&gt;//缩小到区间[left,m2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt; = m2 - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123; &lt;span class=&quot;comment&quot;&gt;//缩小到区间[m1,m2]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt; = m1;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt; = m2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt; == &lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//TODO这里是发现了两个最小值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; data[&lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; void main(&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;[] args) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    int[] data = new int[] &amp;#123; -&lt;span class=&quot;number&quot;&gt;123&lt;/span&gt;, -&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;, -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;System&lt;/span&gt;.out.&lt;span class=&quot;built_in&quot;&gt;println&lt;/span&gt;(findMinAbs(data));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data = new int[] &amp;#123; -&lt;span class=&quot;number&quot;&gt;123&lt;/span&gt;, -&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;, -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;25&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;System&lt;/span&gt;.out.&lt;span class=&quot;built_in&quot;&gt;println&lt;/span&gt;(findMinAbs(data));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    data = new int[] &amp;#123; &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;112&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;125&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1100&lt;/span&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;type&quot;&gt;System&lt;/span&gt;.out.&lt;span class=&quot;built_in&quot;&gt;println&lt;/span&gt;(findMinAbs(data));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出:&lt;br&gt;&lt;figure class=&quot;highlight haml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-&lt;span class=&quot;ruby&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;与二分法的区别&quot;&gt;&lt;a href=&quot;#与二分法的区别&quot; class=&quot;headerlink&quot; title=&quot;与二分法的区别&quot;&gt;&lt;/a&gt;与二分法的区别&lt;/h2&gt;&lt;p&gt;二分法适用的场景是：从一个有序数组中寻找指定值的元素。二分法适用的是有序数组，三分法适用的是先升后降或者先降后升的数组。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      本文介绍了三分法（Ternary Search）的适用场景以及与二分法的区别
    
    </summary>
    
      <category term="Algorithm" scheme="http://debug4.me/categories/Algorithm/"/>
    
    
      <category term="搜索算法" scheme="http://debug4.me/tags/%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95/"/>
    
      <category term="三分法" scheme="http://debug4.me/tags/%E4%B8%89%E5%88%86%E6%B3%95/"/>
    
      <category term="分治算法" scheme="http://debug4.me/tags/%E5%88%86%E6%B2%BB%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Project Euler Problem 134 - Prime pair connection</title>
    <link href="http://debug4.me/Project-Euler/PE134/"/>
    <id>http://debug4.me/Project-Euler/PE134/</id>
    <published>2015-10-19T11:36:36.000Z</published>
    <updated>2016-06-12T15:21:35.744Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://projecteuler.net/problem=134&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Project Euler 134&lt;/a&gt; ,求以整数p1结尾，且整除另一个整数p2的数。&lt;em&gt;Completed on 2015-10-19  16:42&lt;/em&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;原题&quot;&gt;&lt;a href=&quot;#原题&quot; class=&quot;headerlink&quot; title=&quot;原题&quot;&gt;&lt;/a&gt;原题&lt;/h2&gt;&lt;p&gt;Consider the consecutive primes p1 = 19 and p2 = 23. It can be verified that 1219 is the smallest number such that the last digits are formed by p1 whilst also being divisible by p2.&lt;/p&gt;
&lt;p&gt;In fact, with the exception of p1 = 3 and p2 = 5, for every pair of consecutive primes, p2 &amp;gt; p1, there exist values of n for which the last digits are formed by p1 and n is divisible by p2. Let S be the smallest of these values of n.&lt;/p&gt;
&lt;p&gt;Find ∑ S for every pair of consecutive primes with 5 ≤ p1 ≤ 1000000.&lt;/p&gt;
&lt;p&gt;对于连续素数对p1,p2，存在一个整数n，满足：n以p1结尾，而且n整除p2。设S为满足条件的n中的最小值，求∑ S，使得 5 ≤ p1 ≤ 1000000&lt;/p&gt;
&lt;h2 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h2&gt;&lt;p&gt;根据条件“n以p1结尾”可以得出：&lt;br&gt;&lt;figure class=&quot;highlight ini&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attr&quot;&gt;n&lt;/span&gt; = p1 + k*n0         （&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中n0是满足n0 &amp;gt; p1的10的最小幂，k是整数。很自然可以想到从1循环k，根据（1）式求得n，然后检验n是否整除p2。于是得到&lt;/p&gt;
&lt;h3 id=&quot;穷举法&quot;&gt;&lt;a href=&quot;#穷举法&quot; class=&quot;headerlink&quot; title=&quot;穷举法&quot;&gt;&lt;/a&gt;穷举法&lt;/h3&gt;&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * get the min integer n which endWiths p1 and can be divided by p2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; getProductEndWith(&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; p1, &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; p2) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt; = Util.getSize(p1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; n0 = (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;) Math.&lt;span class=&quot;built_in&quot;&gt;pow&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;size&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; n = p1 + n0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (n % p2 == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        n += n0;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个方法搜索5 ~ 1000000以内的素数，花费时间大概是5分钟左右。&lt;/p&gt;
&lt;h2 id=&quot;利用乘法竖式&quot;&gt;&lt;a href=&quot;#利用乘法竖式&quot; class=&quot;headerlink&quot; title=&quot;利用乘法竖式&quot;&gt;&lt;/a&gt;利用乘法竖式&lt;/h2&gt;&lt;p&gt;回忆两个整数相乘时是如何进位和相加的，举例说明，对于p1=101,p2=103,乘法算式如下:&lt;br&gt;&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;   1   0   3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...x3  x2  x1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;quote&quot;&gt;______________________&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_______________________&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...1   0    1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;中间用”…”省略未知的数字和运算过程。&lt;/p&gt;
&lt;h3 id=&quot;迭代-step1&quot;&gt;&lt;a href=&quot;#迭代-step1&quot; class=&quot;headerlink&quot; title=&quot;迭代 step1&quot;&gt;&lt;/a&gt;迭代 step1&lt;/h3&gt;&lt;p&gt;由于3*x1 的个位数是1，即3*x1 % 10 = 1，于是得到x1=7，于是103 * 7 = 721&lt;br&gt;&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;   1   0   3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...x3  x2  7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;quote&quot;&gt;______________________&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   7   2   1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_______________________&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...1   0    1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;迭代step2&quot;&gt;&lt;a href=&quot;#迭代step2&quot; class=&quot;headerlink&quot; title=&quot;迭代step2&quot;&gt;&lt;/a&gt;迭代step2&lt;/h3&gt;&lt;p&gt;由于 3 * x2 + 2 的个位数是0，从而得出x2 = 6 :&lt;br&gt;&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;   1   0   3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...x3  6   7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;quote&quot;&gt;______________________&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   7   2   1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6  1   8    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_______________________&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...1   0    1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;整理得到：&lt;br&gt;&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;   1   0   3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...x3  6   7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;quote&quot;&gt;______________________&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6  9   0   1         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;....&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_______________________&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...1   0    1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;迭代-step3&quot;&gt;&lt;a href=&quot;#迭代-step3&quot; class=&quot;headerlink&quot; title=&quot;迭代 step3&quot;&gt;&lt;/a&gt;迭代 step3&lt;/h3&gt;&lt;p&gt;由于 3 * x3 +9 的个位数是1，从而得到x3 = 4，带入上面竖式得到：&lt;br&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;      1   0   3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   ...4   6   7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;strong&quot;&gt;_____&lt;/span&gt;&lt;span class=&quot;strong&quot;&gt;_____&lt;/span&gt;&lt;span class=&quot;strong&quot;&gt;_____&lt;/span&gt;&lt;span class=&quot;strong&quot;&gt;_____&lt;/span&gt;__&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   6  9   0   1         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4  1  2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;strong&quot;&gt;_____&lt;/span&gt;&lt;span class=&quot;strong&quot;&gt;_____&lt;/span&gt;&lt;span class=&quot;strong&quot;&gt;_____&lt;/span&gt;&lt;span class=&quot;strong&quot;&gt;_____&lt;/span&gt;&lt;span class=&quot;emphasis&quot;&gt;___&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4  8  1   0    1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;经过3次迭代得到n= 48101 = 467 * 103 满足条件。&lt;/p&gt;
&lt;h3 id=&quot;因数表&quot;&gt;&lt;a href=&quot;#因数表&quot; class=&quot;headerlink&quot; title=&quot;因数表&quot;&gt;&lt;/a&gt;因数表&lt;/h3&gt;&lt;p&gt;上面根据个位上的数字确定因数的方法可以做一张10x10的因数表（不是九九乘法表），代码如下：&lt;br&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;bullet&quot;&gt;* 因子multiplier[i][j] = k,满足 j = i *&lt;/span&gt; k % 10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static int[&lt;span class=&quot;string&quot;&gt;&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;&lt;/span&gt;] multiplier = new int[&lt;span class=&quot;string&quot;&gt;10&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;10&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;static &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;    for (int i = 0; i &amp;lt; 10; i++) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;        for (int k = 0; k &amp;lt; 10; k++) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;            int j = i * k % 10;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;            multiplier[i][j] = k;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;code&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;核心代码：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * get the minimum integer n which endWiths p1 and can be divided by p2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param p1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @param p2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * @return&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getProductEndWith&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; p1, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; p2)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = getRightmostKthDigit(p2, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;// rightmost digit of p2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; n = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; L = ((&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;) Math.&lt;span class=&quot;built_in&quot;&gt;log10&lt;/span&gt;(p1)) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;// size of digits of p1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; k = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; k &amp;lt; L; k++) &amp;#123;&lt;span class=&quot;comment&quot;&gt;// from the rightmost xth&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// (10 + p1右起第k位 - n右起第k位 )%10得到这次乘积的个位数字j&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = (&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; + getRightmostKthDigit(p1, k) - getRightmostKthDigit(n, k)) % &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; m = multiplier[i][j];&lt;span class=&quot;comment&quot;&gt;// 乘积的各位数字是j，一个因子是i，则另一个因子是m&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        n += p2 * (m * (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;) Math.&lt;span class=&quot;built_in&quot;&gt;pow&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, k));&lt;span class=&quot;comment&quot;&gt;// 因子m在k位上，所以要乘10^k然后加到n&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;从p1=5开始累加：&lt;br&gt;&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; main(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt;[] args) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; s = System.currentTimeMillis();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; L = BigInteger.valueOf(&lt;span class=&quot;number&quot;&gt;1000000&lt;/span&gt;).nextProbablePrime().intValue();&lt;span class=&quot;comment&quot;&gt;// 1000003&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;[] primes = Util.getPrimesBlow(L);&lt;span class=&quot;comment&quot;&gt;// last 2 is 999983,1000003&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; sum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.&lt;span class=&quot;built_in&quot;&gt;println&lt;/span&gt;(getProductEndWith(&lt;span class=&quot;number&quot;&gt;999983&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1000003&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;; i &amp;lt;= primes.length - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; p1 = primes[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; p2 = primes[i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sum += Util.getProductEndWith(p1, p2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.&lt;span class=&quot;built_in&quot;&gt;println&lt;/span&gt;(sum);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.&lt;span class=&quot;built_in&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Time consumed:&quot;&lt;/span&gt; + (System.currentTimeMillis() - s) + &lt;span class=&quot;string&quot;&gt;&quot; ms&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;输出&quot;&gt;&lt;a href=&quot;#输出&quot; class=&quot;headerlink&quot; title=&quot;输出&quot;&gt;&lt;/a&gt;输出&lt;/h3&gt;&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;18613426663617118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;Time&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;consumed&lt;/span&gt;&lt;span class=&quot;selector-pseudo&quot;&gt;:100&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;ms&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;利用中国剩余定理-（孙子定理）&quot;&gt;&lt;a href=&quot;#利用中国剩余定理-（孙子定理）&quot; class=&quot;headerlink&quot; title=&quot;利用中国剩余定理  （孙子定理）&quot;&gt;&lt;/a&gt;利用中国剩余定理  （孙子定理）&lt;/h2&gt;&lt;p&gt;在&lt;a href=&quot;https://projecteuler.net/thread=134&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Thread 134 -Project Euler&lt;/a&gt;里面有看到使用ChineseRemainder算法，时间在20s内，但是没有看懂，以后有时间再研究。&lt;br&gt;TODO&lt;/p&gt;
</content>
    
    <summary type="html">
    
      Project Euler 134 - 求以整数p1结尾，且整除另一个整数p2的数
    
    </summary>
    
      <category term="Project Euler" scheme="http://debug4.me/categories/Project-Euler/"/>
    
    
      <category term="素数" scheme="http://debug4.me/tags/%E7%B4%A0%E6%95%B0/"/>
    
      <category term="Project Euler" scheme="http://debug4.me/tags/Project-Euler/"/>
    
      <category term="中国剩余定理" scheme="http://debug4.me/tags/%E4%B8%AD%E5%9B%BD%E5%89%A9%E4%BD%99%E5%AE%9A%E7%90%86/"/>
    
      <category term="Chinese remainder theorem" scheme="http://debug4.me/tags/Chinese-remainder-theorem/"/>
    
  </entry>
  
  <entry>
    <title>无穷大——你从没听说过的事情 Infinity - You&#39;ve Never Heard of</title>
    <link href="http://debug4.me/Math/infinity-you-never-heard-of/"/>
    <id>http://debug4.me/Math/infinity-you-never-heard-of/</id>
    <published>2015-10-18T16:00:20.000Z</published>
    <updated>2016-06-12T15:21:35.747Z</updated>
    
    <content type="html">&lt;p&gt;本文从原理上探讨集合的基数，以及无穷大的分类依据。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;关于计数&quot;&gt;&lt;a href=&quot;#关于计数&quot; class=&quot;headerlink&quot; title=&quot;关于计数&quot;&gt;&lt;/a&gt;关于计数&lt;/h2&gt;&lt;p&gt;据考古证据显示，原始非洲部落的人对超过3的数是数不清楚的。就是说如果一个人他有4个儿子，他只会说有很多儿子，而不是4个。&lt;/p&gt;
&lt;p&gt;虽然原始人不会计数，但当数目比较多时，他们可以判断一个东西的个数是否比另一个东西多。而这条能被原始人理解使用的简单原理也是理解几类无穷大的关键。&lt;/p&gt;
&lt;h3 id=&quot;原始人怎么比较呢？&quot;&gt;&lt;a href=&quot;#原始人怎么比较呢？&quot; class=&quot;headerlink&quot; title=&quot;原始人怎么比较呢？&quot;&gt;&lt;/a&gt;原始人怎么比较呢？&lt;/h3&gt;&lt;p&gt;假设有一堆珠宝和一堆石头，要比较那一堆数目多，只需要每次从珠宝和石头中各拿出来一个，放到其他地方，一直拿，最终会有三种情况：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;珠宝拿完了剩下了石头；&lt;/li&gt;
&lt;li&gt;石头拿完了剩下了珠宝；&lt;/li&gt;
&lt;li&gt;珠宝和石头同时都没有了。&lt;br&gt;显然，第一种情况石头比珠宝多，第二种情况珠宝比石头多，第三种情况珠宝石头一样多。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;集合的基数&quot;&gt;&lt;a href=&quot;#集合的基数&quot; class=&quot;headerlink&quot; title=&quot;集合的基数&quot;&gt;&lt;/a&gt;集合的基数&lt;/h3&gt;&lt;p&gt;集合A和集合B有相同的基数，当且仅当存在从A到B的一一对应。&lt;br&gt;&lt;strong&gt;什么是一一对应呢？&lt;/strong&gt;如果你不知道，那高中数学的函数那一章你不可能及格。假设上面的珠宝集合是A，石头集合是B，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每拿掉一块珠宝，必须拿掉且仅拿掉一块石头;&lt;/li&gt;
&lt;li&gt;拿掉的珠宝和石头不能重新放进去；&lt;/li&gt;
&lt;li&gt;珠宝拿完以后，石头也恰好拿完。&lt;br&gt;满足上面三个条件，就可以称A-&amp;gt; B存在一个一一对应 （也称为 一一映射）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;可数集合&quot;&gt;&lt;a href=&quot;#可数集合&quot; class=&quot;headerlink&quot; title=&quot;可数集合&quot;&gt;&lt;/a&gt;可数集合&lt;/h3&gt;&lt;p&gt;有限集合以及与自然数集合基数相同的集合都称为&lt;strong&gt;可数集合&lt;/strong&gt;，其他的集合均是不可数集合。&lt;/p&gt;
&lt;p&gt;可数集合包括第一类基数&lt;strong&gt;无穷大&lt;/strong&gt;集合 - 零级无穷大。&lt;/p&gt;
&lt;h2 id=&quot;零级无穷大-整数个数&quot;&gt;&lt;a href=&quot;#零级无穷大-整数个数&quot; class=&quot;headerlink&quot; title=&quot;零级无穷大  - 整数个数&quot;&gt;&lt;/a&gt;零级无穷大  - 整数个数&lt;/h2&gt;&lt;h3 id=&quot;什么是无穷大？&quot;&gt;&lt;a href=&quot;#什么是无穷大？&quot; class=&quot;headerlink&quot; title=&quot;什么是无穷大？&quot;&gt;&lt;/a&gt;什么是无穷大？&lt;/h3&gt;&lt;p&gt;∞,infinity.简单的说，就是你比任何一个数都大。其实无穷大也是一个数，但你写不出来，它大到什么程度呢？想象一下地球上所有沙子的数目，无穷大比它要大，再大一点，地球上所有原子的数目，无穷大比它还要大。&lt;/p&gt;
&lt;p&gt;既然无穷大比任何数都大，那它和自己相比呢？是什么情况。我们知道，所有整数的个数是无穷大，所有偶数的个数也是无穷大，但整数包含奇数和偶数，那你觉得是整数多还是偶数多？如果你不加思索仅凭直觉，你可能会认为整数比偶数多，毕竟整数还包含奇数。&lt;/p&gt;
&lt;p&gt;正确答案是：&lt;strong&gt;整数和偶数一样多。&lt;/strong&gt; 为什么？&lt;br&gt;&lt;strong&gt;比较两个无穷大是否相等，关键看它们之间能否建立一个一一对应。 &lt;/strong&gt;&lt;br&gt;我们学一学非洲原始人吧，把整数和偶数分成两堆。从偶数里面拿掉2，相应的从整数里面拿掉1；从偶数里面拿掉4，相应的从整数里面拿掉2；…；从偶数里面拿掉n，从整数里面拿掉n/2…只要你从偶数里面拿掉任何一个，总是能从整数里面也拿掉一个，就是它除以2；相反，你从整数里面拿掉任意一个数m，对应的总是可以从偶数里面也拿掉一个数，就是2m。这样，所有整数和所有偶数就建立了一个对应一一对应关系，不重复不遗漏，所以这两个集合的基数相同。&lt;/p&gt;
&lt;h3 id=&quot;建立有理数到自然数的一一对应&quot;&gt;&lt;a href=&quot;#建立有理数到自然数的一一对应&quot; class=&quot;headerlink&quot; title=&quot;建立有理数到自然数的一一对应&quot;&gt;&lt;/a&gt;建立有理数到自然数的一一对应&lt;/h3&gt;&lt;p&gt;把所有有理数写成最简分数的形式，根据分子和分母的值把它们排列成二维的阵列，然后从1/1出发沿对角线方向蛇形遍历所有的数。第i个遍历到的数与自然数i对应，正有理数集与正整数集也就有了一一对应的关系。我们也可以把正有理数扩展到全体有理数。&lt;br&gt;&lt;img src=&quot;http://7xn1o8.com1.z0.glb.clouddn.com/200801131.gif&quot; alt=&quot;有理数与自然数一一对应示意图&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;一级无穷大-实数个数&quot;&gt;&lt;a href=&quot;#一级无穷大-实数个数&quot; class=&quot;headerlink&quot; title=&quot;一级无穷大  - 实数个数&quot;&gt;&lt;/a&gt;一级无穷大  - 实数个数&lt;/h2&gt;&lt;p&gt;问：&lt;strong&gt;一条长度为1的线段上面的点数与整数个数那个大？&lt;/strong&gt;&lt;br&gt;我们试着建立一个整数到点的一一对应：线段上的每一个点都可以表示为点到端点的距离，它是一个小数，比如0.72134355451…假设我们找到了一个一一对应,它是这样的：&lt;br&gt;&lt;img src=&quot;http://7xn1o8.com1.z0.glb.clouddn.com/infinity1.png&quot; alt=&quot;任意假定的整数到实数的一一对应&quot;&gt;&lt;br&gt;看到这个映射以后，我们还可以写出无穷多个不在这个表格里面的小数，怎么写呢？让这个小数的第一个小数位不同于表中第一个小数的第一个小数位，让它的第二个小数位不同于表中第二个小数的第二个小数位,…，例如，可以写出下面的小数：&lt;br&gt;&lt;img src=&quot;http://7xn1o8.com1.z0.glb.clouddn.com/infinity2.png&quot; alt=&quot;找出一个不在上述映射表中的实数&quot;&gt;&lt;br&gt;这个数无论如何在上表中是找不到的。这样一一对应就建立不起来。所以这条线段上的点数比整数的个数还要多得多。这就是两类不同的无穷大。&lt;/p&gt;
&lt;p&gt;那么，长度为1的线段和长度为2的线段，谁的点多呢？这就跟整数与偶数的比较一样，是一样多的。一一对应很简单：x-&amp;gt; 2x。实际上，不管线段多长，它与长度为1的线段可以建立下面的投影关系：&lt;br&gt;&lt;img src=&quot;http://7xn1o8.com1.z0.glb.clouddn.com/infinity3.png&quot; alt=&quot;长度不同的线段建立一一对应&quot;&gt;&lt;/p&gt;
&lt;p&gt;长度为1的线段与边长为1的正方形的点数是一样多的吗？是的：&lt;br&gt;&lt;img src=&quot;http://7xn1o8.com1.z0.glb.clouddn.com/infinity4.png&quot; alt=&quot;边长为1的正方形与长度为1的线段建立一一对应&quot;&gt;&lt;/p&gt;
&lt;p&gt;同样的，立方体内所有的点数和正 方形或线段上的所有点数相等，只要把代表线段上一个点的无穷小数分作三部分：&lt;br&gt;&lt;img src=&quot;http://7xn1o8.com1.z0.glb.clouddn.com/infinity5.png&quot; alt=&quot;边长为1的立方体与长度为1的线段建立一一对应&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;二级无穷大&quot;&gt;&lt;a href=&quot;#二级无穷大&quot; class=&quot;headerlink&quot; title=&quot;二级无穷大&quot;&gt;&lt;/a&gt;二级无穷大&lt;/h2&gt;&lt;p&gt;上面两种，分别称为0级和1级无穷大。那有没有比线段上的点还要多的无穷大呢？有，那就是所有曲线的数目，称为2级无穷大。目前只发现这三类无穷大（意思是可以被描述和表达出来的）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;有没有比三类无穷大都大的无穷大？&lt;/strong&gt;&lt;br&gt;有，见下文；&lt;br&gt;&lt;strong&gt;三类无穷的夹层中间有没有其他无穷大？&lt;/strong&gt;&lt;br&gt;不存在。&lt;/p&gt;
&lt;h2 id=&quot;小结&quot;&gt;&lt;a href=&quot;#小结&quot; class=&quot;headerlink&quot; title=&quot;小结&quot;&gt;&lt;/a&gt;小结&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;零级无穷大：所有整数的数量&lt;/li&gt;
&lt;li&gt;一级无穷大：所有小数的数量（等于上面提及的线上所有的点数、面上所有的点数、立方体上所有的点数）&lt;/li&gt;
&lt;li&gt;二级无穷大：在一张纸上随意地画线条，所有可能画出的线条数目（曲线样式的数目）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;零级无穷大 &amp;lt; 一级无穷大 &amp;lt; 二级无穷大&lt;/p&gt;
&lt;h3 id=&quot;三类无穷大的关系&quot;&gt;&lt;a href=&quot;#三类无穷大的关系&quot; class=&quot;headerlink&quot; title=&quot;三类无穷大的关系&quot;&gt;&lt;/a&gt;三类无穷大的关系&lt;/h3&gt;&lt;p&gt;可以证明：&lt;strong&gt;任何一个集合的所有子集所形成的集合的大小比原集合大。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最大的无穷大是多大呢？&lt;/strong&gt;&lt;br&gt;答案是没有尽头。&lt;/p&gt;
&lt;p&gt;事实上，[0,1）上的实数可以和正整数的所有子集的集合建立一一对应。&lt;/p&gt;
&lt;p&gt;把这些实数写成二进制。小数点后第n位为1，对应n在子集中，为0对应不在子集中，这样[0,1)上的实数就和正整数的子集有了一一对应，因此实数和正整数集的所有子集的个数一样多。&lt;/p&gt;
&lt;p&gt;也可以证明前面所说曲线可以和实数集的所有子集有一一对应关系。&lt;br&gt;我们把前面说所曲线看成一个集合，他的所有子集的个数又将比这个集合大。这个过程可以一直进行下去，得到越来越大的无穷大。&lt;br&gt;　　另外还有一个问题，整数的无穷大和实数的无穷大之间存不存在别的无穷大。也就是说，是否存在比整数的无穷大大，而比实数的无穷大小的无穷大。（连续统假设）&lt;br&gt;在现有集合公理下面，至今无法证明或证伪。&lt;/p&gt;
&lt;h3 id=&quot;参考文档&quot;&gt;&lt;a href=&quot;#参考文档&quot; class=&quot;headerlink&quot; title=&quot;参考文档&quot;&gt;&lt;/a&gt;参考文档&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://baike.baidu.com/view/530029.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;无穷大 - 百度百科&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://zh.wikipedia.org/zh/%E6%97%A0%E7%A9%B7&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;无穷 - 维基百科&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;&quot;&gt;《从1到无穷大-科学中的事实与臆测》&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      关于三类无穷大的讨论
    
    </summary>
    
      <category term="Math" scheme="http://debug4.me/categories/Math/"/>
    
    
      <category term="集合论" scheme="http://debug4.me/tags/%E9%9B%86%E5%90%88%E8%AE%BA/"/>
    
      <category term="基数" scheme="http://debug4.me/tags/%E5%9F%BA%E6%95%B0/"/>
    
      <category term="无穷大" scheme="http://debug4.me/tags/%E6%97%A0%E7%A9%B7%E5%A4%A7/"/>
    
      <category term="一一对应" scheme="http://debug4.me/tags/%E4%B8%80%E4%B8%80%E5%AF%B9%E5%BA%94/"/>
    
  </entry>
  
  <entry>
    <title>Project Euler Problem 387 - Harshad Numbers</title>
    <link href="http://debug4.me/Project-Euler/PE387/"/>
    <id>http://debug4.me/Project-Euler/PE387/</id>
    <published>2015-10-12T11:33:56.000Z</published>
    <updated>2016-06-12T15:21:35.745Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://projecteuler.net/problem=387&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Project Euler Problem 387&lt;/a&gt; - Find the sum of the strong, right truncatable Harshad primes less than 10&lt;sup&gt;14&lt;/sup&gt; ,&lt;em&gt;Completed on 2015-10-11  23:41&lt;/em&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;原题&quot;&gt;&lt;a href=&quot;#原题&quot; class=&quot;headerlink&quot; title=&quot;原题&quot;&gt;&lt;/a&gt;原题&lt;/h2&gt;&lt;p&gt;A Harshad or Niven number is a number that is divisible by the sum of its digits.&lt;br&gt;201 is a Harshad number because it is divisible by 3 (the sum of its digits.)&lt;br&gt;When we truncate the last digit from 201, we get 20, which is a Harshad number.&lt;br&gt;When we truncate the last digit from 20, we get 2, which is also a Harshad number.&lt;br&gt;Let’s call a Harshad number that, while recursively truncating the last digit, always results in a Harshad number a right truncatable Harshad number.&lt;/p&gt;
&lt;p&gt;Also:&lt;br&gt;201/3=67 which is prime.&lt;br&gt;Let’s call a Harshad number that, when divided by the sum of its digits, results in a prime a strong Harshad number.&lt;/p&gt;
&lt;p&gt;Now take the number 2011 which is prime.&lt;br&gt;When we truncate the last digit from it we get 201, a strong Harshad number that is also right truncatable.&lt;br&gt;Let’s call such primes strong, right truncatable Harshad primes.&lt;/p&gt;
&lt;p&gt;You are given that the sum of the strong, right truncatable Harshad primes less than 10000 is 90619.&lt;/p&gt;
&lt;p&gt;Find the sum of the strong, right truncatable Harshad primes less than 10&lt;sup&gt;14&lt;sup&gt;.&lt;/sup&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h2 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h2&gt;&lt;h3 id=&quot;Harshad-Numbers-哈沙德数&quot;&gt;&lt;a href=&quot;#Harshad-Numbers-哈沙德数&quot; class=&quot;headerlink&quot; title=&quot;Harshad Numbers(哈沙德数)&quot;&gt;&lt;/a&gt;&lt;a name=&quot;Harshad_number&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Harshad_number&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Harshad Numbers&lt;/a&gt;(&lt;a href=&quot;http://baike.baidu.com/view/1745210.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;哈沙德数&lt;/a&gt;)&lt;/h3&gt;&lt;p&gt;是可以在某个固定的进位制中,被其数位的数字之和整除的整数。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a name=&quot;right_truncatable_Harshadnumber&quot;&gt;&lt;/a&gt;right truncatable Harshad number :循环截掉哈沙德数右边一个数字，新数字还是哈沙德数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a name=&quot;strong_Harshad_number&quot;&gt;&lt;/a&gt;strong Harshad number:如果哈沙德数与它的各位数字之和的比值是素数。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a name=&quot;strong_Harshad_prime&quot;&gt;&lt;/a&gt;strong, right truncatable Harshad primes&lt;br&gt;是这样一类素数，去掉最后一个数字后，是一个&lt;a href=&quot;#strong_Harshad_number&quot;&gt;strong Harshad number&lt;/a&gt;也是一个&lt;a href=&quot;#right_truncatable_Harshadnumber&quot;&gt;right truncatable Harshad number&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;穷举法有两条思路：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;思路一：基于素数搜索。&lt;br&gt;  从11开始遍历下一个素数，判断它是不是满足&lt;a href=&quot;#strong_Harshad_prime&quot;&gt;条件&lt;/a&gt;的素数，把满足条件的素数相加直到10&lt;sup&gt;14&lt;/sup&gt;;&lt;/li&gt;
&lt;li&gt;思路二：基数哈沙德数搜索。&lt;br&gt;  从数字1 ~ 9开始(1 ~ 9都是哈沙德数)，深度遍历搜索哈沙德数，在哈沙德数基础上递归搜索这个数末尾加上0~9之后是否素数，是否是哈沙德数，以此遍历下去。每次在末尾添加0 ~ 9 可以保证哈沙德数都是right truncatable的，无需而外运算。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实践证明，思路一不可行，10&lt;sup&gt;14&lt;/sup&gt;以内的素数不是短时间内可以遍历完的，而且对每个素数进行条件判断也比较耗时。思路二可行。&lt;/p&gt;
&lt;h2 id=&quot;解题&quot;&gt;&lt;a href=&quot;#解题&quot; class=&quot;headerlink&quot; title=&quot;解题&quot;&gt;&lt;/a&gt;解题&lt;/h2&gt;&lt;h3 id=&quot;基数哈沙德数深度优先搜索&quot;&gt;&lt;a href=&quot;#基数哈沙德数深度优先搜索&quot; class=&quot;headerlink&quot; title=&quot;基数哈沙德数深度优先搜索&quot;&gt;&lt;/a&gt;基数哈沙德数深度优先搜索&lt;/h3&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; N = (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;) Math.pow(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * 按照 Truncatable HarshadNumber遍历：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; n a Right Truncatable HarshadNumber&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; ds sum of digits of n&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@param&lt;/span&gt; strong n is strong HarshadNumber&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     * &lt;span class=&quot;doctag&quot;&gt;@return&lt;/span&gt; 以n为前缀的所有StrongRightTruncatableHarshad素数之和&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sumHarshadNumber&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; n, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ds, &lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; strong)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        n = n * &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (n &amp;gt;= N) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; sum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt;= &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            n += i; &lt;span class=&quot;comment&quot;&gt;// new n&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ds += i;&lt;span class=&quot;comment&quot;&gt;// new ds&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (strong &amp;amp;&amp;amp; Util.isProbablePrime(n, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)) &amp;#123;&lt;span class=&quot;comment&quot;&gt;// new n is prime&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sum += n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (n % ds == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123; &lt;span class=&quot;comment&quot;&gt;// new n is a Right Truncatable HarshadNumber,recursive&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                sum += sumHarshadNumber(n, ds, Util.isProbablePrime(n / ds, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            n -= i;&lt;span class=&quot;comment&quot;&gt;// restore n&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ds -= i;&lt;span class=&quot;comment&quot;&gt;// restore ds&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sum;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中，&lt;code&gt;Util.isProbablePrime&lt;/code&gt; 如下：&lt;br&gt;&lt;figure class=&quot;highlight aspectj&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 判断v是否可能是素数，是素数的概率为：1-1/2^certainty&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * &lt;span class=&quot;doctag&quot;&gt;@return&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;isProbablePrime&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; v, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; certainty)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; BigInteger.valueOf(v).isProbablePrime(certainty);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;求和&quot;&gt;&lt;a href=&quot;#求和&quot; class=&quot;headerlink&quot; title=&quot;求和&quot;&gt;&lt;/a&gt;求和&lt;/h3&gt;&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;String[] args&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; s = System.nanoTime();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(sumHarshadNumbes());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;string&quot;&gt;&quot;Time consumed : &quot;&lt;/span&gt; + TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - s) + &lt;span class=&quot;string&quot;&gt;&quot; ms&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sumHarshadNumbers&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; sum = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sum += sumHarshadNumber(i, i, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sum;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出&quot;&gt;&lt;a href=&quot;#输出&quot; class=&quot;headerlink&quot; title=&quot;输出&quot;&gt;&lt;/a&gt;输出&lt;/h3&gt;&lt;figure class=&quot;highlight ada&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;696067597313468&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Time consumed : 168 &lt;span class=&quot;type&quot;&gt;ms&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      Project Euler Problem 387 - Harshad Numbers
    
    </summary>
    
      <category term="Project Euler" scheme="http://debug4.me/categories/Project-Euler/"/>
    
    
      <category term="素数" scheme="http://debug4.me/tags/%E7%B4%A0%E6%95%B0/"/>
    
      <category term="Project Euler" scheme="http://debug4.me/tags/Project-Euler/"/>
    
      <category term="哈沙德数" scheme="http://debug4.me/tags/%E5%93%88%E6%B2%99%E5%BE%B7%E6%95%B0/"/>
    
      <category term="尼云数" scheme="http://debug4.me/tags/%E5%B0%BC%E4%BA%91%E6%95%B0/"/>
    
      <category term="数论" scheme="http://debug4.me/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="Harshad number" scheme="http://debug4.me/tags/Harshad-number/"/>
    
      <category term="深度遍历" scheme="http://debug4.me/tags/%E6%B7%B1%E5%BA%A6%E9%81%8D%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>hexo建立github,gitcafe博客并实时同步的要点</title>
    <link href="http://debug4.me/%E5%B7%A5%E5%85%B7/hexo-github-gitcafe/"/>
    <id>http://debug4.me/工具/hexo-github-gitcafe/</id>
    <published>2015-10-11T05:40:51.000Z</published>
    <updated>2016-06-12T15:21:35.747Z</updated>
    
    <content type="html">&lt;p&gt;把hexo博客的源码和生成的页面实时同步到github和gitcafe。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;用搜索引擎搜索”github 博客”等关键字会出现大量很好的文章教小白一步步搭建。我这里列出一些关键点，希望可以让你少走弯路。这篇博客的markdown源代码在：&lt;a href=&quot;https://gitcafe.com/cwjcsu/cwjcsu/blob/master/source/_posts/hexo-github-gitcafe.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://gitcafe.com/cwjcsu/cwjcsu/blob/master/source/_posts/hexo-github-gitcafe.md&lt;/a&gt;&lt;br&gt;其他涉及的源码在同一个仓库可以找到。&lt;/p&gt;
&lt;h2 id=&quot;1，-不一定要购买域名&quot;&gt;&lt;a href=&quot;#1，-不一定要购买域名&quot; class=&quot;headerlink&quot; title=&quot;1， 不一定要购买域名&quot;&gt;&lt;/a&gt;1， 不一定要购买域名&lt;/h2&gt;&lt;p&gt;很多文章都有介绍购买域名，并在根目录下配置CName文件，其实不一定要购买的。Github会给每个用户一个二级域名:cwjcsu.github.io。这个二级域名下，你可以定制样式、404页面等等，记住最重要的一点：你创建的github的仓库名称必须是cwjcsu.github.io,这样你只要在master分支上 仓库根目录push一个index.html，这个页面就可以通过 &lt;a href=&quot;http://cwjcsu.github.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://cwjcsu.github.io&lt;/a&gt; 访问到。cwjcsu是我的github用户名，实际操作中替换成你的即可。&lt;/p&gt;
&lt;h2 id=&quot;2，使用gh-pages分支创建的页面&quot;&gt;&lt;a href=&quot;#2，使用gh-pages分支创建的页面&quot; class=&quot;headerlink&quot; title=&quot;2，使用gh_pages分支创建的页面&quot;&gt;&lt;/a&gt;2，使用gh_pages分支创建的页面&lt;/h2&gt;&lt;p&gt;在github上，你可以为你的任何仓库添加一个网站，你只需要：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;把网站的页面push到这个仓库的gh_pages分支；（github有向导可以指引你自动创建这个分支）&lt;/li&gt;
&lt;li&gt;通过&lt;a href=&quot;http://username.github.io/reponame&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://username.github.io/reponame&lt;/a&gt; 进行访问（即&lt;code&gt;http://博客地址/仓库名称/&lt;/code&gt;）。我的github博客地址是：&lt;a href=&quot;http://cwjcsu.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;http://cwjcsu.github.io/&lt;/code&gt;&lt;/a&gt;，而joutable是我一个开源项目的仓库名称，它的页面可以通过&lt;a href=&quot;http://cwjcsu.github.io/joutable&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://cwjcsu.github.io/joutable&lt;/a&gt; 访问到&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;3，举例说明&quot;&gt;&lt;a href=&quot;#3，举例说明&quot; class=&quot;headerlink&quot; title=&quot;3，举例说明&quot;&gt;&lt;/a&gt;3，举例说明&lt;/h2&gt;&lt;p&gt;我在github上面的首页是：&lt;a href=&quot;https://github.com/cwjcsu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/cwjcsu&lt;/a&gt;&lt;br&gt;我在github上的博客源码仓库是：&lt;a href=&quot;https://github.com/cwjcsu/cwjcsu.github.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/cwjcsu/cwjcsu.github.io&lt;/a&gt;&lt;br&gt;我在github上博客首页：&lt;a href=&quot;http://cwjcsu.github.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://cwjcsu.github.io&lt;/a&gt;&lt;br&gt;我的一个开源项目joutable仓库是：&lt;a href=&quot;https://github.com/cwjcsu/joutable&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/cwjcsu/joutable&lt;/a&gt; ，有两个分支，一个是master放置开源项目源码，一个是gh_pages放置项目介绍页面可以通过&lt;a href=&quot;http://cwjcsu.github.io/joutable/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://cwjcsu.github.io/joutable/&lt;/a&gt; 访问&lt;/p&gt;
&lt;h2 id=&quot;4，hexo搭建&quot;&gt;&lt;a href=&quot;#4，hexo搭建&quot; class=&quot;headerlink&quot; title=&quot;4，hexo搭建&quot;&gt;&lt;/a&gt;4，hexo搭建&lt;/h2&gt;&lt;p&gt;hexo主页：&lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://hexo.io/&lt;/a&gt;&lt;br&gt;经过试用，hexo用来写博客真是不二选择（配合&lt;a href=&quot;http://www.sublimetext.com/3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sublime Text3&lt;/a&gt; +&lt;a href=&quot;http://www.cnblogs.com/IPrograming/p/Sublime-markdown-editor.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown Editing&lt;/a&gt;,），具有下面的优势：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用markdown，完美支持github-flavored-markdown&lt;/li&gt;
&lt;li&gt;实时本地预览，（#hexo s 创建一个本地http-server在本地实时预览你的博客网站）&lt;/li&gt;
&lt;li&gt;大量丰富的主题模版(&lt;a href=&quot;https://hexo.io/themes/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://hexo.io/themes/&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;支持Tex语法(通过mathjax:&lt;a href=&quot;https://www.mathjax.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.mathjax.org&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;一键部署到多个站点（这个是我自己写的git脚本，下面有介绍）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用hexo需要安装nodejs，npm，以及其他的依赖工具，网上教程不少，本文不赘述（遇到问题可以给我留言），不过特别提醒以下几点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;.yml 配置文件采用缩进进行分开，key和value之间至少要有一个空格；&lt;/li&gt;
&lt;li&gt;如果hexo生成的html里面有乱码，那是对应的源文件没有用UTF-8保存，你可以使用nodepadd++或者记事本把他们保存为UTF-8，然后重新生成即可；&lt;/li&gt;
&lt;li&gt;使用&lt;code&gt;&amp;lt;!--more--&amp;gt;&lt;/code&gt;用来分割摘要和正文，上面部分是摘要，会出现在主页。同wordpress。&lt;/li&gt;
&lt;li&gt;description:xxx 会生成网页的description描述:&lt;code&gt;&amp;lt;meta property=&amp;quot;og:description&amp;quot; content=&amp;quot;xxx&amp;quot;&amp;gt;&lt;/code&gt;这是SEO需要注意的地方。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;推荐几篇好文章：&quot;&gt;&lt;a href=&quot;#推荐几篇好文章：&quot; class=&quot;headerlink&quot; title=&quot;推荐几篇好文章：&quot;&gt;&lt;/a&gt;推荐几篇好文章：&lt;/h3&gt;&lt;p&gt;hexo搭建博客：&lt;a href=&quot;http://www.cnblogs.com/zhcncn/p/4097881.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cnblogs.com/zhcncn/p/4097881.html&lt;/a&gt;&lt;br&gt;hexo的Jacman主题：&lt;a href=&quot;https://github.com/wuchong/jacman&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/wuchong/jacman&lt;/a&gt;&lt;br&gt;hexo配置介绍：&lt;a href=&quot;https://hexo.io/docs/configuration.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://hexo.io/docs/configuration.html&lt;/a&gt;&lt;br&gt;markdown大全：&lt;a href=&quot;http://cwjcsu.gitcafe.io/2015/09/26/markdown-learning/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://cwjcsu.gitcafe.io/2015/09/26/markdown-learning/&lt;/a&gt; &lt;/p&gt;
&lt;h2 id=&quot;5，hexo部署&quot;&gt;&lt;a href=&quot;#5，hexo部署&quot; class=&quot;headerlink&quot; title=&quot;5，hexo部署&quot;&gt;&lt;/a&gt;5，hexo部署&lt;/h2&gt;&lt;p&gt;在hexo配置文件_config.yml 有个deploy的配置项目用来配置git仓库，注意type需设置为git，是hexo3中的类型，需要安装：hexo-deployer-git：&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; hexo-deployer-git &lt;span class=&quot;comment&quot;&gt;--save&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;网上的教程大多是hexo2的，很多文章没有指出这个区别。&lt;/p&gt;
&lt;p&gt;#hexo deploy 可以一键部署到github仓库，但是我需要部署到不同仓库，所以没有采用hexo的自动部署，二是写了一个脚本：&lt;br&gt;在hexo生成的博客根目录cwjcsu.github.io下有个脚本：up.sh&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit -am &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$1&lt;/span&gt;&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push github master:master &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push gitcafe master:gitcafe-pages&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;于是，可以通过下面命令一键把生成的博客内容更新到github和gitcafe了。&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#./up&lt;span class=&quot;selector-class&quot;&gt;.sh&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;commit comment&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt; 下面是我的git配置文件：cwjcsu.github.io/.git/config&lt;/p&gt;
&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[core]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    repositoryformatversion = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    filemode = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bare = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    logallrefupdates = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    symlinks = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ignorecase = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    hideDotFiles = dotGitOnly&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[remote &lt;span class=&quot;string&quot;&gt;&quot;gitcafe&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url = git&lt;span class=&quot;variable&quot;&gt;@gitcafe&lt;/span&gt;.&lt;span class=&quot;symbol&quot;&gt;com:&lt;/span&gt;cwjcsu/cwjcsu.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fetch = +refs/heads/*&lt;span class=&quot;symbol&quot;&gt;:refs/remotes/gitcafe/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[remote &lt;span class=&quot;string&quot;&gt;&quot;github&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url = git&lt;span class=&quot;variable&quot;&gt;@github&lt;/span&gt;.&lt;span class=&quot;symbol&quot;&gt;com:&lt;/span&gt;cwjcsu/cwjcsu.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fetch = +refs/heads/*&lt;span class=&quot;symbol&quot;&gt;:refs/remotes/github/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[branch &lt;span class=&quot;string&quot;&gt;&quot;master&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    remote = github&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    merge = refs/heads/master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 可以看到有两个remote：github和gitcafe，分别配置github和gitcafe上面我的博客所在的仓库地址。up.sh脚本中gitcafe的分支是gitcafe-pages而不是master，仓库名称也不是域名而是直接用户名。这是因为gitcafe博客与github博客略有不同，下面会介绍。&lt;br&gt; 为了避免每次push都提示你输入用户名和密码，你需要在github和gitcafe中添加你的公钥，具体操作本文不赘述。[user]部分我没有贴出来。&lt;/p&gt;
&lt;h2 id=&quot;6-gitcafe博客&quot;&gt;&lt;a href=&quot;#6-gitcafe博客&quot; class=&quot;headerlink&quot; title=&quot;6,gitcafe博客&quot;&gt;&lt;/a&gt;6,gitcafe博客&lt;/h2&gt;&lt;p&gt; 与github不同的是，创建gitcafe的博客，&lt;strong&gt;你只需要创建一个和你的用户名一样的仓库，然后把页面push到这个仓库的gitcafe-pages分支即可&lt;/strong&gt;，然后把源码push到这个分支的master。&lt;br&gt; 比如：&lt;br&gt; 博客所在仓库是：&lt;a href=&quot;https://gitcafe.com/cwjcsu/cwjcsu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://gitcafe.com/cwjcsu/cwjcsu&lt;/a&gt;&lt;br&gt; 博客源码的分支是master：&lt;a href=&quot;https://gitcafe.com/cwjcsu/cwjcsu/tree/master&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://gitcafe.com/cwjcsu/cwjcsu/tree/master&lt;/a&gt;&lt;br&gt; 博客页面分支是gitcafe-pages：&lt;a href=&quot;https://gitcafe.com/cwjcsu/cwjcsu/tree/gitcafe-pages&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://gitcafe.com/cwjcsu/cwjcsu/tree/gitcafe-pages&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; 这两个分支与github上两个仓库代码是同一份，我又写了个脚本，用来实时push博客源码到两个仓库：blog/up.sh: (blog是博客源码所在目录)&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit -am &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$1&lt;/span&gt;&quot;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push github master:master &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push gitcafe master:master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;blog/.git/config:&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[core]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    repositoryformatversion = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    filemode = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    bare = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    logallrefupdates = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    symlinks = &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ignorecase = &lt;span class=&quot;keyword&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    hideDotFiles = dotGitOnly&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[remote &lt;span class=&quot;string&quot;&gt;&quot;gitcafe&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url = git&lt;span class=&quot;variable&quot;&gt;@gitcafe&lt;/span&gt;.&lt;span class=&quot;symbol&quot;&gt;com:&lt;/span&gt;cwjcsu/cwjcsu.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fetch = +refs/heads/*&lt;span class=&quot;symbol&quot;&gt;:refs/remotes/gitcafe/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[remote &lt;span class=&quot;string&quot;&gt;&quot;github&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    url = git&lt;span class=&quot;variable&quot;&gt;@github&lt;/span&gt;.&lt;span class=&quot;symbol&quot;&gt;com:&lt;/span&gt;cwjcsu/blog.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fetch = +refs/heads/*&lt;span class=&quot;symbol&quot;&gt;:refs/remotes/github/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[branch &lt;span class=&quot;string&quot;&gt;&quot;master&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    remote = github&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    merge = refs/heads/master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;[user]部分我没有贴出来。&lt;/p&gt;
&lt;h2 id=&quot;7-配置评论系统和百度统计&quot;&gt;&lt;a href=&quot;#7-配置评论系统和百度统计&quot; class=&quot;headerlink&quot; title=&quot;7,配置评论系统和百度统计&quot;&gt;&lt;/a&gt;7,配置评论系统和百度统计&lt;/h2&gt;&lt;p&gt;我使用了国内很火的一个评论系统：&lt;a href=&quot;http://duoshuo.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;多说&lt;/a&gt;,注册、添加站点后，只需要把ID设置到hexo主题的_config.yml文件里面即可（注意不是hexo的配置文件而是themes/jacman/_config.yml，jacman是我使用的一个主题）。添加百度统计网上教程很多不赘述。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      把hexo博客的源码和生成的页面实时同步到github和gitcafe。
    
    </summary>
    
      <category term="工具" scheme="http://debug4.me/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="hexo" scheme="http://debug4.me/tags/hexo/"/>
    
      <category term="blogs" scheme="http://debug4.me/tags/blogs/"/>
    
      <category term="github" scheme="http://debug4.me/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Project Euler Problem 318 - Counting the number of consecutive nines at the beginning of the fractional part of (√p+√q)^2n</title>
    <link href="http://debug4.me/Project-Euler/PE318/"/>
    <id>http://debug4.me/Project-Euler/PE318/</id>
    <published>2015-10-10T07:40:11.000Z</published>
    <updated>2016-06-12T15:21:35.745Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://projecteuler.net/problem=318&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Project Euler Problem 318&lt;/a&gt; - 涉及二项式分解、接近整数、Pisot数等数学知识 ,&lt;em&gt;Completed on 2015-10-10  15:00&lt;/em&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;原题&quot;&gt;&lt;a href=&quot;#原题&quot; class=&quot;headerlink&quot; title=&quot;原题&quot;&gt;&lt;/a&gt;原题&lt;/h2&gt;&lt;p&gt;Consider the real number √2+√3.&lt;br&gt;When we calculate the even powers of √2+√3 we get:&lt;br&gt;(√2+√3)&lt;sup&gt;2&lt;/sup&gt; = 9.898979485566356…&lt;br&gt;(√2+√3)&lt;sup&gt;4&lt;/sup&gt; = 97.98979485566356…&lt;br&gt;(√2+√3)&lt;sup&gt;6&lt;/sup&gt; = 969.998969071069263…&lt;br&gt;(√2+√3)&lt;sup&gt;8&lt;/sup&gt; = 9601.99989585502907…&lt;br&gt;(√2+√3)&lt;sup&gt;10&lt;/sup&gt; = 95049.999989479221…&lt;br&gt;(√2+√3)&lt;sup&gt;11&lt;/sup&gt; = 940897.9999989371855…&lt;br&gt;(√2+√3)&lt;sup&gt;14&lt;/sup&gt; = 9313929.99999989263…&lt;br&gt;(√2+√3)&lt;sup&gt;16&lt;/sup&gt; = 92198401.99999998915…&lt;/p&gt;
&lt;p&gt;It looks like that the number of consecutive nines at the beginning of the fractional part of these powers is non-decreasing.&lt;br&gt;In fact it can be proven that the fractional part of (√2+√3)&lt;sup&gt;2n&lt;/sup&gt; approaches 1 for large n.&lt;/p&gt;
&lt;p&gt;Consider all real numbers of the form √p+√q with p and q positive integers and p&amp;lt;q, such that the fractional part of (√p+√q)&lt;sup&gt;2n&lt;/sup&gt; approaches 1 for large n.&lt;/p&gt;
&lt;p&gt;Let C(p,q,n) be the number of consecutive nines at the beginning of the f于actional part of&lt;br&gt;(√p+√q)&lt;sup&gt;2n&lt;/sup&gt; = (p+q+2.√pq)&lt;sup&gt;2n&lt;/sup&gt;,&lt;br&gt;(√p+√q)&lt;sup&gt;2n&lt;/sup&gt; = (p+q+2.√pq)&lt;sup&gt;2n&lt;/sup&gt;,&lt;/p&gt;
&lt;p&gt;Let N(p,q) be the minimal value of n such that C(p,q,n) ≥ 2011.&lt;/p&gt;
&lt;p&gt;Find ∑N(p,q) for p+q ≤ 2011.&lt;/p&gt;
&lt;h2 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h2&gt;&lt;p&gt;题中的(√2+√3)&lt;sup&gt;2&lt;/sup&gt;就是一个&lt;a href=&quot;https://en.wikipedia.org/wiki/Pisot%E2%80%93Vijayaraghavan_number&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pisot数&lt;/a&gt;，它具有这个特点：&lt;br&gt;当n趋向无穷大的时候，它的n次方趋向一个整数，而它的共轭实数(√2-√3)&lt;sup&gt;2&lt;/sup&gt;的n次方趋向0。而且这两个n次方数相加是一个整数。&lt;/p&gt;
&lt;h3 id=&quot;共轭实数&quot;&gt;&lt;a href=&quot;#共轭实数&quot; class=&quot;headerlink&quot; title=&quot; 共轭实数&quot;&gt;&lt;/a&gt;&lt;a name=&quot;conjugates&quot;&gt;&lt;/a&gt; 共轭实数&lt;/h3&gt;&lt;p&gt;形如a+b√m和a-b√m的两个实数,叫做共轭实数。&lt;/p&gt;
&lt;h3 id=&quot;证明它们的n次方和是整数&quot;&gt;&lt;a href=&quot;#证明它们的n次方和是整数&quot; class=&quot;headerlink&quot; title=&quot;证明它们的n次方和是整数&quot;&gt;&lt;/a&gt;证明它们的n次方和是整数&lt;/h3&gt;&lt;p&gt;对于p和q：&lt;br&gt;(√p+√q)&lt;sup&gt;2n&lt;/sup&gt; = (p+q+2√pq)&lt;sup&gt;2n&lt;/sup&gt;,&lt;br&gt;(√p-√q)&lt;sup&gt;2n&lt;/sup&gt; = (p+q-2√pq)&lt;sup&gt;2n&lt;/sup&gt;,&lt;br&gt;设a = p+q,b = 2√pq，&lt;br&gt;（这里a+b与a-b是&lt;a href=&quot;#conjugates&quot;&gt;共轭实数&lt;/a&gt;，它们的小数部分相加等于1，现在证明它们的任意n次方和是整数）&lt;br&gt;则&lt;br&gt;(√p+√q)&lt;sup&gt;2n&lt;/sup&gt; + (p+q-2√pq)&lt;sup&gt;2n&lt;/sup&gt; = (a+b)&lt;sup&gt;n&lt;/sup&gt;+(a-b)&lt;sup&gt;n&lt;/sup&gt;,其中a是整数，b是实数，&lt;br&gt;根据二项式展开式可知，所有展开项中，b为偶数次方的都同号，b为奇数次方的都不同号（从而相减消除了），而b的偶数次方是整数，所以展开项相加也是整数。&lt;/p&gt;
&lt;h3 id=&quot;扩展-Fibonacci数&quot;&gt;&lt;a href=&quot;#扩展-Fibonacci数&quot; class=&quot;headerlink&quot; title=&quot;扩展-Fibonacci数&quot;&gt;&lt;/a&gt;扩展-Fibonacci数&lt;/h3&gt;&lt;p&gt;Fibonacci数就是两个共轭实数的n次方和：&lt;br&gt;$$a_n = A \left(  { \frac {1 + \sqrt 5} 2 } \right) ^ n + B \left( { \frac {1 - \sqrt 5} 2 } \right) ^ n.$$&lt;/p&gt;
&lt;h3 id=&quot;√p-√q-lt-1&quot;&gt;&lt;a href=&quot;#√p-√q-lt-1&quot; class=&quot;headerlink&quot; title=&quot;|√p-√q|&amp;lt; 1&quot;&gt;&lt;/a&gt;|√p-√q|&amp;lt; 1&lt;/h3&gt;&lt;p&gt;还有一个关键条件，就是必须满足|√p-√q|&amp;lt; 1，即(a-b)&amp;lt;1 才是上面几个结论成立的关键，也是解答本题的关键（证明还没有找到）。&lt;/p&gt;
&lt;h2 id=&quot;解题&quot;&gt;&lt;a href=&quot;#解题&quot; class=&quot;headerlink&quot; title=&quot;解题&quot;&gt;&lt;/a&gt;解题&lt;/h2&gt;&lt;p&gt;为了使(√p+√q)&lt;sup&gt;2n&lt;/sup&gt;的小数有2011或更多的9，那么(√p-√q)&lt;sup&gt;2n&lt;/sup&gt;的小数就必须具有2011或更多的0（就是非常接近0），从而：&lt;br&gt;$$(\sqrt p - \sqrt q)^{2n}  \le 10 ^{-2011}$$&lt;br&gt;可以导出：&lt;br&gt;$$n \ge \frac{-2011}{2\lg(\sqrt q -\sqrt p)}$$&lt;/p&gt;
&lt;p&gt;n取最小值：&lt;br&gt;$$n = ceil(\frac{-2011}{2\lg(\sqrt q -\sqrt p)})$$&lt;/p&gt;
&lt;p&gt;于是，只需要循环p和q，寻找满足条件的 (a-b)&amp;lt;1 的p、q对，然后计算n，并相加即可。&lt;/p&gt;
&lt;h3 id=&quot;代码&quot;&gt;&lt;a href=&quot;#代码&quot; class=&quot;headerlink&quot; title=&quot;代码&quot;&gt;&lt;/a&gt;代码&lt;/h3&gt;&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; main(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt;[] args) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; t = System.nanoTime();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; s = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; L = &lt;span class=&quot;number&quot;&gt;2011&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; p = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; p &amp;lt; L; p++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; q = p + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; q &amp;lt; L - p + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; q++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; c = p + q - &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * Math.&lt;span class=&quot;built_in&quot;&gt;sqrt&lt;/span&gt;(p * q);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (c &amp;lt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;span class=&quot;comment&quot;&gt;// 等价于 (√q-√p) &amp;lt; 1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                s += Math.&lt;span class=&quot;built_in&quot;&gt;ceil&lt;/span&gt;(-L / Math.log10(c));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.&lt;span class=&quot;built_in&quot;&gt;println&lt;/span&gt;(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.&lt;span class=&quot;built_in&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Time consumed &quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            + TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - t) + &lt;span class=&quot;string&quot;&gt;&quot; ms&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出：&lt;br&gt;&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;709313889&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Time consumed &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt; ms&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;小结：&quot;&gt;&lt;a href=&quot;#小结：&quot; class=&quot;headerlink&quot; title=&quot;小结：&quot;&gt;&lt;/a&gt;小结：&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://blog.dreamshire.com/project-euler-318-solution/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考1&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://projecteuler.net/thread=318&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考2-NickMcG&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Pisot%E2%80%93Vijayaraghavan_number&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Pisot–Vijayaraghavan_number&lt;/a&gt; &lt;/p&gt;
</content>
    
    <summary type="html">
    
      Project Euler Problem 318 - Counting the number of consecutive nines at the beginning of the fractional part of (√p+√q)^2n
    
    </summary>
    
      <category term="Project Euler" scheme="http://debug4.me/categories/Project-Euler/"/>
    
    
      <category term="Project Euler" scheme="http://debug4.me/tags/Project-Euler/"/>
    
      <category term="Java" scheme="http://debug4.me/tags/Java/"/>
    
      <category term="共轭实数" scheme="http://debug4.me/tags/%E5%85%B1%E8%BD%AD%E5%AE%9E%E6%95%B0/"/>
    
      <category term="二项式" scheme="http://debug4.me/tags/%E4%BA%8C%E9%A1%B9%E5%BC%8F/"/>
    
      <category term="Pisot数" scheme="http://debug4.me/tags/Pisot%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Project Euler Problem 455 - Powers With Trailing Digits</title>
    <link href="http://debug4.me/Project-Euler/PE455/"/>
    <id>http://debug4.me/Project-Euler/PE455/</id>
    <published>2015-10-10T01:40:11.000Z</published>
    <updated>2016-06-12T15:21:35.746Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://projecteuler.net/problem=455&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Project Euler Problem 455 - Powers With Trailing Digits&lt;/a&gt; ,&lt;em&gt;Completed on 2015-10-10  00:50&lt;/em&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;原题&quot;&gt;&lt;a href=&quot;#原题&quot; class=&quot;headerlink&quot; title=&quot;原题&quot;&gt;&lt;/a&gt;原题&lt;/h2&gt;&lt;p&gt;Let f(n) be the largest positive integer x less than 10&lt;sup&gt;9&lt;/sup&gt; such that the last 9 digits of n&lt;sup&gt;x&lt;/sup&gt; form the number x (including leading zeros), or zero if no such integer exists.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;f(4) = 411728896 (4&lt;sup&gt;411728896&lt;/sup&gt; = …490411728896)&lt;/li&gt;
&lt;li&gt;f(10) = 0&lt;/li&gt;
&lt;li&gt;f(157) = 743757 (157&lt;sup&gt;743757&lt;/sup&gt; = …567000743757)&lt;/li&gt;
&lt;li&gt;Σf(n), 2 ≤ n ≤ 10&lt;sup&gt;3&lt;/sup&gt; = 442530011399&lt;br&gt;Find Σf(n), 2 ≤ n ≤ 10&lt;sup&gt;6&lt;/sup&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h2&gt;&lt;p&gt;设 f(n) = x，根据题意可得：&lt;br&gt;n&lt;sup&gt;x&lt;/sup&gt;≡x(mod 10&lt;sup&gt;9&lt;/sup&gt;)&lt;br&gt;也就是x满足：&lt;br&gt;x = powerMod(n,x,10&lt;sup&gt;9&lt;/sup&gt;)  [1]&lt;br&gt;所以，为了求f(n)的值x，可以用穷举试探法，从 x = 0开始试探，直到找到满足[1]的x，或者x变成0；x每次递归取值为:&lt;br&gt;    x&lt;sub&gt;k+1&lt;/sub&gt; = powerMod(n,  x&lt;sub&gt;k&lt;/sub&gt;,  10&lt;sup&gt;9&lt;/sup&gt;);&lt;br&gt;终止条件是：&lt;br&gt;    x&lt;sub&gt;k+1&lt;/sub&gt; = x&lt;sub&gt;k&lt;/sub&gt; or x&lt;sub&gt;k+1&lt;/sub&gt;=0&lt;/p&gt;
&lt;h2 id=&quot;递推算法实现&quot;&gt;&lt;a href=&quot;#递推算法实现&quot; class=&quot;headerlink&quot; title=&quot;递推算法实现&quot;&gt;&lt;/a&gt;递推算法实现&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 求f(n) = x，满足：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * （1）， n^x % 10^9 = x； or&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * （2），x=0 如果不存在满足（1）的x &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; m = (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;) Math.&lt;span class=&quot;built_in&quot;&gt;pow&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; k = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; x = powerMod(n, k, m);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (x == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (k == x &amp;amp;&amp;amp; x &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        k = x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;powerMod是幂模运算的快速算法，参见&lt;a href=&quot;/2015/10/09/PE188/#powerMod&quot;&gt;蒙哥马利(Montgomery)幂模运算&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;解决问题&quot;&gt;&lt;a href=&quot;#解决问题&quot; class=&quot;headerlink&quot; title=&quot;解决问题&quot;&gt;&lt;/a&gt;解决问题&lt;/h2&gt;&lt;p&gt;从i=2到10&lt;sup&gt;9&lt;/sup&gt;遍历相加f(i)得到结果：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * 求f(n) = x，满足：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * （1）， n^x % 10^9 = x； or&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * （2），x=0 如果不存在满足（1）的x &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; m = (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;) Math.&lt;span class=&quot;built_in&quot;&gt;pow&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; k = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (&lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; x = Util.powerMod(n, k, m);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (k == x || x == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        k = x;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;输出&quot;&gt;&lt;a href=&quot;#输出&quot; class=&quot;headerlink&quot; title=&quot;输出&quot;&gt;&lt;/a&gt;输出&lt;/h3&gt;&lt;figure class=&quot;highlight ada&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;450186511399999&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Time consumed : 983 &lt;span class=&quot;type&quot;&gt;ms&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;小结&quot;&gt;&lt;a href=&quot;#小结&quot; class=&quot;headerlink&quot; title=&quot;小结&quot;&gt;&lt;/a&gt;小结&lt;/h2&gt;&lt;p&gt;这个题目也用到了快速幂模运算，求解f(n)，理解f(n)=x对x进行迭代是解决问题的关键。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      Project Euler Problem 455 - Powers With Trailing Digits
    
    </summary>
    
      <category term="Project Euler" scheme="http://debug4.me/categories/Project-Euler/"/>
    
    
      <category term="Project Euler" scheme="http://debug4.me/tags/Project-Euler/"/>
    
      <category term="幂模运算" scheme="http://debug4.me/tags/%E5%B9%82%E6%A8%A1%E8%BF%90%E7%AE%97/"/>
    
      <category term="Java" scheme="http://debug4.me/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Project Euler Problem 188-求超指数的最后8位-大数求余</title>
    <link href="http://debug4.me/Project-Euler/PE188/"/>
    <id>http://debug4.me/Project-Euler/PE188/</id>
    <published>2015-10-09T11:36:36.000Z</published>
    <updated>2016-06-12T15:21:35.744Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://projecteuler.net/problem=188&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Project Euler 188&lt;/a&gt; ,求超指数1777↑↑1855的最后8位。&lt;em&gt;Completed on 2013-04-28  11:27&lt;/em&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;原题&quot;&gt;&lt;a href=&quot;#原题&quot; class=&quot;headerlink&quot; title=&quot;原题&quot;&gt;&lt;/a&gt;原题&lt;/h2&gt;&lt;p&gt;The hyperexponentiation or tetration of a number &lt;code&gt;a&lt;/code&gt; by a positive integer &lt;code&gt;b&lt;/code&gt;, denoted by &lt;code&gt;a↑↑b&lt;/code&gt; or &lt;sup&gt;b&lt;/sup&gt;a, is recursively defined by:&lt;/p&gt;
&lt;p&gt;a↑↑1 = a,&lt;br&gt;a↑↑(k+1) = a&lt;sup&gt;(a↑↑k)&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Thus we have e.g. 3↑↑2 = 3&lt;sup&gt;3&lt;/sup&gt; = 27, hence 3↑↑3 = 3&lt;sup&gt;27&lt;/sup&gt; = 7625597484987 and 3↑↑4 is roughly 103.6383346400240996*10^12.&lt;/p&gt;
&lt;p&gt;Find the last 8 digits of 1777↑↑1855.&lt;/p&gt;
&lt;h2 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h2&gt;&lt;p&gt;这个数必然是个天文数字，我机器上的整个硬盘也存不下它。求这个数T的最后8位数字，其实就是求&lt;code&gt;T mod 10^8&lt;/code&gt;。有一个关于模运算的公式：&lt;br&gt;(A * B) % M = ( (A % M) * (B % M) )%M&lt;br&gt;从而:&lt;br&gt;A&lt;sup&gt;n&lt;/sup&gt; % M = (A % M)&lt;sup&gt;n&lt;/sup&gt; % M&lt;/p&gt;
&lt;h2 id=&quot;快速幂模运算-二分法&quot;&gt;&lt;a href=&quot;#快速幂模运算-二分法&quot; class=&quot;headerlink&quot; title=&quot;快速幂模运算 - 二分法&quot;&gt;&lt;/a&gt;快速幂模运算 - 二分法&lt;/h2&gt;&lt;h3 id=&quot;递归法&quot;&gt;&lt;a href=&quot;#递归法&quot; class=&quot;headerlink&quot; title=&quot;递归法&quot;&gt;&lt;/a&gt;递归法&lt;/h3&gt;&lt;p&gt;实现 n&lt;sup&gt;p&lt;/sup&gt; % m 的二分法求模算法如下：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;powerMod2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; n, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; p, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; m)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (p == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (p == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; n % m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; tmp = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tmp = powerMod2(n, p / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, m);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tmp = tmp * tmp % m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((p &amp;amp; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        tmp = tmp * n % m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; tmp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;解析：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当p为奇数时：&lt;br&gt;n&lt;sup&gt;p&lt;/sup&gt;%m = (n % m) &lt;em&gt; n&lt;sup&gt;p-1&lt;/sup&gt; % m = r &lt;/em&gt; n&lt;sup&gt;p-1&lt;/sup&gt; % m ，此是p-1为偶数；&lt;/li&gt;
&lt;li&gt;当p为偶数时：&lt;br&gt;  n&lt;sup&gt;p&lt;/sup&gt; % m = n&lt;sup&gt;2k&lt;/sup&gt; % m = (n&lt;sup&gt;k&lt;/sup&gt; % m )&lt;sup&gt;2&lt;/sup&gt; % m = tmp * tmp % m&lt;br&gt;  其中k = p/2,tmp = n&lt;sup&gt;k&lt;/sup&gt; % m = powerMod2(n,k,m)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;非递归法&quot;&gt;&lt;a href=&quot;#非递归法&quot; class=&quot;headerlink&quot; title=&quot;非递归法&quot;&gt;&lt;/a&gt;非递归法&lt;/h3&gt;&lt;p&gt;&lt;a name=&quot;powerMod&quot;&gt;&lt;/a&gt;非递归的&lt;a href=&quot;https://en.wikipedia.org/wiki/Modular_exponentiation, Right-to-left binary method&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;蒙哥马利(Montgomery)幂模运算:&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;powerMod&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; n, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; p, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; m)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; r = n % m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; tmp = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (p &amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((p &amp;amp; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;span class=&quot;comment&quot;&gt;// p 是奇数，则&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tmp = (tmp * r) % m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        r = (r * r) % m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p &amp;gt;&amp;gt;= &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (r * tmp) % m;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;解决PE188&quot;&gt;&lt;a href=&quot;#解决PE188&quot; class=&quot;headerlink&quot; title=&quot;解决PE188&quot;&gt;&lt;/a&gt;解决PE188&lt;/h2&gt;&lt;h3 id=&quot;递归方法：&quot;&gt;&lt;a href=&quot;#递归方法：&quot; class=&quot;headerlink&quot; title=&quot;递归方法：&quot;&gt;&lt;/a&gt;递归方法：&lt;/h3&gt;&lt;p&gt;a↑↑(k+1) % m = (a&lt;sup&gt;(a↑↑k)&lt;/sup&gt;) % m = powMod(a,a↑↑k %m,m)&lt;br&gt;所以，对于模m的余数，每次用a % m 替换 a，(k+1)就可以降到k。从而得到代码：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hyper_exp2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; k, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; m)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (k == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; powerMod(a, hyper_exp2(a, k - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, m), m);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;非递归方法：&quot;&gt;&lt;a href=&quot;#非递归方法：&quot; class=&quot;headerlink&quot; title=&quot;非递归方法：&quot;&gt;&lt;/a&gt;非递归方法：&lt;/h3&gt;&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;String[] args&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; s = System.nanoTime();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(hyper_exp(&lt;span class=&quot;number&quot;&gt;1777&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1855&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100000000&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.&lt;span class=&quot;keyword&quot;&gt;out&lt;/span&gt;.println(&lt;span class=&quot;string&quot;&gt;&quot;time consumed:&quot;&lt;/span&gt; + TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - s) + &lt;span class=&quot;string&quot;&gt;&quot; ms&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;hyper_exp&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; k, &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; m&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; temp = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (k &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        temp = powerMod(a, temp, m);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        k--;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出&quot;&gt;&lt;a href=&quot;#输出&quot; class=&quot;headerlink&quot; title=&quot;输出&quot;&gt;&lt;/a&gt;输出&lt;/h3&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;95962097&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;time&lt;/span&gt; consumed:&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt; ms&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;小结&quot;&gt;&lt;a href=&quot;#小结&quot; class=&quot;headerlink&quot; title=&quot;小结&quot;&gt;&lt;/a&gt;小结&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;这个题目主要考察对a&lt;sup&gt;k&lt;/sup&gt; % m 的快速幂模运算，采用了&lt;a href=&quot;https://en.wikipedia.org/wiki/Modular_exponentiation&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Montgomery算法&lt;/a&gt;。每做一次乘法，就可以对幂进行一次二分，从而快速运算出结果。这个算法也是RSA算法的核心部分。&lt;/li&gt;
&lt;li&gt;See also, &lt;a href=&quot;/2015/10/09/PE48&quot;&gt;Project Euler 48 Solution: Find the last ten digits of 1^1 + 2^2 + … + 1000^1000.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;See also, &lt;a href=&quot;https://projecteuler.net/problem=97&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Project Euler 97 Solution: Find the last ten digits of the non-Mersenne prime: 28433 × 2&lt;sup&gt;7830457&lt;/sup&gt; + 1.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/chen77716/article/details/7093600&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考1-幂取模算法&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blog.dreamshire.com/project-euler-188-solution/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考2-&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Modular_exponentiation&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Montgomery算法&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      Project Euler 188 - 求超指数的最后8位，幂模运算
    
    </summary>
    
      <category term="Project Euler" scheme="http://debug4.me/categories/Project-Euler/"/>
    
    
      <category term="Project Euler" scheme="http://debug4.me/tags/Project-Euler/"/>
    
      <category term="幂模运算" scheme="http://debug4.me/tags/%E5%B9%82%E6%A8%A1%E8%BF%90%E7%AE%97/"/>
    
      <category term="Java" scheme="http://debug4.me/tags/Java/"/>
    
      <category term="超指数" scheme="http://debug4.me/tags/%E8%B6%85%E6%8C%87%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>Project Euler Problem 48 - 求大数的模</title>
    <link href="http://debug4.me/Project-Euler/PE48/"/>
    <id>http://debug4.me/Project-Euler/PE48/</id>
    <published>2015-10-09T11:36:36.000Z</published>
    <updated>2016-06-12T15:21:35.746Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://projecteuler.net/problem=48&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Project Euler 48&lt;/a&gt; ,获取大数 1^1 + 2^2 + … + 1000^1000 的最后10个数字&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;暴力法&quot;&gt;&lt;a href=&quot;#暴力法&quot; class=&quot;headerlink&quot; title=&quot;暴力法&quot;&gt;&lt;/a&gt;暴力法&lt;/h2&gt;&lt;p&gt;用[BigInteger]把这些数进行累加，并不会特别大（内存可hold住），见Java代码：&lt;br&gt;&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;static String &lt;span class=&quot;keyword&quot;&gt;bruteForce(int &lt;/span&gt;n) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;BigInteger &lt;/span&gt;S = &lt;span class=&quot;keyword&quot;&gt;BigInteger.ONE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    &lt;span class=&quot;keyword&quot;&gt;BigInteger &lt;/span&gt;Max = &lt;span class=&quot;keyword&quot;&gt;BigInteger.valueOf(n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    for (&lt;span class=&quot;keyword&quot;&gt;BigInteger &lt;/span&gt;i = &lt;span class=&quot;keyword&quot;&gt;BigInteger.valueOf(2); &lt;/span&gt;i.compareTo(Max) &amp;lt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;; i = i.add(BigInteger.ONE)) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        S = S.&lt;span class=&quot;keyword&quot;&gt;add(i.pow(i.intValue()));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    String s = S.toString(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return s.&lt;span class=&quot;keyword&quot;&gt;substring(s.length() &lt;/span&gt;- &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, s.length())&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;使用幂模运算规则&quot;&gt;&lt;a href=&quot;#使用幂模运算规则&quot; class=&quot;headerlink&quot; title=&quot;使用幂模运算规则&quot;&gt;&lt;/a&gt;使用幂模运算规则&lt;/h2&gt;&lt;p&gt;有幂模运算规则：&lt;br&gt;&lt;figure class=&quot;highlight gcode&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;(a + b)&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;%&lt;/span&gt; p = &lt;span class=&quot;comment&quot;&gt;(a % p + b % p)&lt;/span&gt; &lt;span class=&quot;meta&quot;&gt;%&lt;/span&gt; p&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;所以, (1&lt;sup&gt;1&lt;/sup&gt;+ 2&lt;sup&gt;2&lt;/sup&gt;+ … + 1000&lt;sup&gt;1000&lt;/sup&gt;) % m = (1&lt;sup&gt;1&lt;/sup&gt; % m + 2&lt;sup&gt;2&lt;/sup&gt; % m + … + 1000&lt;sup&gt;1000&lt;/sup&gt; % m) % m &lt;/p&gt;
&lt;p&gt;用BigInteger实现&lt;a href=&quot;http://cwjcsu.gitcafe.io/Project-Euler/PE188/#powerMod&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;powerMod方法&lt;/a&gt;：&lt;br&gt;&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;public&lt;/span&gt; static &lt;span class=&quot;keyword&quot;&gt;BigInteger &lt;/span&gt;powerMod(&lt;span class=&quot;keyword&quot;&gt;BigInteger &lt;/span&gt;n, &lt;span class=&quot;keyword&quot;&gt;BigInteger &lt;/span&gt;p, &lt;span class=&quot;keyword&quot;&gt;BigInteger &lt;/span&gt;m) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;BigInteger &lt;/span&gt;r = n.mod(m)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;BigInteger &lt;/span&gt;tmp = &lt;span class=&quot;keyword&quot;&gt;BigInteger.ONE;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    &lt;span class=&quot;meta&quot;&gt;while&lt;/span&gt; (p.compareTo(&lt;span class=&quot;keyword&quot;&gt;BigInteger.ONE) &lt;/span&gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;meta&quot;&gt;if&lt;/span&gt; ((p.&lt;span class=&quot;keyword&quot;&gt;byteValue() &lt;/span&gt;&amp;amp; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) != &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;// p 是奇数，则&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tmp = (tmp.&lt;span class=&quot;keyword&quot;&gt;multiply(r)).mod(m);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        r = r.&lt;span class=&quot;keyword&quot;&gt;multiply(r).mod(m);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;        p = p.divide(&lt;span class=&quot;keyword&quot;&gt;BigInteger.valueOf(2L));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return r.&lt;span class=&quot;keyword&quot;&gt;multiply(tmp).mod(m);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;实现PE48&quot;&gt;&lt;a href=&quot;#实现PE48&quot; class=&quot;headerlink&quot; title=&quot;实现PE48&quot;&gt;&lt;/a&gt;实现PE48&lt;/h2&gt;&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; main(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt;[] args) &amp;#123;&lt;span class=&quot;comment&quot;&gt;// 9110846700&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; s = System.nanoTime();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         System.out.&lt;span class=&quot;built_in&quot;&gt;println&lt;/span&gt;(usePowerMod(&lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//      System.err.println(bruteForce(1000));&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.&lt;span class=&quot;built_in&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;time consumed : &quot;&lt;/span&gt; + TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - s) + &lt;span class=&quot;string&quot;&gt;&quot; ms&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; usePowerMod(&lt;span class=&quot;built_in&quot;&gt;int&lt;/span&gt; n) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BigInteger N = BigInteger.valueOf(n);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BigInteger S = BigInteger.ZERO;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BigInteger m = BigInteger.valueOf((&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt;) Math.&lt;span class=&quot;built_in&quot;&gt;pow&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (BigInteger i = BigInteger.ONE; i.compareTo(N) &amp;lt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i = i.&lt;span class=&quot;built_in&quot;&gt;add&lt;/span&gt;(BigInteger.ONE)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            S = S.&lt;span class=&quot;built_in&quot;&gt;add&lt;/span&gt;(powerMod(i, i, m));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        S = S.mod(m);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt; s = S.toString(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; s;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;输出&quot;&gt;&lt;a href=&quot;#输出&quot; class=&quot;headerlink&quot; title=&quot;输出&quot;&gt;&lt;/a&gt;输出&lt;/h2&gt;&lt;p&gt;使用幂模运算规则的输出：&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;9110846700&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;time&lt;/span&gt; consumed : &lt;span class=&quot;number&quot;&gt;124&lt;/span&gt; ms&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用暴力法的输出：&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;9110846700&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;time&lt;/span&gt; consumed : &lt;span class=&quot;number&quot;&gt;89&lt;/span&gt; ms&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;小结&quot;&gt;&lt;a href=&quot;#小结&quot; class=&quot;headerlink&quot; title=&quot;小结&quot;&gt;&lt;/a&gt;小结&lt;/h2&gt;&lt;p&gt;发现暴力法速度更快，原因估计是powerMod(BigInteger,BigInteger,BigInteger)创建了太多的重量级BigInteger导致的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;See also, &lt;a href=&quot;/Project-Euler/PE188/&quot;&gt;Project Euler 188 Solution: Find the last 8 digits of 1777↑↑1855.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;See also, &lt;a href=&quot;https://projecteuler.net/problem=97&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Project Euler 97 : Find the last ten digits of the non-Mersenne prime: 28433 × 2&lt;sup&gt;7830457&lt;/sup&gt; + 1.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      Project Euler 48 - 求大数的模
    
    </summary>
    
      <category term="Project Euler" scheme="http://debug4.me/categories/Project-Euler/"/>
    
    
      <category term="Project Euler" scheme="http://debug4.me/tags/Project-Euler/"/>
    
      <category term="幂模运算" scheme="http://debug4.me/tags/%E5%B9%82%E6%A8%A1%E8%BF%90%E7%AE%97/"/>
    
      <category term="Java" scheme="http://debug4.me/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Project Euler Problem 206 - 寻找特定模式的数的平方根</title>
    <link href="http://debug4.me/Project-Euler/PE206/"/>
    <id>http://debug4.me/Project-Euler/PE206/</id>
    <published>2015-10-09T09:45:55.000Z</published>
    <updated>2016-06-12T15:21:35.745Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;https://projecteuler.net/problem=206&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Project Euler 206&lt;/a&gt;,寻找特定模式(1_2_3_4_5_6_7_8_9_0)的数平方根，其中’_’是一个数字。&lt;em&gt;Completed on 2013-04-25  17:35&lt;/em&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h2&gt;&lt;p&gt;1_2_3_4_5_6_7_8_9_0格式的平方数，由于末尾是0，则平方根肯定是0结尾的，具有这个格式的最大数是：192939495969798990。由于平方根末尾是0，则这个数末尾必然是00，即这个数的格式为：1_2_3_4_5_6_7_8_900。&lt;/p&gt;
&lt;h2 id=&quot;穷举法&quot;&gt;&lt;a href=&quot;#穷举法&quot; class=&quot;headerlink&quot; title=&quot;穷举法&quot;&gt;&lt;/a&gt;穷举法&lt;/h2&gt;&lt;p&gt;经过分析，可以从具有这个格式的最大数字19293949596979899开始往下搜索，如果确定是平方数，则找到了平方根。&lt;br&gt;这个数超过了long的范围，所以要用&lt;a href=&quot;http://docs.oracle.com/javase/7/docs/api/java/math/BigInteger.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;code&gt;BigInteger&lt;/code&gt;&lt;/a&gt;。&lt;/p&gt;
&lt;h3 id=&quot;Java代码&quot;&gt;&lt;a href=&quot;#Java代码&quot; class=&quot;headerlink&quot; title=&quot;Java代码&quot;&gt;&lt;/a&gt;Java代码&lt;/h3&gt;&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; PE206 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; main(&lt;span class=&quot;keyword&quot;&gt;String&lt;/span&gt;[] args) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; s = System.nanoTime();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        BigInteger N = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; BigInteger(&lt;span class=&quot;string&quot;&gt;&quot;19293949596979899&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt; = (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;) Math.&lt;span class=&quot;built_in&quot;&gt;sqrt&lt;/span&gt;(N.doubleValue()) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;//平方根可能的最大值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; i = &lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;;; i--) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            BigInteger I = BigInteger.valueOf(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            I = I.&lt;span class=&quot;built_in&quot;&gt;pow&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;if&lt;/span&gt; (I.toString().matches(&lt;span class=&quot;string&quot;&gt;&quot;1.2.3.4.5.6.7.8.9&quot;&lt;/span&gt;)) &amp;#123;&lt;span class=&quot;comment&quot;&gt;//平方数匹配当前模式，则找到目标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                System.out.&lt;span class=&quot;built_in&quot;&gt;println&lt;/span&gt;(i * &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        System.out.&lt;span class=&quot;built_in&quot;&gt;println&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Time consumed &quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                + TimeUnit.NANOSECONDS.toMillis(System.nanoTime() - s) + &lt;span class=&quot;string&quot;&gt;&quot; ms&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;输出&quot;&gt;&lt;a href=&quot;#输出&quot; class=&quot;headerlink&quot; title=&quot;输出&quot;&gt;&lt;/a&gt;输出&lt;/h3&gt;&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1389019170&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Time consumed &lt;span class=&quot;number&quot;&gt;68&lt;/span&gt; ms&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      Project Euler 206 - 寻找特定模式(1_2_3_4_5_6_7_8_9_0)的数平方根
    
    </summary>
    
      <category term="Project Euler" scheme="http://debug4.me/categories/Project-Euler/"/>
    
    
      <category term="Project Euler" scheme="http://debug4.me/tags/Project-Euler/"/>
    
      <category term="Java" scheme="http://debug4.me/tags/Java/"/>
    
      <category term="平方数" scheme="http://debug4.me/tags/%E5%B9%B3%E6%96%B9%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>joutable - Java格式化打印表格工具</title>
    <link href="http://debug4.me/My-Projects/joutable/"/>
    <id>http://debug4.me/My-Projects/joutable/</id>
    <published>2015-10-09T08:50:52.000Z</published>
    <updated>2016-06-12T15:21:35.748Z</updated>
    
    <content type="html">&lt;p&gt;一个Java写的把简单表格格式化打印到控制台的工具，自动对齐和换行，可以定制标题填充字符、表头分隔字符。&lt;a href=&quot;https://cwjcsu.github.io/joutable/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Click Here to see more detail&lt;/a&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;An-simple-and-pretty-formatted-Table-in-Java&quot;&gt;&lt;a href=&quot;#An-simple-and-pretty-formatted-Table-in-Java&quot; class=&quot;headerlink&quot; title=&quot;An simple and pretty formatted Table in Java&quot;&gt;&lt;/a&gt;An simple and pretty formatted Table in Java&lt;/h1&gt;&lt;p&gt;You may want to print out some simple table (with title,headers) to the console with a readable format,then joutable is your best choise.&lt;/p&gt;
&lt;h1 id=&quot;Usages&quot;&gt;&lt;a href=&quot;#Usages&quot; class=&quot;headerlink&quot; title=&quot;Usages&quot;&gt;&lt;/a&gt;Usages&lt;/h1&gt;&lt;h2 id=&quot;How-to-Use-joutable&quot;&gt;&lt;a href=&quot;#How-to-Use-joutable&quot; class=&quot;headerlink&quot; title=&quot;How to Use joutable ?&quot;&gt;&lt;/a&gt;How to Use joutable ?&lt;/h2&gt;&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;DefaultTable dt = new DefaultTable()&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dt.setTitle(&lt;span class=&quot;string&quot;&gt;&quot;Aacademic Record Table&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dt.setHeaders(new String[] &amp;#123; &lt;span class=&quot;string&quot;&gt;&quot;Id&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Name&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Grade&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Remark&quot;&lt;/span&gt; &amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dt.&lt;span class=&quot;keyword&quot;&gt;addRow(new &lt;/span&gt;Object[] &amp;#123; &lt;span class=&quot;number&quot;&gt;1001&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Jack Bower&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;A&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Good at fighting&quot;&lt;/span&gt; &amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dt.&lt;span class=&quot;keyword&quot;&gt;addRow(new &lt;/span&gt;Object[] &amp;#123; &lt;span class=&quot;number&quot;&gt;1002&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Vincent Willem  Van Gogh&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;A+&quot;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&quot;Good at painting&quot;&lt;/span&gt; &amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dt.&lt;span class=&quot;keyword&quot;&gt;addRow(new &lt;/span&gt;Object[] &amp;#123; &lt;span class=&quot;number&quot;&gt;1003&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Jone Doe&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;B&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Noop&quot;&lt;/span&gt; &amp;#125;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;DefaultTableFormatter dtf = new DefaultTableFormatter(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;System.out.println(dtf.format(dt))&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;this will print a pretty formatted table :&lt;br&gt;&lt;figure class=&quot;highlight mipsasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;=============== Aacademic Record Table ===============&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Id     Name                      Grade  Remark          &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-----  ------------------------  -----  ----------------  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1001&lt;/span&gt;   &lt;span class=&quot;keyword&quot;&gt;Jack &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;Bower &lt;/span&gt;               A      Good &lt;span class=&quot;built_in&quot;&gt;at&lt;/span&gt; fighting&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1002&lt;/span&gt;   Vincent Willem  Van Gogh  A+     Good &lt;span class=&quot;built_in&quot;&gt;at&lt;/span&gt; painting&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1003&lt;/span&gt;   &lt;span class=&quot;keyword&quot;&gt;Jone &lt;/span&gt;Doe                  &lt;span class=&quot;keyword&quot;&gt;B &lt;/span&gt;     Noop&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;You can customize the format: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Padding char of the title;&lt;/li&gt;
&lt;li&gt;Separating char between headers and body&lt;/li&gt;
&lt;li&gt;Set &lt;code&gt;sort=true&lt;/code&gt; to sort rows by the first column,by default&lt;/li&gt;
&lt;li&gt;Set &lt;code&gt;minColumnWidth&lt;/code&gt; to make column width to fill your need&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Examples&quot;&gt;&lt;a href=&quot;#Examples&quot; class=&quot;headerlink&quot; title=&quot;Examples&quot;&gt;&lt;/a&gt;Examples&lt;/h2&gt;&lt;p&gt;All the examples can be see at src/test/java/com/joutable/DefaultTableFormatterDemo.java&lt;/p&gt;
&lt;h3 id=&quot;A-long-title-table&quot;&gt;&lt;a href=&quot;#A-long-title-table&quot; class=&quot;headerlink&quot; title=&quot;A long title table&quot;&gt;&lt;/a&gt;A long title table&lt;/h3&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; Longongongongongongongongongongongongongongongongongongongongongongongongongongongongongongong title &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Id                        Name                      &lt;span class=&quot;keyword&quot;&gt;Node&lt;/span&gt;                      &lt;span class=&quot;title&quot;&gt;Status&lt;/span&gt;                  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;------------------------  ------------------------  ------------------------  ------------------------  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;id0                       Node0                     &lt;span class=&quot;number&quot;&gt;0s&lt;/span&gt;ss                      &lt;span class=&quot;literal&quot;&gt;Stopped&lt;/span&gt;                 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;id1                       Node1                     &lt;span class=&quot;number&quot;&gt;1s&lt;/span&gt;ss                      &lt;span class=&quot;literal&quot;&gt;Stopped&lt;/span&gt;                 &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;id2                       Node2                     &lt;span class=&quot;number&quot;&gt;2s&lt;/span&gt;ss                      &lt;span class=&quot;literal&quot;&gt;Stopped&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;A-long-header-table&quot;&gt;&lt;a href=&quot;#A-long-header-table&quot; class=&quot;headerlink&quot; title=&quot;A long header table&quot;&gt;&lt;/a&gt;A long header table&lt;/h3&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;========================= A title =========================&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;LLLLLLLLLLLLLLLLLLLLLLLLLLLlongHeader  Name   &lt;span class=&quot;keyword&quot;&gt;Node&lt;/span&gt;   &lt;span class=&quot;title&quot;&gt;Status&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-------------------------------------  -----  -----  -------  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;id0                                    Node0  &lt;span class=&quot;number&quot;&gt;0s&lt;/span&gt;ss   &lt;span class=&quot;literal&quot;&gt;Stopped&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;id1                                    Node1  &lt;span class=&quot;number&quot;&gt;1s&lt;/span&gt;ss   &lt;span class=&quot;literal&quot;&gt;Stopped&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;id2                                    Node2  &lt;span class=&quot;number&quot;&gt;2s&lt;/span&gt;ss   &lt;span class=&quot;literal&quot;&gt;Stopped&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;A-table-with-column-wrapped&quot;&gt;&lt;a href=&quot;#A-table-with-column-wrapped&quot; class=&quot;headerlink&quot; title=&quot;A table with column wrapped&quot;&gt;&lt;/a&gt;A table with column wrapped&lt;/h3&gt;&lt;figure class=&quot;highlight crmsh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;======== Short wrapped column ========&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Id     Name         &lt;span class=&quot;keyword&quot;&gt;Node&lt;/span&gt;         &lt;span class=&quot;title&quot;&gt;Status&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-----  -----------  -----------  -------  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;id0    Node0        &lt;span class=&quot;number&quot;&gt;0s&lt;/span&gt;ss         &lt;span class=&quot;literal&quot;&gt;Stopped&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;id1    d2ps3oody01  &lt;span class=&quot;number&quot;&gt;1s&lt;/span&gt;ss6500491  &lt;span class=&quot;literal&quot;&gt;Stopped&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;number&quot;&gt;34367211423&lt;/span&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;                   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;id3    &lt;span class=&quot;number&quot;&gt;2h&lt;/span&gt;5uqrp3jrz  &lt;span class=&quot;number&quot;&gt;3s&lt;/span&gt;ss9128827  &lt;span class=&quot;literal&quot;&gt;Stopped&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       ns6bsynzz45  &lt;span class=&quot;number&quot;&gt;32113350427&lt;/span&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       pu3pxysa3    &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;                   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;id4    &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;n9412d76fn  &lt;span class=&quot;number&quot;&gt;4s&lt;/span&gt;ss7805302  &lt;span class=&quot;literal&quot;&gt;Stopped&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       vd42a9sv3nt  &lt;span class=&quot;number&quot;&gt;45755729772&lt;/span&gt;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;tivlli8eh4  &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;                   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;qb89a24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;A-row-sorted-table&quot;&gt;&lt;a href=&quot;#A-row-sorted-table&quot; class=&quot;headerlink&quot; title=&quot;A row-sorted table&quot;&gt;&lt;/a&gt;A row-sorted table&lt;/h3&gt;&lt;figure class=&quot;highlight brainfuck&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;sorted&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;table&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;Id&lt;/span&gt;       &lt;span class=&quot;comment&quot;&gt;Name&lt;/span&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;  &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;1&lt;/span&gt;        &lt;span class=&quot;comment&quot;&gt;Node1&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;2&lt;/span&gt;        &lt;span class=&quot;comment&quot;&gt;Node2&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;2&lt;/span&gt;        &lt;span class=&quot;comment&quot;&gt;Node2X&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;2&lt;/span&gt;        &lt;span class=&quot;comment&quot;&gt;Node2Y&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;3&lt;/span&gt;        &lt;span class=&quot;comment&quot;&gt;Node3&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;4&lt;/span&gt;        &lt;span class=&quot;comment&quot;&gt;Node4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;A-table-with-customed-indent&quot;&gt;&lt;a href=&quot;#A-table-with-customed-indent&quot; class=&quot;headerlink&quot; title=&quot;A table with customed indent&quot;&gt;&lt;/a&gt;A table with customed indent&lt;/h3&gt;&lt;figure class=&quot;highlight gams&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;*   A intent table &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;*  Id       Name   &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;*  -------  -------  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;*  3        Node1  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;*  1        Node1  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;*  4        Node1  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;*  2        Node1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;A-table-with-arrow-padded-title&quot;&gt;&lt;a href=&quot;#A-table-with-arrow-padded-title&quot; class=&quot;headerlink&quot; title=&quot;A table with arrow padded title&quot;&gt;&lt;/a&gt;A table with arrow padded title&lt;/h3&gt;&lt;figure class=&quot;highlight brainfuck&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; &lt;span class=&quot;comment&quot;&gt;arrow&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;padded&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;title&lt;/span&gt; &amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;Id&lt;/span&gt;     &lt;span class=&quot;comment&quot;&gt;Name&lt;/span&gt;                         &lt;span class=&quot;comment&quot;&gt;State&lt;/span&gt;                             &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;  &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;  &lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;literal&quot;&gt;-&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;1&lt;/span&gt;      &lt;span class=&quot;comment&quot;&gt;LOOOOOOOOOOOOOOOOOOOOOOOOng&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;LOOOOOOOOOOOOOOOOOOOOOOOOng&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;column&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;2&lt;/span&gt;      &lt;span class=&quot;comment&quot;&gt;Node2&lt;/span&gt;                        &lt;span class=&quot;comment&quot;&gt;Running&lt;/span&gt;                           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;3&lt;/span&gt;      &lt;span class=&quot;comment&quot;&gt;Node3&lt;/span&gt;                        &lt;span class=&quot;comment&quot;&gt;Running&lt;/span&gt;                           &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;4&lt;/span&gt;      &lt;span class=&quot;comment&quot;&gt;Node4&lt;/span&gt;                        &lt;span class=&quot;comment&quot;&gt;Running&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;A-table-with-custom-cell-format&quot;&gt;&lt;a href=&quot;#A-table-with-custom-cell-format&quot; class=&quot;headerlink&quot; title=&quot;A table with custom cell format&quot;&gt;&lt;/a&gt;A table with custom cell format&lt;/h3&gt;&lt;figure class=&quot;highlight dns&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;====== &lt;span class=&quot;keyword&quot;&gt;A&lt;/span&gt; date cell table ======&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Id     Name   Date               &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-----  -----  -------------------  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;      Node1  &lt;span class=&quot;number&quot;&gt;2015-10-09&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;22&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;02&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;      Node2  &lt;span class=&quot;number&quot;&gt;2015-10-09&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;05&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;41&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;07&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;      Node3  &lt;span class=&quot;number&quot;&gt;2015-10-09&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;55&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;      Node4  Today&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&quot;Support-Chinese&quot;&gt;&lt;a href=&quot;#Support-Chinese&quot; class=&quot;headerlink&quot; title=&quot;Support Chinese&quot;&gt;&lt;/a&gt;Support Chinese&lt;/h1&gt;&lt;p&gt;TODO 中文支持还有问题&lt;/p&gt;
</content>
    
    <summary type="html">
    
      一个Java写的把简单表格格式化打印到控制台的工具，自动对齐和换行，可以定制标题填充字符、表头分隔字符。
    
    </summary>
    
      <category term="My Projects" scheme="http://debug4.me/categories/My-Projects/"/>
    
    
      <category term="Java" scheme="http://debug4.me/tags/Java/"/>
    
      <category term="My Projects" scheme="http://debug4.me/tags/My-Projects/"/>
    
      <category term="joutable" scheme="http://debug4.me/tags/joutable/"/>
    
  </entry>
  
  <entry>
    <title>搭建Github博客容易走弯路的地方</title>
    <link href="http://debug4.me/%E5%B7%A5%E5%85%B7/tips-about-github-blog/"/>
    <id>http://debug4.me/工具/tips-about-github-blog/</id>
    <published>2015-09-27T15:40:51.000Z</published>
    <updated>2016-06-12T15:21:35.750Z</updated>
    
    <content type="html">&lt;p&gt;本为介绍了hexo + pacman主题搭建github博客容易犯错的地方。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;搭建github博客之前必须了解的东西&quot;&gt;&lt;a href=&quot;#搭建github博客之前必须了解的东西&quot; class=&quot;headerlink&quot; title=&quot;搭建github博客之前必须了解的东西&quot;&gt;&lt;/a&gt;搭建github博客之前必须了解的东西&lt;/h1&gt;&lt;p&gt;用搜索引擎搜索”github 博客”等关键字会出现大量很好的文章教小白一步步搭建。我这里列出一些容易走弯路指引。&lt;/p&gt;
&lt;h2 id=&quot;不一定要注册域名&quot;&gt;&lt;a href=&quot;#不一定要注册域名&quot; class=&quot;headerlink&quot; title=&quot;不一定要注册域名&quot;&gt;&lt;/a&gt;不一定要注册域名&lt;/h2&gt;&lt;p&gt;很多文章都有介绍购买域名，并在根目录下配置CName文件，其实不一定要购买的。Github会给每个用户一个二级域名:&lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;。这个二级域名下，你可以定制样式、404页面等等，记住最重要的一点：&lt;strong&gt;你创建的github的Repository name必须是&lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;&lt;/strong&gt;,这样你只要在&lt;strong&gt;master&lt;/strong&gt;分支上仓库根目录上push一个&lt;code&gt;index.html&lt;/code&gt;，这个文件就可以通过&lt;code&gt;http://&amp;lt;username&amp;gt;.github.io&lt;/code&gt;访问到。&lt;br&gt;&lt;code&gt;&amp;lt;username&amp;gt;&lt;/code&gt;是你的github用户名。&lt;/p&gt;
&lt;h2 id=&quot;仓库-lt-repoName-gt-的Github-Pages可以通过-lt-username-gt-github-io-lt-repoName-gt-访问&quot;&gt;&lt;a href=&quot;#仓库-lt-repoName-gt-的Github-Pages可以通过-lt-username-gt-github-io-lt-repoName-gt-访问&quot; class=&quot;headerlink&quot; title=&quot;仓库&amp;lt;repoName&amp;gt;的Github Pages可以通过&amp;lt;username&amp;gt;.github.io/&amp;lt;repoName&amp;gt;访问&quot;&gt;&lt;/a&gt;仓库&lt;code&gt;&amp;lt;repoName&amp;gt;&lt;/code&gt;的Github Pages可以通过&lt;code&gt;&amp;lt;username&amp;gt;.github.io/&amp;lt;repoName&amp;gt;&lt;/code&gt;访问&lt;/h2&gt;&lt;h3 id=&quot;手工创建&quot;&gt;&lt;a href=&quot;#手工创建&quot; class=&quot;headerlink&quot; title=&quot;手工创建&quot;&gt;&lt;/a&gt;手工创建&lt;/h3&gt;&lt;p&gt;很多博客都有介绍怎么建立github pages，你可以给你的任意仓库建立github pages，只是你必须把页面push到一个特定名字的分支：&lt;strong&gt;gh_pages&lt;/strong&gt;。这样，这个分支里面的页面就可以通过&lt;code&gt;&amp;lt;username&amp;gt;.github.io/&amp;lt;repoName&amp;gt;&lt;/code&gt;访问，&lt;code&gt;&amp;lt;repoName&amp;gt;&lt;/code&gt;是这个仓库的名称。&lt;/p&gt;
&lt;h3 id=&quot;github向导创建&quot;&gt;&lt;a href=&quot;#github向导创建&quot; class=&quot;headerlink&quot; title=&quot;github向导创建&quot;&gt;&lt;/a&gt;github向导创建&lt;/h3&gt;&lt;p&gt;使用github的向导创建Github Pages，你可以选择它提供的模版，github会在后台给你创建&lt;strong&gt;gh_pages&lt;/strong&gt;分支，并把模版所需的css、JavaScript、images、fonts全部上传到这个分支里面，和你手工创建没有区别。&lt;br&gt;github向导创建的index.html等页面，对css等资源的引用采用的的相对路径，所以通过&lt;code&gt;&amp;lt;username&amp;gt;.github.io/&amp;lt;repoName&amp;gt;/&lt;/code&gt;访问这个Pages不会出现资源的404错误，即使你修改了&lt;code&gt;&amp;lt;username&amp;gt;&lt;/code&gt;。当然，有些链接是采用绝对路径，比如:&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;li &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;downloads&quot;&lt;/span&gt;&amp;gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;https://github.com/&amp;lt;username&amp;gt;/&amp;lt;repoName&amp;gt;/zipball/master&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;ZIP&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个链接是下载当前仓库master分支的zip文件，绝对路径里面包含&lt;code&gt;&amp;lt;username&amp;gt;&lt;/code&gt;和&lt;code&gt;&amp;lt;repoName&amp;gt;&lt;/code&gt;，所以如果你修改了用户名&lt;code&gt;&amp;lt;usernmae&amp;gt;&lt;/code&gt;或者当前仓库的名称&lt;code&gt;&amp;lt;repoName&amp;gt;&lt;/code&gt;，那么这个链接就失效了。&lt;/p&gt;
&lt;h2 id=&quot;Github-Pages也可以用hexo等进行定制&quot;&gt;&lt;a href=&quot;#Github-Pages也可以用hexo等进行定制&quot; class=&quot;headerlink&quot; title=&quot;Github Pages也可以用hexo等进行定制&quot;&gt;&lt;/a&gt;Github Pages也可以用&lt;a href=&quot;https://hexo.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo&lt;/a&gt;等进行定制&lt;/h2&gt;&lt;p&gt;网上很多文章都说用&lt;strong&gt;hexo+特定主题&lt;/strong&gt;创建github+pages，会出现资源文件404错误，然后说可以去买个域名，创建CName映射文件解决问题。我在初次搭建github博客的时候，差点就下单买域名了,其实是不必要的。&lt;br&gt;在hexo的配置文件&lt;code&gt;_config.yml&lt;/code&gt;里面修改配置:&lt;br&gt;&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;## If your site &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;put&lt;/span&gt; in &lt;span class=&quot;keyword&quot;&gt;a&lt;/span&gt; subdirectory, &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; url &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;http://yoursite.com/child&#39;&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;and&lt;/span&gt; root &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;/child/&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ur&lt;span class=&quot;variable&quot;&gt;l:&lt;/span&gt; cwjcsu.github.io&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;roo&lt;span class=&quot;variable&quot;&gt;t:&lt;/span&gt; /&lt;span class=&quot;symbol&quot;&gt;&amp;lt;repoName&amp;gt;&lt;/span&gt;/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;那么hexo就会在生成页面的时候，给所有导入的资源加上&lt;code&gt;/&amp;lt;repoName&amp;gt;/&lt;/code&gt;，从而可以正确访问到仓库&lt;code&gt;&amp;lt;repoName&amp;gt;&lt;/code&gt;里面的资源文件，这样就会显示正常。&lt;/p&gt;
&lt;h1 id=&quot;Tips-about-hexo-jacman&quot;&gt;&lt;a href=&quot;#Tips-about-hexo-jacman&quot; class=&quot;headerlink&quot; title=&quot;Tips about hexo + jacman&quot;&gt;&lt;/a&gt;Tips about hexo + jacman&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;.yml配置项冒号和值之间要有空格&lt;/li&gt;
&lt;li&gt;&lt;p&gt;jacman主题的内置分享功能url没有用&lt;code&gt;http://&lt;/code&gt;开头，导致分享不成功&lt;br&gt; 我修改了一下代码：themes/jacman/layout/_partial/after_footer.ejs:(大概第86行左右)&lt;/p&gt;
 &lt;figure class=&quot;highlight qml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;var&lt;/span&gt; $&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; = $(&lt;span class=&quot;string&quot;&gt;&#39;.share&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt; = $&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.attr(&lt;span class=&quot;string&quot;&gt;&#39;data-url&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;.indexOf(&lt;span class=&quot;string&quot;&gt;&#39;http://&#39;&lt;/span&gt;)&amp;lt;&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&#39;http://&#39;&lt;/span&gt; + &lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;built_in&quot;&gt;var&lt;/span&gt; encodedUrl = &lt;span class=&quot;built_in&quot;&gt;encodeURIComponent&lt;/span&gt;(&lt;span class=&quot;built_in&quot;&gt;url&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; title = $&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.attr(&lt;span class=&quot;string&quot;&gt;&#39;data-title&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; tsina = $&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.attr(&lt;span class=&quot;string&quot;&gt;&#39;data-tsina&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; description = $&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.attr(&lt;span class=&quot;string&quot;&gt;&#39;description&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;一些.md或者.html被hexo处理后出现中文乱码&lt;br&gt; 往往是.md或者.html文件使用的编码格式不是UTF-8，只需要把这些文件转换成UTF-8并保存就可以被hexo正常处理；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;每篇文章的description属性会被hexo处理成description的meta，即：&lt;/p&gt;
 &lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;title:&lt;/span&gt; hexo你的博客&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;date:&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;2013&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-11&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;-22&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;54&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;categories:&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;tags:&lt;/span&gt; [hexo]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;description:&lt;/span&gt; 你对本页的描述&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 处理之后会在html页面的&amp;lt;head&amp;gt;标签内生成：&lt;/p&gt;
 &lt;figure class=&quot;highlight qml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;meta &lt;span class=&quot;keyword&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;string&quot;&gt;&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;og:description&quot;&lt;/span&gt; content=&lt;span class=&quot;string&quot;&gt;&quot;你对本页的描述&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 这个描述一般会在搜索引擎展示你的页面时出现。（SEO范畴）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用hexo new page &lt;em&gt;pageName&lt;/em&gt;会创建一个source/&lt;em&gt;pageName&lt;/em&gt;目录，并在这里面创建一个index.md文件，这个页面可以通过&lt;code&gt;&amp;lt;username&amp;gt;.github.io/&amp;lt;pageName&amp;gt;&lt;/code&gt;访问到。所以这个&lt;em&gt;pageName&lt;/em&gt;不要与你的某个聚友Github Pages的仓库名称重复了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用&lt;code&gt;&amp;lt;!--more--&amp;gt;&lt;/code&gt;标签可以让标签以上的文本作为摘要，在博客列表中显示出来，点击Read More显示特定博客有内容。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本为介绍了hexo + pacman主题搭建github博客容易犯错的地方。&lt;br&gt;
    
    </summary>
    
      <category term="工具" scheme="http://debug4.me/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="hexo" scheme="http://debug4.me/tags/hexo/"/>
    
      <category term="jacman" scheme="http://debug4.me/tags/jacman/"/>
    
      <category term="blogs" scheme="http://debug4.me/tags/blogs/"/>
    
  </entry>
  
  <entry>
    <title>Markdown标准语法与GitHub Flavored Markdown语法大全</title>
    <link href="http://debug4.me/%E5%B7%A5%E5%85%B7/markdown-learning/"/>
    <id>http://debug4.me/工具/markdown-learning/</id>
    <published>2015-09-26T07:01:19.000Z</published>
    <updated>2016-06-12T15:21:35.748Z</updated>
    
    <content type="html">&lt;p&gt;本文介绍了标准Markdown语法和GitHub Flavored Markdown (GFM)，并推荐了一款Markdown编辑器&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;标准Markdwon语法&quot;&gt;&lt;a href=&quot;#标准Markdwon语法&quot; class=&quot;headerlink&quot; title=&quot;标准Markdwon语法&quot;&gt;&lt;/a&gt;标准Markdwon语法&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Markdown&lt;/strong&gt;是一种轻量级标记语言，它允许人们“使用易读易写的纯文本格式编写文档，然后转换成有效的HTML(或者pdf、docx)文档”。Markdown现在拥有非常多的扩展，而且标准化已经几乎不可能。有一个介绍标准化markdown的&lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;网站&lt;/a&gt;。里面的&lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Syntax&lt;/a&gt;详细介绍了标准markdown所有语法。&lt;/p&gt;
&lt;h2 id=&quot;块元素-Block-Elements&quot;&gt;&lt;a href=&quot;#块元素-Block-Elements&quot; class=&quot;headerlink&quot; title=&quot;块元素(Block Elements)&quot;&gt;&lt;/a&gt;块元素(Block Elements)&lt;/h2&gt;&lt;h3 id=&quot;文档标头（HEADERS）&quot;&gt;&lt;a href=&quot;#文档标头（HEADERS）&quot; class=&quot;headerlink&quot; title=&quot;文档标头（HEADERS）&quot;&gt;&lt;/a&gt;文档标头（HEADERS）&lt;/h3&gt;&lt;p&gt;有两种类型的标题：Setext-style headers  和 Atx-style headers。&lt;br&gt;（1），Setext-style headers 的markdwon代码：&lt;br&gt;&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;This is H1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;=&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;section&quot;&gt;This is H1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中等于号(=)和破折号(-)的个数没有限制（好像要超过2个）。（效果免了，否则我这篇博客会被撑乱）。&lt;br&gt;（2），Atx-style headers 示例：&lt;br&gt;&lt;figure class=&quot;highlight apache&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# This is an H1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;## This is an H2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;###### This is an H6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注意#号后面要加空格，当前文档使用的就是这种格式标题。另外  atx-style 的头可以关闭：&lt;br&gt;&lt;figure class=&quot;highlight apache&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# This is an H1 #&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;## This is an H2 ##&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;### This is an H6 ######&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;块引用-BLOCKQUOTES&quot;&gt;&lt;a href=&quot;#块引用-BLOCKQUOTES&quot; class=&quot;headerlink&quot; title=&quot;块引用(BLOCKQUOTES)&quot;&gt;&lt;/a&gt;块引用(BLOCKQUOTES)&lt;/h3&gt;&lt;p&gt;markdown使用 &amp;gt; 来做块引用（email-style quote）&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; This is &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;blockquote&lt;/span&gt; with two paragraphs. Lorem ipsum dolor sit amet,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,&lt;br&gt;consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.&lt;br&gt;Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.&lt;/p&gt;
&lt;p&gt;Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse&lt;br&gt;id sem consectetuer libero luctus adipiscing.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Blockquotes可以只在段首使用 &amp;gt; ,效果是一样的：&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; This is &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;blockquote&lt;/span&gt; with two paragraphs. Lorem ipsum dolor sit amet,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Blockquotes可以嵌套：&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; This &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;first&lt;/span&gt; level &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; quoting.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; &amp;gt; This &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; nested blockquote.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; Back &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;first&lt;/span&gt; level.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is the first level of quoting.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is nested blockquote.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Back to the first level.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Blockquotes里面可以嵌套其他markdown元素，包括headers,lits,code blocks等等：&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; &lt;span class=&quot;comment&quot;&gt;#### This is a header.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;   This &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;item&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;2.&lt;/span&gt;   This &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;second&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;item&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; Here&#39;s &lt;span class=&quot;keyword&quot;&gt;some&lt;/span&gt; example code:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;     &lt;span class=&quot;literal&quot;&gt;return&lt;/span&gt; shell_exec(&lt;span class=&quot;string&quot;&gt;&quot;echo $input | $markdown_script&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;h4 id=&quot;This-is-a-header&quot;&gt;&lt;a href=&quot;#This-is-a-header&quot; class=&quot;headerlink&quot; title=&quot;This is a header.&quot;&gt;&lt;/a&gt;This is a header.&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;This is the first list item.&lt;/li&gt;
&lt;li&gt;This is the second list item.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Here’s some example code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;return shell_exec(&amp;quot;echo $input | $markdown_script&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;h3 id=&quot;列表&quot;&gt;&lt;a href=&quot;#列表&quot; class=&quot;headerlink&quot; title=&quot;列表&quot;&gt;&lt;/a&gt;列表&lt;/h3&gt;&lt;p&gt;（1），无序列表使用星号(*,asterisks)&lt;br&gt;&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;* &lt;/span&gt;Red&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;* &lt;/span&gt;Green&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;等价于：&lt;br&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;+ &lt;/span&gt;Red&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;+ &lt;/span&gt;Green&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;也等价于：&lt;br&gt;&lt;figure class=&quot;highlight haml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-&lt;span class=&quot;ruby&quot;&gt; Red&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;-&lt;span class=&quot;ruby&quot;&gt; Green&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Red&lt;/li&gt;
&lt;li&gt;Green&lt;br&gt;（2），有序列表使用数字：&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;1. &lt;/span&gt;Bird&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;2. &lt;/span&gt;McHale&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以写成：&lt;br&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;1. &lt;/span&gt;Bird&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;1. &lt;/span&gt;McHale&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;甚至&lt;br&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;8. &lt;/span&gt;Bird&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;3. &lt;/span&gt;McHale&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;总之，只要是数字加一个点即可。效果如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Bird&lt;/li&gt;
&lt;li&gt;McHale&lt;br&gt;（3），列表默认都是从左边开始的，如果想加缩进，可以在前面加超过3个以上的空格。&lt;figure class=&quot;highlight erlang&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;*   Lorem ipsum dolor sit amet, consectetuer adipiscing elit.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    viverra nec, fringilla in, laoreet vitae, risus.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*   Donec sit amet nisl. Aliquam semper ipsum sit amet velit.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Suspendisse id sem consectetuer libero luctus adipiscing.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;效果是这样的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Lorem ipsum dolor sit amet, consectetuer adipiscing elit.&lt;br&gt;Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi,&lt;/p&gt;
&lt;p&gt;viverra nec, fringilla in, laoreet vitae, risus.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Donec sit amet nisl. Aliquam semper ipsum sit amet velit.&lt;br&gt;Suspendisse id sem consectetuer libero luctus adipiscing.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果列表项之间有空行，markdown会给每一个生成的li元素创建一个p:&lt;br&gt;&lt;figure class=&quot;highlight asciidoc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;*   &lt;/span&gt;Bird&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;*   &lt;/span&gt;Magic&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;产生的DOM是:&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Bird&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Magic&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;li&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;ul&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;（4），在列表之中使用blockquote，需要有缩进：&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;*   A &lt;span class=&quot;built_in&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; a blockquote:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;gt; This &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; a blockquote&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;gt; inside a &lt;span class=&quot;built_in&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;item&lt;/span&gt;.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果是这样的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A list item with a blockquote:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is a blockquote&lt;br&gt;inside a list item.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（5），列表项中放入代码块，代码库必须要缩进8个空格（或者2个tab）：&lt;/p&gt;
&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;*   A list &lt;span class=&quot;keyword&quot;&gt;item &lt;/span&gt;with a &lt;span class=&quot;meta&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;block:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;&lt;span class=&quot;meta&quot;&gt;code&lt;/span&gt; goes here&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A list item with a code block:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;code goes here&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（6），因为一个段落有数字开头，从而创建了一个有序列表时，可以用下面的方式避免：&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1986&lt;/span&gt;. What &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt; great season.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;写成：&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1986&lt;/span&gt;\. What &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt; great season.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;1986. What a great season.&lt;/p&gt;
&lt;h3 id=&quot;代码块（CODE-BLOCKS）&quot;&gt;&lt;a href=&quot;#代码块（CODE-BLOCKS）&quot; class=&quot;headerlink&quot; title=&quot;代码块（CODE BLOCKS）&quot;&gt;&lt;/a&gt;代码块（CODE BLOCKS）&lt;/h3&gt;&lt;p&gt;（1），html中代码块是被&amp;lt;code&amp;gt;或者&amp;lt;pre&amp;gt;等标签包裹的，在markdwon里面，只需要在代码库开头空一行，代码行缩进4个空格（一个tab）即可。&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;This is &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attribute&quot;&gt;normal&lt;/span&gt; paragraph:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    This is &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;code&lt;/span&gt; block.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;markdown会生成：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;p&amp;gt;This is a normal paragraph:&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;pre&amp;gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;code&lt;/span&gt;&amp;gt;&lt;/span&gt;This is a code block.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;code&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;pre&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;This is a normal paragraph:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;This is a code block.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;生成的html会把每个代码行的移除4个空格（或者一个tab）：&lt;br&gt;代码：&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Here &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; an example &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;AppleScript&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;tell&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;application&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Foo&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;beep&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;tell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;会被解析成：&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;p&amp;gt;Here &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; an example &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;AppleScript&lt;/span&gt;:&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;pre&amp;gt;&amp;lt;code&amp;gt;&lt;span class=&quot;keyword&quot;&gt;tell&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;application&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;Foo&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;beep&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;end&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;tell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/code&amp;gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;代码块会一直继续，直到遇到一个没有缩进的行或者文档末尾。&lt;br&gt;（2），在代码块内部，这几个符号：&amp;amp;、&amp;lt; 、 &amp;gt;都会被自动转义，比如：&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;footer&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;amp;&lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;; &lt;span class=&quot;number&quot;&gt;2004&lt;/span&gt; Foo Corporation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/&lt;span class=&quot;keyword&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;会变成：&lt;br&gt;&lt;figure class=&quot;highlight dts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;pre&amp;gt;&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;code&amp;gt;&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;&amp;amp;lt&lt;/span&gt;;div class=&lt;span class=&quot;string&quot;&gt;&quot;footer&quot;&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;&amp;amp;gt&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;variable&quot;&gt;&amp;amp;amp&lt;/span&gt;;copy; &lt;span class=&quot;number&quot;&gt;2004&lt;/span&gt; Foo Corporation&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;variable&quot;&gt;&amp;amp;lt&lt;/span&gt;;/div&lt;span class=&quot;variable&quot;&gt;&amp;amp;gt&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;/code&amp;gt;&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;&amp;lt;/pre&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果如下：&lt;br&gt;    &lt;div class=&quot;footer&quot;&gt;&lt;br&gt;        &amp;copy; 2004 Foo Corporation&lt;br&gt;    &lt;/div&gt;&lt;/p&gt;
&lt;p&gt;其他markdwon字符在代码块中不会被处理，比如*。&lt;/p&gt;
&lt;h3 id=&quot;水平规则（HORIZONTAL-RULES）&quot;&gt;&lt;a href=&quot;#水平规则（HORIZONTAL-RULES）&quot; class=&quot;headerlink&quot; title=&quot;水平规则（HORIZONTAL RULES）&quot;&gt;&lt;/a&gt;水平规则（HORIZONTAL RULES）&lt;/h3&gt;&lt;p&gt;可以通过在一行写3个以上的 来产生一条水平线&lt;br&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;* &lt;/span&gt;&lt;span class=&quot;bullet&quot;&gt;* *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;emphasis&quot;&gt;***&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;strong&quot;&gt;*****&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;bullet&quot;&gt;- &lt;/span&gt;- -&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;---------------------------------------&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果如下：（只取了有一条）&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;SPAN元素（SPAN-ELEMENTS）&quot;&gt;&lt;a href=&quot;#SPAN元素（SPAN-ELEMENTS）&quot; class=&quot;headerlink&quot; title=&quot;SPAN元素（SPAN ELEMENTS）&quot;&gt;&lt;/a&gt;SPAN元素（SPAN ELEMENTS）&lt;/h2&gt;&lt;h3 id=&quot;链接-Links&quot;&gt;&lt;a href=&quot;#链接-Links&quot; class=&quot;headerlink&quot; title=&quot;链接(Links)&quot;&gt;&lt;/a&gt;链接(Links)&lt;/h3&gt;&lt;p&gt;markdwon支持两种类型的链接:&lt;em&gt;inline and reference&lt;/em&gt;，两种链接都用中括号[]界定。&lt;br&gt;（1）inline链接：&lt;br&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;This is [&lt;span class=&quot;string&quot;&gt;an example&lt;/span&gt;](&lt;span class=&quot;link&quot;&gt;http://example.com/ &quot;Title&quot;&lt;/span&gt;) inline link.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;string&quot;&gt;This link&lt;/span&gt;](&lt;span class=&quot;link&quot;&gt;http://example.net/&lt;/span&gt;) has no title attribute.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果是这样的：&lt;br&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Title&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;an example&lt;/a&gt; inline link.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://example.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;This link&lt;/a&gt; has no title attribute.&lt;br&gt;引用本地资源（在同一台服务器上的）：&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;See my [&lt;span class=&quot;string&quot;&gt;About&lt;/span&gt;](&lt;span class=&quot;link&quot;&gt;/about/&lt;/span&gt;) page for details.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;See my &lt;a href=&quot;/about/&quot;&gt;About&lt;/a&gt; page for details. &lt;/p&gt;
&lt;p&gt;（2），引用连接(Reference-style)使用一个后置的中括号&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;This &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; [an example] [&lt;span class=&quot;built_in&quot;&gt;id&lt;/span&gt;] &lt;span class=&quot;keyword&quot;&gt;reference&lt;/span&gt;-style link.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果是这样的：&lt;br&gt;This is &lt;a href=&quot;http://example.com/&quot; title=&quot;Optional Title Here&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;an example&lt;/a&gt; reference-style link.&lt;br&gt;然后文档中的任何其他地方可以这样定义被引用的链接：&lt;br&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;symbol&quot;&gt;id&lt;/span&gt;]: &lt;span class=&quot;link&quot;&gt;http://example.com/  &quot;Optional Title Here&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个markdwon标签不会产生html，所以不会显示（链接的定义支队markdwon解析有效，不会生成html）。&lt;/p&gt;
&lt;p&gt;下面三种引用链接的定义方式等价：&lt;br&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;symbol&quot;&gt;foo&lt;/span&gt;]: &lt;span class=&quot;link&quot;&gt;http://example.com/  &quot;Optional Title Here&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;symbol&quot;&gt;foo&lt;/span&gt;]: &lt;span class=&quot;link&quot;&gt;http://example.com/  &#39;Optional Title Here&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;symbol&quot;&gt;foo&lt;/span&gt;]: &lt;span class=&quot;link&quot;&gt;http://example.com/  (Optional Title Here)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中[id]可以包含数字、字母、空格、标点符号，但是大小写不敏感。&lt;/p&gt;
&lt;p&gt;（3），可以隐性定义引用链接：（链接的Label用作id）&lt;br&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;I get 10 times more traffic from [&lt;span class=&quot;string&quot;&gt;Google&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;&lt;/span&gt;] than from&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;string&quot;&gt;Yahoo&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;&lt;/span&gt;] or [&lt;span class=&quot;string&quot;&gt;MSN&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;&lt;/span&gt;].&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [google]: http://google.com/        &quot;Google&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [yahoo]:  http://search.yahoo.com/  &quot;Yahoo Search&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [msn]:    http://search.msn.com/    &quot;MSN Search&quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果如下：&lt;br&gt;I get 10 times more traffic from &lt;a href=&quot;http://google.com/&quot; title=&quot;Google&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Google&lt;/a&gt; than from&lt;br&gt;&lt;a href=&quot;http://search.yahoo.com/&quot; title=&quot;Yahoo Search&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Yahoo&lt;/a&gt; or &lt;a href=&quot;http://search.msn.com/&quot; title=&quot;MSN Search&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MSN&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;强调（EMPHASIS）&quot;&gt;&lt;a href=&quot;#强调（EMPHASIS）&quot; class=&quot;headerlink&quot; title=&quot;强调（EMPHASIS）&quot;&gt;&lt;/a&gt;强调（EMPHASIS）&lt;/h3&gt;&lt;p&gt;markdown把用*和下划线_包裹的文本作为强调文本：&lt;br&gt;&lt;figure class=&quot;highlight maxima&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;*单星*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;_&lt;/span&gt;单下划线&lt;span class=&quot;symbol&quot;&gt;_&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;**双星**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;__&lt;/span&gt;双下划线&lt;span class=&quot;symbol&quot;&gt;__&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果如下：&lt;br&gt;&lt;em&gt;单星&lt;/em&gt;&lt;br&gt;&lt;em&gt;单下划线&lt;/em&gt;&lt;br&gt;&lt;strong&gt;双星&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;双下划线&lt;/strong&gt;&lt;br&gt;强调可以加载文字中间：&lt;br&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;un&lt;span class=&quot;emphasis&quot;&gt;*frigging*&lt;/span&gt;believable&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果是：&lt;br&gt;un&lt;em&gt;frigging&lt;/em&gt;believable&lt;br&gt;要书写字面量*，则需要用反斜杠:&lt;br&gt;&lt;figure class=&quot;highlight kotlin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;\*&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt; text &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; surrounded &lt;span class=&quot;keyword&quot;&gt;by&lt;/span&gt; literal asterisks\*&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;*this text is surrounded by literal asterisks*&lt;/p&gt;
&lt;h3 id=&quot;代码（CODE）&quot;&gt;&lt;a href=&quot;#代码（CODE）&quot; class=&quot;headerlink&quot; title=&quot;代码（CODE）&quot;&gt;&lt;/a&gt;代码（CODE）&lt;/h3&gt;&lt;p&gt;使用反引号（backtick,`)来包裹一段代码：Use the &lt;code&gt;printf()&lt;/code&gt; function.&lt;br&gt;&lt;figure class=&quot;highlight fortran&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Use&lt;/span&gt; the `printf()` &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;为了在代码中使用反引号字面量，可以用多个反引号包裹代码：&lt;br&gt;&lt;figure class=&quot;highlight autohotkey&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;``There is &lt;span class=&quot;literal&quot;&gt;a&lt;/span&gt; literal backtick (`) here.``&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面代码示例在我的markdwon源文件里面是用三个反引号包裹的，它产生html：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;p&amp;gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;code&lt;/span&gt;&amp;gt;&lt;/span&gt;There is a literal backtick (`) here.&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;code&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在code span中，这几个符号：&amp;amp;、&amp;lt; 、 &amp;gt;都会被自动转义成（同代码块）&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Please don&#39;t &lt;span class=&quot;keyword&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;`&amp;lt;blink&amp;gt;`&lt;/span&gt; tags.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;会被转义成：&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;Please don&#39;t use any &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;code&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;amp;lt;blink&amp;amp;gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;code&lt;/span&gt;&amp;gt;&lt;/span&gt; tags.&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;图片（IMAGES）&quot;&gt;&lt;a href=&quot;#图片（IMAGES）&quot; class=&quot;headerlink&quot; title=&quot;图片（IMAGES）&quot;&gt;&lt;/a&gt;图片（IMAGES）&lt;/h3&gt;&lt;p&gt;markdwon中有两种图片的标签：&lt;em&gt;inline and reference&lt;/em&gt;。&lt;br&gt;Inline图片语法是这样的：（注意惊叹号，中括号中指定图片的&lt;code&gt;alt&lt;/code&gt;属性，小括号是图片的URL外加一个可选的&lt;code&gt;title&lt;/code&gt;属性）&lt;br&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;![&lt;span class=&quot;string&quot;&gt;Alt text&lt;/span&gt;](&lt;span class=&quot;link&quot;&gt;/path/to/img.jpg&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;![&lt;span class=&quot;string&quot;&gt;Alt text&lt;/span&gt;](&lt;span class=&quot;link&quot;&gt;/path/to/img.jpg &quot;Optional title&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Reference-style图片语法是这样的：（同样是惊叹号，中括号中指定图片的&lt;code&gt;alt&lt;/code&gt;属性，又一个中括号指定引用id）&lt;br&gt;&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;![&lt;span class=&quot;string&quot;&gt;Alt text&lt;/span&gt;][&lt;span class=&quot;symbol&quot;&gt;id&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;图片引用这么写：&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[&lt;span class=&quot;built_in&quot;&gt;id&lt;/span&gt;]: url/&lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt;/image  &lt;span class=&quot;string&quot;&gt;&quot;Optional title attribute&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;markdown中无法指定图片的尺寸，如果尺寸很重要的话，可以直接使用&amp;lt;img&amp;gt;标签。&lt;/p&gt;
&lt;h2 id=&quot;杂项（Miscellaneous）&quot;&gt;&lt;a href=&quot;#杂项（Miscellaneous）&quot; class=&quot;headerlink&quot; title=&quot;杂项（Miscellaneous）&quot;&gt;&lt;/a&gt;杂项（Miscellaneous）&lt;/h2&gt;&lt;h3 id=&quot;自动链接（AUTOMATIC-LINKS）&quot;&gt;&lt;a href=&quot;#自动链接（AUTOMATIC-LINKS）&quot; class=&quot;headerlink&quot; title=&quot;自动链接（AUTOMATIC LINKS）&quot;&gt;&lt;/a&gt;自动链接（AUTOMATIC LINKS）&lt;/h3&gt;&lt;figure class=&quot;highlight groovy&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;string&quot;&gt;http:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//example.com/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;产生：&lt;br&gt;&lt;figure class=&quot;highlight stylus&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt; href=&lt;span class=&quot;string&quot;&gt;&quot;http://example.com/&quot;&lt;/span&gt;&amp;gt;http:&lt;span class=&quot;comment&quot;&gt;//example.com/&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果：&lt;a href=&quot;http://example.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://example.com/&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;&lt;span class=&quot;selector-tag&quot;&gt;address&lt;/span&gt;@&lt;span class=&quot;keyword&quot;&gt;example&lt;/span&gt;.&lt;span class=&quot;keyword&quot;&gt;com&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;产生：&lt;br&gt;&lt;figure class=&quot;highlight gcode&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;a href=&lt;span class=&quot;string&quot;&gt;&quot;&amp;amp;#x6D;&amp;amp;#x61;i&amp;amp;#x6C;&amp;amp;#x74;&amp;amp;#x6F;:&amp;amp;#x61;&amp;amp;#x64;&amp;amp;#x64;&amp;amp;#x72;&amp;amp;#x65;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;amp;#115;&amp;amp;#115;&amp;amp;#64;&amp;amp;#101;&amp;amp;#120;&amp;amp;#x61;&amp;amp;#109;&amp;amp;#x70;&amp;amp;#x6C;e&amp;amp;#x2E;&amp;amp;#99;&amp;amp;#111;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;amp;#109;&quot;&lt;/span&gt;&amp;gt;&amp;amp;&lt;span class=&quot;attr&quot;&gt;#x61&lt;/span&gt;;&amp;amp;&lt;span class=&quot;attr&quot;&gt;#x64&lt;/span&gt;;&amp;amp;&lt;span class=&quot;attr&quot;&gt;#x64&lt;/span&gt;;&amp;amp;&lt;span class=&quot;attr&quot;&gt;#x72&lt;/span&gt;;&amp;amp;&lt;span class=&quot;attr&quot;&gt;#x65&lt;/span&gt;;&amp;amp;&lt;span class=&quot;attr&quot;&gt;#115&lt;/span&gt;;&amp;amp;&lt;span class=&quot;attr&quot;&gt;#115&lt;/span&gt;;&amp;amp;&lt;span class=&quot;attr&quot;&gt;#64&lt;/span&gt;;&amp;amp;&lt;span class=&quot;attr&quot;&gt;#101&lt;/span&gt;;&amp;amp;&lt;span class=&quot;attr&quot;&gt;#120&lt;/span&gt;;&amp;amp;&lt;span class=&quot;attr&quot;&gt;#x61&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;amp;&lt;span class=&quot;attr&quot;&gt;#109&lt;/span&gt;;&amp;amp;&lt;span class=&quot;attr&quot;&gt;#x70&lt;/span&gt;;&amp;amp;&lt;span class=&quot;attr&quot;&gt;#x6&lt;/span&gt;C;e&amp;amp;&lt;span class=&quot;attr&quot;&gt;#x2&lt;/span&gt;E;&amp;amp;&lt;span class=&quot;attr&quot;&gt;#99&lt;/span&gt;;&amp;amp;&lt;span class=&quot;attr&quot;&gt;#111&lt;/span&gt;;&amp;amp;&lt;span class=&quot;attr&quot;&gt;#109&lt;/span&gt;;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;&amp;#109;&amp;#x61;&amp;#105;&amp;#108;&amp;#x74;&amp;#x6f;&amp;#58;&amp;#x61;&amp;#x64;&amp;#100;&amp;#x72;&amp;#101;&amp;#x73;&amp;#115;&amp;#x40;&amp;#101;&amp;#120;&amp;#97;&amp;#109;&amp;#x70;&amp;#x6c;&amp;#101;&amp;#46;&amp;#99;&amp;#x6f;&amp;#109;&quot;&gt;&amp;#x61;&amp;#x64;&amp;#100;&amp;#x72;&amp;#101;&amp;#x73;&amp;#115;&amp;#x40;&amp;#101;&amp;#120;&amp;#97;&amp;#109;&amp;#x70;&amp;#x6c;&amp;#101;&amp;#46;&amp;#99;&amp;#x6f;&amp;#109;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;反斜线（BACKSLASH-ESCAPES）&quot;&gt;&lt;a href=&quot;#反斜线（BACKSLASH-ESCAPES）&quot; class=&quot;headerlink&quot; title=&quot;反斜线（BACKSLASH ESCAPES）&quot;&gt;&lt;/a&gt;反斜线（BACKSLASH ESCAPES）&lt;/h3&gt;&lt;p&gt;markdwon可以用反斜杠来生成一些字面量：&lt;/p&gt;
&lt;figure class=&quot;highlight armasm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;\   &lt;span class=&quot;keyword&quot;&gt;backslash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;`   &lt;span class=&quot;keyword&quot;&gt;backtick&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;*   asterisk&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;_   underscore&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;#125;  curly &lt;span class=&quot;keyword&quot;&gt;braces&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;[]  square &lt;span class=&quot;keyword&quot;&gt;brackets&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;()  parentheses&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#   hash &lt;span class=&quot;keyword&quot;&gt;mark&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;+   plus sign&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;-   minus sign (hyphen)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.   dot&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;!   exclamation &lt;span class=&quot;keyword&quot;&gt;mark&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;效果：&lt;/p&gt;
&lt;p&gt;\&lt;br&gt;`&lt;br&gt;*&lt;br&gt;_&lt;br&gt;{}&lt;br&gt;[]&lt;br&gt;()&lt;br&gt;#&lt;br&gt;+&lt;br&gt;-&lt;br&gt;.&lt;br&gt;!&lt;/p&gt;
&lt;h3 id=&quot;锚点&quot;&gt;&lt;a href=&quot;#锚点&quot; class=&quot;headerlink&quot; title=&quot;锚点&quot;&gt;&lt;/a&gt;锚点&lt;/h3&gt;&lt;p&gt;（1）标题默认做锚点。&lt;br&gt;使用&lt;br&gt;&lt;figure class=&quot;highlight vala&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;## HeaderName&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;生成的标题都会用一个&lt;code&gt;id=&amp;quot;HeaderName&amp;quot;&lt;/code&gt;的元素包裹。同一页面可以用这样引用：&lt;code&gt;[link text](#HeaderName)&lt;/code&gt;，其他页面可以这样引用：&lt;code&gt;[link text](http://...#HeaderName)&lt;/code&gt;。&lt;br&gt;也可以直接使用&lt;code&gt;[Header Name][]&lt;/code&gt;引用这个标题。&lt;/p&gt;
&lt;p&gt;（2）使用&lt;code&gt;&amp;lt;a name=&amp;quot;abcd&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;创建锚点：&lt;br&gt;&lt;figure class=&quot;highlight apache&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#### &amp;lt;a name=&quot;header1234&quot;&amp;gt;&amp;lt;/a&amp;gt;A Heading in this SO entry!&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;produces:&lt;/p&gt;
&lt;h4 id=&quot;A-Heading-in-this-SO-entry&quot;&gt;&lt;a href=&quot;#A-Heading-in-this-SO-entry&quot; class=&quot;headerlink&quot; title=&quot;A Heading in this SO entry!&quot;&gt;&lt;/a&gt;&lt;a name=&quot;header1234&quot;&gt;&lt;/a&gt;A Heading in this SO entry!&lt;/h4&gt;&lt;p&gt;然后可以通过下面的方式链接到这里：&lt;/p&gt;
&lt;figure class=&quot;highlight markdown&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Click [&lt;span class=&quot;string&quot;&gt;Here&lt;/span&gt;](&lt;span class=&quot;link&quot;&gt;#header1234&lt;/span&gt;) to link&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Click &lt;a href=&quot;#header1234&quot;&gt;Here&lt;/a&gt; to link&lt;br&gt;  也可以使用&lt;code&gt;&amp;lt;a id=&amp;quot;abcd&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/code&gt;创建锚点，但不推荐，原因看&lt;a href=&quot;http://stackoverflow.com/a/7335259/57171&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;#MultiMarkdownOverview&quot;&gt;链接到标题锚点&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;GitHub-Flavored-Markdown&quot;&gt;&lt;a href=&quot;#GitHub-Flavored-Markdown&quot; class=&quot;headerlink&quot; title=&quot;GitHub Flavored Markdown&quot;&gt;&lt;/a&gt;GitHub Flavored Markdown&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://help.github.com/articles/github-flavored-markdown/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub Flavored Markdown&lt;/a&gt;(缩写为GFM)是标准markdwon的一个扩展集，在github上面大放异彩。&lt;/p&gt;
&lt;h2 id=&quot;与传统Markdwon的区别&quot;&gt;&lt;a href=&quot;#与传统Markdwon的区别&quot; class=&quot;headerlink&quot; title=&quot;与传统Markdwon的区别&quot;&gt;&lt;/a&gt;与传统Markdwon的区别&lt;/h2&gt;&lt;h3 id=&quot;文字中的下划线&quot;&gt;&lt;a href=&quot;#文字中的下划线&quot; class=&quot;headerlink&quot; title=&quot;文字中的下划线&quot;&gt;&lt;/a&gt;文字中的下划线&lt;/h3&gt;&lt;p&gt;Markdown会把下划线(&lt;code&gt;_&lt;/code&gt;)包裹的文本转换成斜体，但GFM会忽略文字中的下划线，比如：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wow_great_stuff&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;_this_and_&lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt;_that_and_another_thing.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果需要强调时，请用星号(&lt;code&gt;*&lt;/code&gt;)&lt;/p&gt;
&lt;h3 id=&quot;URL自动链接&quot;&gt;&lt;a href=&quot;#URL自动链接&quot; class=&quot;headerlink&quot; title=&quot;URL自动链接&quot;&gt;&lt;/a&gt;URL自动链接&lt;/h3&gt;&lt;p&gt;GFM对标准的URLs会自动生成链接，比如：&lt;br&gt;&lt;figure class=&quot;highlight dts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;http:&lt;/span&gt;&lt;span class=&quot;comment&quot;&gt;//example.com&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;会变成：&lt;br&gt;&lt;a href=&quot;http://example.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://example.com&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;中划线（Strikethrough&quot;&gt;&lt;a href=&quot;#中划线（Strikethrough&quot; class=&quot;headerlink&quot; title=&quot;中划线（Strikethrough)&quot;&gt;&lt;/a&gt;中划线（Strikethrough)&lt;/h3&gt;&lt;p&gt;GFM添加了中划线的语法：&lt;br&gt;&lt;figure class=&quot;highlight applescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~~Mistaken &lt;span class=&quot;built_in&quot;&gt;text&lt;/span&gt;.~~&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;变成：&lt;br&gt;&lt;del&gt;Mistaken text.&lt;/del&gt;&lt;/p&gt;
&lt;h3 id=&quot;包裹的代码块（Fenced-code-blocks）&quot;&gt;&lt;a href=&quot;#包裹的代码块（Fenced-code-blocks）&quot; class=&quot;headerlink&quot; title=&quot;包裹的代码块（Fenced code blocks）&quot;&gt;&lt;/a&gt;包裹的代码块（Fenced code blocks）&lt;/h3&gt;&lt;p&gt;标准Markdown中用空行，4个空格（或tab）缩进来代表代码块，GFM使用三个反引号包裹代码块(```)&lt;/p&gt;
&lt;h3 id=&quot;语法高亮（Syntax-highlighting）&quot;&gt;&lt;a href=&quot;#语法高亮（Syntax-highlighting）&quot; class=&quot;headerlink&quot; title=&quot;语法高亮（Syntax highlighting）&quot;&gt;&lt;/a&gt;语法高亮（Syntax highlighting）&lt;/h3&gt;&lt;p&gt;下面代码是一段ruby的代码：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;redcarpet&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;markdown = Redcarpet.new(&lt;span class=&quot;string&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;puts markdown.to_html&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;表格（Tables）&quot;&gt;&lt;a href=&quot;#表格（Tables）&quot; class=&quot;headerlink&quot; title=&quot;表格（Tables）&quot;&gt;&lt;/a&gt;表格（Tables）&lt;/h3&gt;&lt;p&gt;用破折号隔离表头和表体，用pipe(|) 隔离每一列：&lt;br&gt;&lt;figure class=&quot;highlight mathematica&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;First&lt;/span&gt; Header  | Second Header&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;------------- | -------------&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Content &lt;span class=&quot;keyword&quot;&gt;Cell&lt;/span&gt;  | Content &lt;span class=&quot;keyword&quot;&gt;Cell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Content &lt;span class=&quot;keyword&quot;&gt;Cell&lt;/span&gt;  | Content &lt;span class=&quot;keyword&quot;&gt;Cell&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果：（要加空行）&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;First Header&lt;/th&gt;
&lt;th&gt;Second Header&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;td&gt;Content Cell&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;也可以更加美观：&lt;br&gt;&lt;figure class=&quot;highlight gherkin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; First Header  &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Second Header &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; ------------- &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; ------------- &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; Content Cell  &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Content Cell  &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; Content Cell  &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Content Cell  &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注意，破折号的长度不需要匹配表头长度：&lt;br&gt;&lt;figure class=&quot;highlight gherkin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; Name &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Description          &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; ------------- &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; ----------- &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; Help      &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Display the help window.&lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;|&lt;span class=&quot;string&quot;&gt; Close     &lt;/span&gt;|&lt;span class=&quot;string&quot;&gt; Closes a window     &lt;/span&gt;|&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以在单元格里面使用内联Markdown标签：链接、粗体、斜体、中划线，等：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;http://example.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Help&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;del&gt;Display the&lt;/del&gt; help window.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Close&lt;/td&gt;
&lt;td&gt;&lt;em&gt;Closes&lt;/em&gt; a window&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;可以用冒号（:）来定义列的对其方式：&lt;br&gt;&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;| Left-Aligned  | Center Aligned  | Right Aligned |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| &lt;span class=&quot;symbol&quot;&gt;:------------&lt;/span&gt; |&lt;span class=&quot;symbol&quot;&gt;:---------------&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:|&lt;/span&gt; -----&lt;span class=&quot;symbol&quot;&gt;:|&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| col &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; is      | some wordy text | &lt;span class=&quot;variable&quot;&gt;$1600&lt;/span&gt; |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| col &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; is      | centered        |   &lt;span class=&quot;variable&quot;&gt;$12&lt;/span&gt; |&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;| zebra stripes | are neat        |    &lt;span class=&quot;variable&quot;&gt;$1&lt;/span&gt; |&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;效果如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:left&quot;&gt;Left-Aligned&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Center Aligned&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;Right Aligned&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;col 3 is&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;some wordy text&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$1600&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;col 2 is&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;centered&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:left&quot;&gt;zebra stripes&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;are neat&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&quot;HTML&quot;&gt;&lt;a href=&quot;#HTML&quot; class=&quot;headerlink&quot; title=&quot;HTML&quot;&gt;&lt;/a&gt;HTML&lt;/h3&gt;&lt;p&gt;可以使用一个HTML的子集，所有支持的标签和属性可以在&lt;a href=&quot;https://github.com/github/markup&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github/markup repository&lt;/a&gt;找到。&lt;/p&gt;
&lt;h2 id=&quot;扩展阅读&quot;&gt;&lt;a href=&quot;#扩展阅读&quot; class=&quot;headerlink&quot; title=&quot;扩展阅读&quot;&gt;&lt;/a&gt;扩展阅读&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://help.github.com/articles/writing-on-github/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;“Writing on GitHub”&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Markdown编辑器推荐&quot;&gt;&lt;a href=&quot;#Markdown编辑器推荐&quot; class=&quot;headerlink&quot; title=&quot;Markdown编辑器推荐&quot;&gt;&lt;/a&gt;Markdown编辑器推荐&lt;/h1&gt;&lt;p&gt;目前为止，我使用Markdown体验最好的是:&lt;a href=&quot;http://www.sublimetext.com/3&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Sublime Text 3&lt;/a&gt; + &lt;strong&gt;Markdown Editing&lt;/strong&gt;,&lt;a href=&quot;http://www.cnblogs.com/IPrograming/p/Sublime-markdown-editor.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里有篇文章介绍&lt;/a&gt;，基本的Markdown标签都是所见即所得的：&lt;br&gt;&lt;img src=&quot;http://images.cnitblog.com/blog2015/294941/201504/251326002036398.png&quot; alt=&quot;示例图片&quot;&gt;&lt;/p&gt;
&lt;p&gt;另外，我也试过Webstorm和eclipse的插件，感觉没那么好用，最大的区别就是，这些工具都有两个窗口：一个源码Editor窗口，一个Preview窗口。&lt;/p&gt;
&lt;p&gt;webstorm&lt;br&gt;&lt;a href=&quot;http://blog.fens.me/webstorm-markdown/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.fens.me/webstorm-markdown/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;eclipse plugin 编辑和查看：&lt;br&gt;&lt;a href=&quot;https://github.com/winterstein/Eclipse-Markdown-Editor-Plugin&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/winterstein/Eclipse-Markdown-Editor-Plugin&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://marketplace.eclipse.org/content/markdown-text-editor&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://marketplace.eclipse.org/content/markdown-text-editor&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://marketplace.eclipse.org/content/github-flavored-markdown-viewer-plugin-eclipse&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://marketplace.eclipse.org/content/github-flavored-markdown-viewer-plugin-eclipse&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当然sublime text 3 + Markdown Editing 配合 hexo 是目前我采用的方式。&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      介绍了标准Markdown语法和GitHub Flavored Markdown (GFM)，并推荐了一款Markdown编辑器
    
    </summary>
    
      <category term="工具" scheme="http://debug4.me/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="工具" scheme="http://debug4.me/tags/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="markdown" scheme="http://debug4.me/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hell World</title>
    <link href="http://debug4.me/%E5%B7%A5%E5%85%B7/hello-world/"/>
    <id>http://debug4.me/工具/hello-world/</id>
    <published>2015-09-25T11:14:17.000Z</published>
    <updated>2016-06-12T15:21:35.747Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;http://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;http://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;http://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;http://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;http://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;http://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
      <category term="工具" scheme="http://debug4.me/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Get Started" scheme="http://debug4.me/tags/Get-Started/"/>
    
      <category term="hexo" scheme="http://debug4.me/tags/hexo/"/>
    
      <category term="jacman" scheme="http://debug4.me/tags/jacman/"/>
    
  </entry>
  
  <entry>
    <title>第一篇日志</title>
    <link href="http://debug4.me/%E5%B7%A5%E5%85%B7/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%97%A5%E5%BF%97/"/>
    <id>http://debug4.me/工具/第一篇日志/</id>
    <published>2015-09-25T11:14:17.000Z</published>
    <updated>2016-06-12T15:21:35.750Z</updated>
    
    <content type="html">&lt;p&gt;这是&lt;strong&gt;新的开始&lt;/strong&gt;，我用hexo创建了第一篇文章。&lt;/p&gt;
&lt;p&gt;通过下面的命令，就可以创建新文章&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;D:\workspace\javascript\nodejs-hexo&amp;gt;hexo new 新的开始&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[info] File created at D:\workspace\javascript\nodejs-hexo\&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;\_posts\新的开始.md&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;感觉非常好。&lt;/p&gt;
&lt;p&gt;在命令行，启动服务器:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;D:\workspace\javascript\nodejs-hexo&amp;gt;hexo server&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[info] Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通过浏览器打开， &lt;a href=&quot;http://localhost:4000/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000/&lt;/a&gt; ，就出现了我们新写的文章。&lt;/p&gt;
&lt;h2 id=&quot;引用&quot;&gt;&lt;a href=&quot;#引用&quot; class=&quot;headerlink&quot; title=&quot;引用&quot;&gt;&lt;/a&gt;引用&lt;/h2&gt;&lt;blockquote&gt;&lt;p&gt;Every interaction is both precious and an opportunity to delight.&lt;/p&gt;
&lt;footer&gt;&lt;strong&gt;Seth Godin&lt;/strong&gt;&lt;cite&gt;&lt;a href=&quot;http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Welcome to Island Marketing&lt;/a&gt;&lt;/cite&gt;&lt;/footer&gt;&lt;/blockquote&gt;
&lt;h2 id=&quot;代码块&quot;&gt;&lt;a href=&quot;#代码块&quot; class=&quot;headerlink&quot; title=&quot;代码块&quot;&gt;&lt;/a&gt;代码块&lt;/h2&gt;&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;figcaption&gt;&lt;span&gt;.compact&lt;/span&gt;&lt;a href=&quot;http://underscorejs.org/#compact&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Underscore.js&lt;/a&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;.compact([&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, ‘’, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;=&amp;gt; [&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;链接&quot;&gt;&lt;a href=&quot;#链接&quot; class=&quot;headerlink&quot; title=&quot;链接&quot;&gt;&lt;/a&gt;链接&lt;/h2&gt;&lt;a href=&quot;http://cwjcsu.github.io&quot; title=&quot;粉丝日志&quot; target=&quot;_blank&quot;&gt;粉丝日志&lt;/a&gt;
&lt;h2 id=&quot;数学公式&quot;&gt;&lt;a href=&quot;#数学公式&quot; class=&quot;headerlink&quot; title=&quot;数学公式&quot;&gt;&lt;/a&gt;数学公式&lt;/h2&gt;&lt;p&gt;$$J_\alpha(x)=\sum _{m=0}^\infty \frac{(-1)^ m}{m! \, \Gamma (m + \alpha + 1)}{\left({\frac{x}{2}}\right)}^{2 m + \alpha }$$&lt;/p&gt;
&lt;h2 id=&quot;图片&quot;&gt;&lt;a href=&quot;#图片&quot; class=&quot;headerlink&quot; title=&quot;图片&quot;&gt;&lt;/a&gt;图片&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xn1o8.com1.z0.glb.clouddn.com/banner.jpg&quot; alt=&quot;猜一猜这是哪里？&quot;&gt;&lt;/p&gt;
&lt;p&gt;TODO&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这是&lt;strong&gt;新的开始&lt;/strong&gt;，我用hexo创建了第一篇文章。&lt;/p&gt;
&lt;p&gt;通过下面的命令，就可以创建新文章&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;D:\workspace\javascript\nodejs-hexo&amp;gt;hexo new 新的开始&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[info] File created at D:\workspace\javascript\nodejs-hexo\&lt;span class=&quot;built_in&quot;&gt;source&lt;/span&gt;\_posts\新的开始.md&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="工具" scheme="http://debug4.me/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Get Started" scheme="http://debug4.me/tags/Get-Started/"/>
    
      <category term="hexo" scheme="http://debug4.me/tags/hexo/"/>
    
      <category term="jacman" scheme="http://debug4.me/tags/jacman/"/>
    
  </entry>
  
</feed>
